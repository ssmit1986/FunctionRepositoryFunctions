Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "FunctionRepo`"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",ExpressionUUID->"db0bf3fb-3968-4b36-8211-5cb1fa482ae8"],

Cell[CellGroupData[{

Cell["conditionedMultinormalDistribution", \
"Subsection",ExpressionUUID->"d74078a0-641e-4aa0-a1a8-445f4149fb05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "conditionedMultinormalDistribution"}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"0784d209-d22f-45cd-b95f-ceab89a70fef"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"conditionedMultinormalDistribution[dist, {i1 -> \
val1, ...}, {j1, j2, ...}] gives the {j1, j2, ...} marginal of dist when the \
indices {i1, ...} are conditioned to values {val1, ...}\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist_", ",", 
                    RowBox[{"{", "}"}]}], "]"}], ":=", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist"}]},
                    {
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist_", ",", 
                    RowBox[{"{", "}"}], ",", "All"}], "]"}], ":=", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist"}]},
                    {
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist_", ",", 
                    RowBox[{"{", "}"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals_"}], "]"}], ":=", 
                    RowBox[{"MarginalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist_", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rule_Rule", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rest___"}], "]"}], ":=", 
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "Thread", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rule", "]"}], "}"}], "]"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"MultinormalDistribution"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[MultinormalDistribution]"], "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov_", "?", "SquareMatrixQ"}], "]"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rest___"}], "]"}], ":=", 
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"MultinormalDistribution"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[MultinormalDistribution]"], "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "]"}]}], "]"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov"}], "]"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
head", ":", "MultinormalDistribution"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu_", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`cov_"}], 
                    "]"}], ")"}], "?", "DistributionParameterQ"}], "|", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
head", ":", 
                    RowBox[{
                    "Inactive", "[", "MultinormalDistribution", "]"}]}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu_", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`cov_"}], 
                    "]"}], "/;", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
lm", "=", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu", "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
lm", "===", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "]"}]}], "&&", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
lm", ">", "1"}]}]}], "]"}]}], ")"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_Integer", "\[Rule]", "_"}], ")"}], ".."}], 
                    "}"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals", ":", 
                    RowBox[{"_Integer", "|", 
                    RowBox[{"{", "__Integer", "}"}], "|", "All"}], ":", 
                    "All"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
eval", "=", 
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`cov"}], 
                    "}"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`cov"}], 
                    "}"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
m_", "?", "VectorQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
c_", "?", "MatrixQ"}]}], "}"}], "\[RuleDelayed]", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
head", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
m", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`c"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
m_", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`var_"}], 
                    "}"}], "\[RuleDelayed]", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
m", ",", 
                    SqrtBox[
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
var"]}], "]"}]}]}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    "ListQ", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
eval", "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"conditionedMultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu_", "?", "VectorQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov_", "?", "SquareMatrixQ"}]}], "}"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_Integer", "\[Rule]", "_"}], ")"}], ".."}], 
                    "}"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals", ":", 
                    RowBox[{"_Integer", "|", 
                    RowBox[{"{", "__Integer", "}"}], "|", "All"}], ":", 
                    "All"}]}], "]"}], "/;", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"DuplicateFreeQ", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals"}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{"False", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    "conditionedMultinormalDistribution", "::", "dupIndex"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals"}], "]"}], ";", "False"}], ")"}]}]}], "]"}]}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dim", "=", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu", "]"}]}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rulesNoDup", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`dist", 
                    ",", "FunctionRepo`conditionedMultinormalDistribution`\
Private`sparseQ", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
numericQ"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
sparseQ", "=", 
                    RowBox[{
                    RowBox[{
                    "Head", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "]"}], "===", "SparseArray"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ", "=", 
                    RowBox[{
                    RowBox[{
                    "Head", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "]"}], "===", "StructuredArray"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rulesNoDup", "=", 
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "FunctionRepo`conditionedMultinormalDistribution`Private`\
dim", ",", "1"}], "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop", "=", 
                    RowBox[{
                    "Keys", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rulesNoDup", "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues", "=", 
                    RowBox[{
                    "Values", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rulesNoDup", "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
numericQ", "=", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", ",", "NumericQ"}], "]"}], "&&", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues", ",", "NumericQ"}], "]"}]}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"All", "\[RuleDelayed]", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{
                    "Range", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dim", "]"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop"}], "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
i_Integer", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
i", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`dim", ",", 
                    "1"}], "]"}], "}"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
ints_List", "\[RuleDelayed]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
ints", ",", "FunctionRepo`conditionedMultinormalDistribution`Private`dim", 
                    ",", "1"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
mu", "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop"}], "}"}]}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop", ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop"}], "\[RightDoubleBracket]"}]}], "}"}]}], "}"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
numericQ", "&&", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
sparseQ"}], ",", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
numericQ", "&&", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ"}], ",", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "]"}], ",", "True", ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv", "=", 
                    RowBox[{"Inverse", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv", ".", "#1"}], "&"}]}], "]"}]}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues", "-", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ".", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
sparseQ", ",", 
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
m_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{"#1", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], 
                    "\[RuleDelayed]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
m", "]"}], "+", "FunctionRepo`conditionedMultinormalDistribution`Private`m"}],
                     "2"]}]}], "]"}]}], "}"}], ",", 
                    StyleBox[
                    RowBox[{"LinearSolve", "::", "exanexb"}], 
                    "MessageName"]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "IntegerQ", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals", "]"}], ",", 
                    RowBox[{
                    "Flatten", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist", "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ", ",", 
                    RowBox[{"MapAt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SymmetrizedArray", "[", 
                    RowBox[{"#1", ",", "Automatic", ",", 
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "]"}], "&"}], 
                    ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist", ",", "2"}], "]"}], ",", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dist"}], "]"}]}], "]"}]}], ")"}], "/;", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", "]"}], "<", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dim"}], ",", 
                    RowBox[{"False", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    "conditionedMultinormalDistribution", "::", "noDim"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
rules", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], ";", "False"}], ")"}]}]}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
cov", "]"}], "===", 
                    "FunctionRepo`conditionedMultinormalDistribution`Private`\
dim"}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"FunctionRepo`conditionedMultinormalDistribution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"conditionedMultinormalDistribution[dist, {i1 -> \
val1, ...}, {j1, j2, ...}] gives the {j1, j2, ...} marginal of dist when the \
indices {i1, ...} are conditioned to values {val1, ...}\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "conditionedMultinormalDistribution[dist, {i1 -> val1, ...}, {j1, j2, \
...}] gives the {j1, j2, ...} marginal of dist when the indices {i1, ...} are \
conditioned to values {val1, ...}", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`conditionedMultinormalDistribution, {
      FunctionRepo`conditionedMultinormalDistribution[
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
          Blank[]], {}] :> 
       FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
       FunctionRepo`conditionedMultinormalDistribution[
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
          Blank[]], {}, All] :> 
       FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
       FunctionRepo`conditionedMultinormalDistribution[
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
          Blank[]], {}, 
         Pattern[
         FunctionRepo`conditionedMultinormalDistribution`Private`marginals, 
          Blank[]]] :> 
       MarginalDistribution[
        FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
         FunctionRepo`conditionedMultinormalDistribution`Private`marginals], 
       FunctionRepo`conditionedMultinormalDistribution[
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
          Blank[]], 
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`rule, 
          Blank[Rule]], 
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`rest, 
          BlankNullSequence[]]] :> 
       FunctionRepo`conditionedMultinormalDistribution[
        FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
         Flatten[{
           Thread[
           FunctionRepo`conditionedMultinormalDistribution`Private`rule]}], 
         FunctionRepo`conditionedMultinormalDistribution`Private`rest], 
       FunctionRepo`conditionedMultinormalDistribution[
         Inactive[MultinormalDistribution][
          PatternTest[
           Pattern[
           FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
            Blank[]], SquareMatrixQ]], 
         Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`rest, 
          BlankNullSequence[]]] :> 
       FunctionRepo`conditionedMultinormalDistribution[
         Inactive[MultinormalDistribution][
          ConstantArray[0, 
           Length[
           FunctionRepo`conditionedMultinormalDistribution`Private`cov]], 
          FunctionRepo`conditionedMultinormalDistribution`Private`cov], 
         FunctionRepo`conditionedMultinormalDistribution`Private`rest], 
       FunctionRepo`conditionedMultinormalDistribution[
         Alternatives[
          PatternTest[
           Pattern[
           FunctionRepo`conditionedMultinormalDistribution`Private`head, 
            MultinormalDistribution][
            Pattern[
            FunctionRepo`conditionedMultinormalDistribution`Private`mu, 
             Blank[]], 
            Pattern[
            FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
             Blank[]]], DistributionParameterQ], 
          Condition[
           Pattern[
           FunctionRepo`conditionedMultinormalDistribution`Private`head, 
            Inactive[MultinormalDistribution]][
            Pattern[
            FunctionRepo`conditionedMultinormalDistribution`Private`mu, 
             Blank[]], 
            Pattern[
            FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
             Blank[]]], 
           
           With[{FunctionRepo`conditionedMultinormalDistribution`Private`lm = 
             Length[FunctionRepo`conditionedMultinormalDistribution`Private`\
mu]}, 
            And[
            FunctionRepo`conditionedMultinormalDistribution`Private`lm === 
             Length[FunctionRepo`conditionedMultinormalDistribution`Private`\
cov], FunctionRepo`conditionedMultinormalDistribution`Private`lm > 1]]]], 
         Pattern[
         FunctionRepo`conditionedMultinormalDistribution`Private`rules, {
           Repeated[Blank[Integer] -> Blank[]]}], 
         Optional[
          Pattern[
          FunctionRepo`conditionedMultinormalDistribution`Private`marginals, 
           Alternatives[
            Blank[Integer], {
             BlankSequence[Integer]}, All]], All]] :> 
       With[{FunctionRepo`conditionedMultinormalDistribution`Private`eval = 
          FunctionRepo`conditionedMultinormalDistribution[{
            FunctionRepo`conditionedMultinormalDistribution`Private`mu, 
             FunctionRepo`conditionedMultinormalDistribution`Private`cov}, 
            FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
            FunctionRepo`conditionedMultinormalDistribution`Private`marginals]\
}, 
         Condition[
          Replace[
           
           FunctionRepo`conditionedMultinormalDistribution[{
            FunctionRepo`conditionedMultinormalDistribution`Private`mu, 
             FunctionRepo`conditionedMultinormalDistribution`Private`cov}, 
            FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
            FunctionRepo`conditionedMultinormalDistribution`Private`marginals]\
, {{
              PatternTest[
               Pattern[
               FunctionRepo`conditionedMultinormalDistribution`Private`m, 
                Blank[]], VectorQ], 
              PatternTest[
               Pattern[
               FunctionRepo`conditionedMultinormalDistribution`Private`c, 
                Blank[]], MatrixQ]} :> 
            FunctionRepo`conditionedMultinormalDistribution`Private`head[
             FunctionRepo`conditionedMultinormalDistribution`Private`m, 
              FunctionRepo`conditionedMultinormalDistribution`Private`c], {
              Pattern[
              FunctionRepo`conditionedMultinormalDistribution`Private`m, 
               Blank[]], 
              Pattern[
              FunctionRepo`conditionedMultinormalDistribution`Private`var, 
               Blank[]]} :> 
            NormalDistribution[
             FunctionRepo`conditionedMultinormalDistribution`Private`m, 
              Sqrt[
              FunctionRepo`conditionedMultinormalDistribution`Private`var]]}], 
          ListQ[
          FunctionRepo`conditionedMultinormalDistribution`Private`eval]]], 
       Condition[
         FunctionRepo`conditionedMultinormalDistribution[{
           PatternTest[
            Pattern[
            FunctionRepo`conditionedMultinormalDistribution`Private`mu, 
             Blank[]], VectorQ], 
           PatternTest[
            Pattern[
            FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
             Blank[]], SquareMatrixQ]}, 
          Pattern[
          FunctionRepo`conditionedMultinormalDistribution`Private`rules, {
            Repeated[Blank[Integer] -> Blank[]]}], 
          Optional[
           Pattern[
           FunctionRepo`conditionedMultinormalDistribution`Private`marginals, 
            Alternatives[
             Blank[Integer], {
              BlankSequence[Integer]}, All]], All]], 
         Replace[
          DuplicateFreeQ[
           Flatten[{
             Part[
             FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
              All, 1], 
             FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals}]], False :> (Message[
             MessageName[
             FunctionRepo`conditionedMultinormalDistribution, "dupIndex"], 
             Part[
             FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
              All, 1], 
             FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals]; False)]] :> 
       Module[{FunctionRepo`conditionedMultinormalDistribution`Private`dim = 
          Length[FunctionRepo`conditionedMultinormalDistribution`Private`mu], 
          FunctionRepo`conditionedMultinormalDistribution`Private`indexKeep, 
          FunctionRepo`conditionedMultinormalDistribution`Private`indexDrop, 
          
          FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu, 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 
          FunctionRepo`conditionedMultinormalDistribution`Private`rulesNoDup, 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues, 
          FunctionRepo`conditionedMultinormalDistribution`Private`inv22, 
          FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
          FunctionRepo`conditionedMultinormalDistribution`Private`sparseQ, 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ, 
          FunctionRepo`conditionedMultinormalDistribution`Private`numericQ}, 
         Condition[
         FunctionRepo`conditionedMultinormalDistribution`Private`sparseQ = 
           Head[FunctionRepo`conditionedMultinormalDistribution`Private`cov] === 
            SparseArray; 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ = 
           Head[FunctionRepo`conditionedMultinormalDistribution`Private`cov] === 
            StructuredArray; 
          FunctionRepo`conditionedMultinormalDistribution`Private`rulesNoDup = 
           AssociationThread[
             Mod[
              Part[
              FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
               All, 1], 
              FunctionRepo`conditionedMultinormalDistribution`Private`dim, 1], 
             Part[
             FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
              All, 2]]; 
          FunctionRepo`conditionedMultinormalDistribution`Private`indexDrop = 
           Keys[FunctionRepo`conditionedMultinormalDistribution`Private`\
rulesNoDup]; 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues = 
           Values[FunctionRepo`conditionedMultinormalDistribution`Private`\
rulesNoDup]; 
          FunctionRepo`conditionedMultinormalDistribution`Private`numericQ = 
           And[
             MatrixQ[
             FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
              NumericQ], 
             VectorQ[
             FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues, NumericQ]]; 
          FunctionRepo`conditionedMultinormalDistribution`Private`indexKeep = 
           Replace[FunctionRepo`conditionedMultinormalDistribution`Private`\
marginals, {All :> Complement[
                Range[
                FunctionRepo`conditionedMultinormalDistribution`Private`dim], 
                FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop], Pattern[FunctionRepo`conditionedMultinormalDistribution`Private`i, 
                Blank[Integer]] :> {
                Mod[
                FunctionRepo`conditionedMultinormalDistribution`Private`i, 
                 FunctionRepo`conditionedMultinormalDistribution`Private`dim, 
                 1]}, Pattern[
               FunctionRepo`conditionedMultinormalDistribution`Private`ints, 
                Blank[List]] :> 
              Mod[FunctionRepo`conditionedMultinormalDistribution`Private`\
ints, FunctionRepo`conditionedMultinormalDistribution`Private`dim, 1]}]; 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu = 
           Map[Part[
             FunctionRepo`conditionedMultinormalDistribution`Private`mu, #]& \
, {FunctionRepo`conditionedMultinormalDistribution`Private`indexKeep, 
              FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop}]; 
          FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov = {{
              Part[
              FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
               FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep, FunctionRepo`conditionedMultinormalDistribution`Private`indexKeep], 
              Part[
              FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
               FunctionRepo`conditionedMultinormalDistribution`Private`\
indexKeep, 
               FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop]}, {
              Part[
              FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
               FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop, FunctionRepo`conditionedMultinormalDistribution`Private`indexKeep], 
              Part[
              FunctionRepo`conditionedMultinormalDistribution`Private`cov, 
               
               FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop, 
               FunctionRepo`conditionedMultinormalDistribution`Private`\
indexDrop]}}; 
          FunctionRepo`conditionedMultinormalDistribution`Private`inv22 = 
           Which[
             And[
             FunctionRepo`conditionedMultinormalDistribution`Private`numericQ,
               FunctionRepo`conditionedMultinormalDistribution`Private`\
sparseQ], 
             LinearSolve[
              Part[
              FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 2, 2]], 
             And[
             FunctionRepo`conditionedMultinormalDistribution`Private`numericQ,
               FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ], 
             LinearSolve[
              SparseArray[
               Part[
               FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 2, 2]]], True, 
             
             With[{FunctionRepo`conditionedMultinormalDistribution`Private`\
inv = Inverse[
                 Part[
                 FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 2, 2]]}, Dot[
              FunctionRepo`conditionedMultinormalDistribution`Private`inv, #]& \
]]; FunctionRepo`conditionedMultinormalDistribution`Private`dist = 
           Quiet[{Part[
               FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu, 1] + Dot[
                Part[
                FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 1, 2], 
                FunctionRepo`conditionedMultinormalDistribution`Private`inv22[
                 Subtract[
                 FunctionRepo`conditionedMultinormalDistribution`Private`\
conditionValues, 
                  Part[
                  FunctionRepo`conditionedMultinormalDistribution`Private`\
partitionedMu, 2]]]], 
              Replace[
               Subtract[
                Part[
                FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 1, 1], 
                Dot[
                 Part[
                 FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 1, 2], 
                 If[
                 FunctionRepo`conditionedMultinormalDistribution`Private`\
sparseQ, 
                  SparseArray[
                   
                   FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22[
                    Part[
                    FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 2, 1]]], 
                  
                  FunctionRepo`conditionedMultinormalDistribution`Private`\
inv22[
                   Part[
                   FunctionRepo`conditionedMultinormalDistribution`Private`\
partionedCov, 2, 1]]]]], PatternTest[
                 Pattern[
                 FunctionRepo`conditionedMultinormalDistribution`Private`m, 
                  Blank[]], MatrixQ[#, NumericQ]& ] :> 
               Divide[Transpose[
                  FunctionRepo`conditionedMultinormalDistribution`Private`m] + 
                 FunctionRepo`conditionedMultinormalDistribution`Private`m, 
                 2]]}, 
             MessageName[LinearSolve, "exanexb"]]; If[
            IntegerQ[
            FunctionRepo`conditionedMultinormalDistribution`Private`marginals]\
, 
            Flatten[
            FunctionRepo`conditionedMultinormalDistribution`Private`dist], 
            If[
            FunctionRepo`conditionedMultinormalDistribution`Private`\
symmetrizedQ, 
             MapAt[SymmetrizedArray[#, Automatic, 
               Symmetric[{1, 2}]]& , 
              FunctionRepo`conditionedMultinormalDistribution`Private`dist, 
              2], FunctionRepo`conditionedMultinormalDistribution`Private`\
dist]], 
          And[
           Replace[
           Length[FunctionRepo`conditionedMultinormalDistribution`Private`\
rules] < FunctionRepo`conditionedMultinormalDistribution`Private`dim, 
            False :> (Message[
               MessageName[
               FunctionRepo`conditionedMultinormalDistribution, "noDim"], 
               Part[
               FunctionRepo`conditionedMultinormalDistribution`Private`rules, 
                All, 1]]; False)], 
           Length[FunctionRepo`conditionedMultinormalDistribution`Private`cov]\
 === FunctionRepo`conditionedMultinormalDistribution`Private`dim]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`conditionedMultinormalDistribution"], False]]], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"a5642afc-4346-4103-a484-0eaaad5c7243"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"MultinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalSigma]11", ",", "\[CapitalSigma]12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalSigma]12", ",", "\[CapitalSigma]22"}], "}"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"conditionedMultinormalDistribution", "[", 
  RowBox[{"dist", ",", 
   RowBox[{"2", "\[Rule]", "x2"}]}], "]"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"60977677-8764-4ab8-b907-4aa8c97ceadb"],

Cell[BoxData[
 RowBox[{"MultinormalDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]1", "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "\[Mu]2"}], ")"}], " ", "\[CapitalSigma]12"}], 
      "\[CapitalSigma]22"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[CapitalSigma]11", "-", 
      FractionBox[
       SuperscriptBox["\[CapitalSigma]12", "2"], "\[CapitalSigma]22"]}], 
     "}"}], "}"}]}], "]"}]], "Output",
 CellLabel->"Out[54]=",ExpressionUUID->"c5889b6b-3dba-46f4-be1c-114700a723c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conditionedMultinormalDistribution", "[", 
  RowBox[{"dist", ",", 
   RowBox[{"2", "\[Rule]", "x2"}], ",", "1"}], "]"}]], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"9f2fdb92-19fe-40ec-8bd4-e9ba6c55a6f9"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{
   RowBox[{"\[Mu]1", "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x2", "-", "\[Mu]2"}], ")"}], " ", "\[CapitalSigma]12"}], 
     "\[CapitalSigma]22"]}], ",", 
   SqrtBox[
    RowBox[{"\[CapitalSigma]11", "-", 
     FractionBox[
      SuperscriptBox["\[CapitalSigma]12", "2"], "\[CapitalSigma]22"]}]]}], 
  "]"}]], "Output",
 CellLabel->"Out[55]=",ExpressionUUID->"0c960114-2fad-49ea-9f55-8c581f841232"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["convertDataFormat", \
"Subsection",ExpressionUUID->"dfd7d28f-35f2-42af-a9b6-5ec9a729667f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "convertDataFormat"}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"33b38c0c-05f4-47b4-b352-aef21b1b7a2b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"convertDataFormat[data, type] attempts to convert \
machine learning data to a different format to make it easier to switch out \
fitting methods.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" DownValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DownValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DownValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"convertDataFormat", "[", 
                    RowBox[{
                    RowBox[{
                    "_", "?", 
                    "FunctionRepo`convertDataFormat`Private`emptyDataQ"}], 
                    ",", 
                    
                    RowBox[{"\<\"Matrix\"\>", "|", "\<\"Vector\"\>", 
                    "|", "\<\"ListOfRules\"\>"}]}], "]"}], ":=", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"convertDataFormat", "[", 
                    RowBox[{
                    RowBox[{
                    "_", "?", 
                    "FunctionRepo`convertDataFormat`Private`emptyDataQ"}], 
                    ",", "\<\"RuleOfLists\"\>"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"{", "}"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{"convertDataFormat", "[", 
                    RowBox[{
                    RowBox[{
                    "_", "?", 
                    "FunctionRepo`convertDataFormat`Private`emptyDataQ"}], 
                    ",", "\<\"Assocation\"\>"}], "]"}], ":=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\<\"Input\"\>", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"\<\"Output\"\>", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"convertDataFormat", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`data_", ",", 
                    "FunctionRepo`convertDataFormat`Private`typeOut_String"}],
                     "]"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    "Keys", "[", 
                    "FunctionRepo`convertDataFormat`Private`$dataTypes", 
                    "]"}], ",", 
                    "FunctionRepo`convertDataFormat`Private`typeOut"}], 
                    "]"}]}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`typeIn", "=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`data", ",", 
                    "#2"}], "]"}], ",", 
                    RowBox[{"Throw", "[", "#1", "]"}]}], "]"}], "&"}], ",", 
                    "FunctionRepo`convertDataFormat`Private`$dataTypes"}], 
                    "]"}], "]"}]}], ",", 
                    "FunctionRepo`convertDataFormat`Private`dataOut"}], "}"}],
                     ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`typeIn", "===", 
                    "FunctionRepo`convertDataFormat`Private`typeOut"}], ",", 
                    RowBox[{
                    "Return", "[", 
                    "FunctionRepo`convertDataFormat`Private`data", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`dataOut", "=", 
                    RowBox[{"Developer`ToPackedArray", "/@", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`\
convertToRuleOfLists", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`data", ",", 
                    "FunctionRepo`convertDataFormat`Private`typeIn"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"UnsameQ", "@@", 
                    RowBox[{
                    "Length", "/@", 
                    "FunctionRepo`convertDataFormat`Private`dataOut"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"convertDataFormat", "::", "uneqLen"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`typeOut", ",", 
                    RowBox[{"\<\"Matrix\"\>", "|", "\<\"Vector\"\>"}]}], 
                    "]"}], "&&", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`dataOut", ",", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "MatrixQ"}]}]}], "]"}], "&&", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`dataOut", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "1"}], "&"}], ")"}]}]}], "}"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"convertDataFormat", "::", "outDim"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`dataOut", "=", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`\
convertToTargetType", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`dataOut", ",", 
                    "FunctionRepo`convertDataFormat`Private`typeOut"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`dataOut", ",", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`$dataTypes", "[", 
                    "FunctionRepo`convertDataFormat`Private`typeOut", "]"}]}],
                     "]"}], ",", 
                    "FunctionRepo`convertDataFormat`Private`dataOut", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"convertDataFormat", "::", "convertFail"}], 
                    "MessageName"], ",", 
                    "FunctionRepo`convertDataFormat`Private`typeIn", ",", 
                    "FunctionRepo`convertDataFormat`Private`typeOut"}], "]"}],
                     ";", "$Failed"}]}], "]"}]}], ")"}], "/;", 
                    RowBox[{
                    "StringQ", "[", 
                    "FunctionRepo`convertDataFormat`Private`typeIn", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"convertDataFormat", "[", 
                    RowBox[{
                    "_", ",", "FunctionRepo`convertDataFormat`Private`out_"}],
                     "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"convertDataFormat", "::", "notImplemented"}], 
                    "MessageName"], ",", 
                    "FunctionRepo`convertDataFormat`Private`out"}], "]"}], 
                    ";", "$Failed"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" SubValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"SubValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "SubValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "convertDataFormat", "[", 
                    "FunctionRepo`convertDataFormat`Private`type_String", 
                    "]"}], "[", 
                    "FunctionRepo`convertDataFormat`Private`data_", "]"}], ":=", 
                    RowBox[{"convertDataFormat", "[", 
                    RowBox[{
                    "FunctionRepo`convertDataFormat`Private`data", ",", 
                    "FunctionRepo`convertDataFormat`Private`type"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`convertDataFormat\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"convertDataFormat[data, type] attempts to convert \
machine learning data to a different format to make it easier to switch out \
fitting methods.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "convertDataFormat[data, type] attempts to convert machine learning data \
to a different format to make it easier to switch out fitting methods.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`convertDataFormat, {
      FunctionRepo`convertDataFormat[
         PatternTest[
          Blank[], FunctionRepo`convertDataFormat`Private`emptyDataQ], 
         Alternatives["Matrix", "Vector", "ListOfRules"]] :> {}, 
       FunctionRepo`convertDataFormat[
         PatternTest[
          Blank[], FunctionRepo`convertDataFormat`Private`emptyDataQ], 
         "RuleOfLists"] :> ({} -> {}), FunctionRepo`convertDataFormat[
         PatternTest[
          Blank[], FunctionRepo`convertDataFormat`Private`emptyDataQ], 
         "Assocation"] :> Association["Input" -> {}, "Output" -> {}], 
       Condition[
         FunctionRepo`convertDataFormat[
          Pattern[FunctionRepo`convertDataFormat`Private`data, 
           Blank[]], 
          Pattern[FunctionRepo`convertDataFormat`Private`typeOut, 
           Blank[String]]], 
         MemberQ[
          Keys[FunctionRepo`convertDataFormat`Private`$dataTypes], 
          FunctionRepo`convertDataFormat`Private`typeOut]] :> 
       Module[{FunctionRepo`convertDataFormat`Private`typeIn = Catch[
            KeyValueMap[If[
              MatchQ[FunctionRepo`convertDataFormat`Private`data, #2], 
              Throw[#]]& , 
             FunctionRepo`convertDataFormat`Private`$dataTypes]], 
          FunctionRepo`convertDataFormat`Private`dataOut}, 
         Condition[
         If[FunctionRepo`convertDataFormat`Private`typeIn === 
            FunctionRepo`convertDataFormat`Private`typeOut, 
            Return[FunctionRepo`convertDataFormat`Private`data]]; 
          FunctionRepo`convertDataFormat`Private`dataOut = 
           Map[Developer`ToPackedArray, 
             FunctionRepo`convertDataFormat`Private`convertToRuleOfLists[
             FunctionRepo`convertDataFormat`Private`data, 
              FunctionRepo`convertDataFormat`Private`typeIn]]; If[
            Apply[UnsameQ, 
             Map[Length, FunctionRepo`convertDataFormat`Private`dataOut]], 
            Message[
              MessageName[FunctionRepo`convertDataFormat, "uneqLen"]]; 
            Return[$Failed]]; If[
            And[
             MatchQ[FunctionRepo`convertDataFormat`Private`typeOut, 
              Alternatives["Matrix", "Vector"]], 
             MatchQ[
             FunctionRepo`convertDataFormat`Private`dataOut, Blank[] -> 
              PatternTest[
                Blank[], MatrixQ]], 
             MatchQ[
              Dimensions[
               Part[FunctionRepo`convertDataFormat`Private`dataOut, 2]], {
               Blank[], 
               PatternTest[
                Blank[], # > 1& ]}]], Message[
              MessageName[FunctionRepo`convertDataFormat, "outDim"]]; 
            Return[$Failed]]; 
          FunctionRepo`convertDataFormat`Private`dataOut = 
           FunctionRepo`convertDataFormat`Private`convertToTargetType[
            FunctionRepo`convertDataFormat`Private`dataOut, 
             FunctionRepo`convertDataFormat`Private`typeOut]; If[
            MatchQ[FunctionRepo`convertDataFormat`Private`dataOut, 
             FunctionRepo`convertDataFormat`Private`$dataTypes[
             FunctionRepo`convertDataFormat`Private`typeOut]], 
            FunctionRepo`convertDataFormat`Private`dataOut, Message[
              MessageName[FunctionRepo`convertDataFormat, "convertFail"], 
              FunctionRepo`convertDataFormat`Private`typeIn, 
              FunctionRepo`convertDataFormat`Private`typeOut]; $Failed], 
          StringQ[FunctionRepo`convertDataFormat`Private`typeIn]]], 
       FunctionRepo`convertDataFormat[
         Blank[], 
         Pattern[FunctionRepo`convertDataFormat`Private`out, 
          Blank[]]] :> (Message[
          MessageName[FunctionRepo`convertDataFormat, "notImplemented"], 
          FunctionRepo`convertDataFormat`Private`out]; $Failed)}], 
    "SubValues" -> 
    Information`InformationValueForm[
     SubValues, FunctionRepo`convertDataFormat, {
      FunctionRepo`convertDataFormat[
         Pattern[FunctionRepo`convertDataFormat`Private`type, 
          Blank[String]]][
         Pattern[FunctionRepo`convertDataFormat`Private`data, 
          Blank[]]] :> 
       FunctionRepo`convertDataFormat[
        FunctionRepo`convertDataFormat`Private`data, 
         FunctionRepo`convertDataFormat`Private`type]}], "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "FunctionRepo`convertDataFormat"], 
   False]]], "Output",
 CellLabel->"Out[56]=",ExpressionUUID->"a0d9bbdb-8c89-4397-bbdc-38b7ef1f08db"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["crossValidateModel", \
"Subsection",ExpressionUUID->"e35e1810-89ab-4aef-9e34-ee0d65c9d9ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "crossValidateModel"}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"98de2084-dd51-4c5b-be4b-75e6154c6586"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"crossValidateModel[data, fitFunction] repeatedly \
splits the data into training/validation subsets; then fits a model using \
fitFunction on the training set and validates the result with the validation \
set.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"crossValidateModel", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`data_", ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`dist_", "?", 
                    "DistributionParameterQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"crossValidateModel", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`data", ",", 
                    RowBox[{
                    RowBox[{"EstimatedDistribution", "[", 
                    RowBox[{
                    "#1", ",", 
                    "FunctionRepo`crossValidateModel`Private`dist"}], "]"}], 
                    "&"}], ",", 
                    "FunctionRepo`crossValidateModel`Private`opts"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"crossValidateModel", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`data_", ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`dists_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListQ", "[", "#1", "]"}], "||", 
                    RowBox[{"AssociationQ", "[", "#1", "]"}]}], "&"}], 
                    ")"}]}], "/;", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`dists", ",", 
                    "DistributionParameterQ"}], "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"crossValidateModel", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`data", ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "AssociationQ", "[", 
                    "FunctionRepo`crossValidateModel`Private`dists", "]"}], 
                    ",", "Map", ",", "AssociationMap"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`dist", ",", 
                    RowBox[{
                    RowBox[{"EstimatedDistribution", "[", 
                    RowBox[{
                    "#1", ",", 
                    "FunctionRepo`crossValidateModel`Private`dist"}], "]"}], 
                    "&"}]}], "]"}], ",", 
                    "FunctionRepo`crossValidateModel`Private`dists"}], "]"}], 
                    ",", "FunctionRepo`crossValidateModel`Private`opts"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"crossValidateModel", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`data", ":", 
                    RowBox[{"_List", "|", "_Rule", "|", 
                    RowBox[{"_", "?", "AssociationQ"}]}]}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`trainingFun", 
                    ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`method", ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`nDat", "=", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`dataSize", "[", 
                    "FunctionRepo`crossValidateModel`Private`data", "]"}]}], 
                    ",", "FunctionRepo`crossValidateModel`Private`rules", ",",
                     "FunctionRepo`crossValidateModel`Private`methodFun", ",",
                     "FunctionRepo`crossValidateModel`Private`\
validationFunction"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`method", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"OptionValue", "[", "Method", "]"}], "}"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"LeaveOneOut\"\>", ",", 
                    "FunctionRepo`crossValidateModel`Private`rest___"}], 
                    "}"}], "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"KFold\"\>", ",", 
                    
                    RowBox[{"\<\"Folds\"\>", "\[Rule]", 
                    "FunctionRepo`crossValidateModel`Private`nDat"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`crossValidateModel`Private`rest", 
                    "}"}], ",", 
                    RowBox[{"Except", "[", "\<\"Folds\"\>", "]"}]}], 
                    "]"}]}]}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"BootStrap\"\>", ",", 
                    "FunctionRepo`crossValidateModel`Private`rest___"}], 
                    "}"}], "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"RandomSubSampling\"\>", ",", 
                    RowBox[{"\<\"SamplingFunction\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"BootStrap\"\>", ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`crossValidateModel`Private`rest", 
                    "}"}], ",", "\<\"BootStrapSize\"\>", ",", 
                    "FunctionRepo`crossValidateModel`Private`nDat"}], "]"}]}],
                     "}"}]}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`crossValidateModel`Private`rest", 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Runs\"\>", ",", "\<\"ParallelQ\"\>"}], 
                    "}"}]}], "]"}]}]}], "}"}]}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`rules", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    "Rest", "[", 
                    "FunctionRepo`crossValidateModel`Private`method", "]"}], 
                    ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`crossValidateModel`Private`opts", 
                    "}"}], ",", 
                    RowBox[{"{", "\<\"ParallelQ\"\>", "}"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`methodFun", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{
                    "First", "[", 
                    "FunctionRepo`crossValidateModel`Private`method", "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"\<\"KFold\"\>", "\[RuleDelayed]", 
                    "FunctionRepo`crossValidateModel`Private`kFoldValidation"}\
], ",", 
                    
                    RowBox[{"\<\"RandomSubSampling\"\>", "\[RuleDelayed]", 
                    "FunctionRepo`crossValidateModel`Private`\
subSamplingValidation"}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`other_", 
                    "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"crossValidateModel", "::", "unknownMethod"}], 
                    "MessageName"], ",", 
                    "FunctionRepo`crossValidateModel`Private`other"}], "]"}], 
                    ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
validationFunction", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{
                    "OptionValue", "[", "\<\"ValidationFunction\"\>", "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`assoc_", "?", 
                    "AssociationQ"}], "\[RuleDelayed]", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
parseValidationOption", "/@", 
                    "FunctionRepo`crossValidateModel`Private`assoc"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`other_", 
                    "\[RuleDelayed]", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
parseValidationOption", "[", "FunctionRepo`crossValidateModel`Private`other", 
                    "]"}]}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "AssociationQ", "[", 
                    "FunctionRepo`crossValidateModel`Private`trainingFun", 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "AssociationQ", "[", 
                    "FunctionRepo`crossValidateModel`Private`\
validationFunction", "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
validationFunction", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
validationFunction", "&"}], ")"}], "/@", 
                    "FunctionRepo`crossValidateModel`Private`trainingFun"}]}],
                     ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
validationFunction", "=", 
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{
                    RowBox[{
                    "Keys", "[", 
                    "FunctionRepo`crossValidateModel`Private`trainingFun", 
                    "]"}], ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
validationFunction", ",", 
                    RowBox[{
                    "Keys", "[", 
                    "FunctionRepo`crossValidateModel`Private`trainingFun", 
                    "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`\
defaultValidationFunction", "[", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
                    ";", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`methodFun", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`data", ",", 
                    "FunctionRepo`crossValidateModel`Private`nDat", ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`quietReporting", 
                    "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`listOperator1", 
                    "[", "FunctionRepo`crossValidateModel`Private`\
trainingFun", "]"}], "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`listOperator2", 
                    "[", "FunctionRepo`crossValidateModel`Private`\
validationFunction", "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    "FunctionRepo`crossValidateModel`Private`rules", ",", 
                    RowBox[{
                    "Options", "[", 
                    "FunctionRepo`crossValidateModel`Private`methodFun", 
                    "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "\<\"KFold\"\>"}], ",", 
                    
                    RowBox[{"\<\"ValidationFunction\"\>", "\[Rule]", 
                    "Automatic"}], ",", 
                    RowBox[{"\<\"ParallelQ\"\>", "\[Rule]", "False"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`crossValidateModel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"crossValidateModel[data, fitFunction] repeatedly \
splits the data into training/validation subsets; then fits a model using \
fitFunction on the training set and validates the result with the validation \
set.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "crossValidateModel[data, fitFunction] repeatedly splits the data into \
training/validation subsets; then fits a model using fitFunction on the \
training set and validates the result with the validation set.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`crossValidateModel, {
      FunctionRepo`crossValidateModel[
         Pattern[FunctionRepo`crossValidateModel`Private`data, 
          Blank[]], 
         PatternTest[
          Pattern[FunctionRepo`crossValidateModel`Private`dist, 
           Blank[]], DistributionParameterQ], 
         Pattern[FunctionRepo`crossValidateModel`Private`opts, 
          OptionsPattern[]]] :> 
       FunctionRepo`crossValidateModel[
        FunctionRepo`crossValidateModel`Private`data, 
         EstimatedDistribution[#, 
          FunctionRepo`crossValidateModel`Private`dist]& , 
         FunctionRepo`crossValidateModel`Private`opts], 
       FunctionRepo`crossValidateModel[
         Pattern[FunctionRepo`crossValidateModel`Private`data, 
          Blank[]], 
         Condition[
          PatternTest[
           Pattern[FunctionRepo`crossValidateModel`Private`dists, 
            Blank[]], Or[
            ListQ[#], 
            AssociationQ[#]]& ], 
          AllTrue[
          FunctionRepo`crossValidateModel`Private`dists, 
           DistributionParameterQ]], 
         Pattern[FunctionRepo`crossValidateModel`Private`opts, 
          OptionsPattern[]]] :> 
       FunctionRepo`crossValidateModel[
        FunctionRepo`crossValidateModel`Private`data, 
         If[
          AssociationQ[FunctionRepo`crossValidateModel`Private`dists], Map, 
          AssociationMap][
          Function[
          FunctionRepo`crossValidateModel`Private`dist, 
           EstimatedDistribution[#, 
            FunctionRepo`crossValidateModel`Private`dist]& ], 
          FunctionRepo`crossValidateModel`Private`dists], 
         FunctionRepo`crossValidateModel`Private`opts], 
       FunctionRepo`crossValidateModel[
         Pattern[FunctionRepo`crossValidateModel`Private`data, 
          Alternatives[
           Blank[List], 
           Blank[Rule], 
           PatternTest[
            Blank[], AssociationQ]]], 
         Pattern[FunctionRepo`crossValidateModel`Private`trainingFun, 
          Except[
           Blank[List]]], 
         Pattern[FunctionRepo`crossValidateModel`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{FunctionRepo`crossValidateModel`Private`method, 
          FunctionRepo`crossValidateModel`Private`nDat = 
          FunctionRepo`crossValidateModel`Private`dataSize[
           FunctionRepo`crossValidateModel`Private`data], 
          FunctionRepo`crossValidateModel`Private`rules, 
          FunctionRepo`crossValidateModel`Private`methodFun, 
          FunctionRepo`crossValidateModel`Private`validationFunction}, 
         FunctionRepo`crossValidateModel`Private`method = Replace[
            Flatten[{
              OptionValue[Method]}], {{"LeaveOneOut", 
               Pattern[FunctionRepo`crossValidateModel`Private`rest, 
                BlankNullSequence[]]} :> {
              "KFold", "Folds" -> 
               FunctionRepo`crossValidateModel`Private`nDat, 
               Apply[Sequence, 
                FilterRules[{FunctionRepo`crossValidateModel`Private`rest}, 
                 Except["Folds"]]]}, {"BootStrap", 
               Pattern[FunctionRepo`crossValidateModel`Private`rest, 
                BlankNullSequence[]]} :> {
              "RandomSubSampling", "SamplingFunction" -> {"BootStrap", 
                 
                 Lookup[{FunctionRepo`crossValidateModel`Private`rest}, 
                  "BootStrapSize", 
                  FunctionRepo`crossValidateModel`Private`nDat]}, 
               Apply[Sequence, 
                
                FilterRules[{FunctionRepo`crossValidateModel`Private`rest}, {
                 "Runs", "ParallelQ"}]]}}]; 
         FunctionRepo`crossValidateModel`Private`rules = Join[
            Rest[FunctionRepo`crossValidateModel`Private`method], 
            
            FilterRules[{FunctionRepo`crossValidateModel`Private`opts}, {
             "ParallelQ"}]]; 
         FunctionRepo`crossValidateModel`Private`methodFun = Replace[
            First[FunctionRepo`crossValidateModel`Private`method], {
            "KFold" :> 
             FunctionRepo`crossValidateModel`Private`kFoldValidation, 
             "RandomSubSampling" :> 
             FunctionRepo`crossValidateModel`Private`subSamplingValidation, 
             Pattern[FunctionRepo`crossValidateModel`Private`other, 
               Blank[]] :> (Message[
                MessageName[FunctionRepo`crossValidateModel, "unknownMethod"],
                 FunctionRepo`crossValidateModel`Private`other]; 
              Return[$Failed])}]; 
         FunctionRepo`crossValidateModel`Private`validationFunction = Replace[
            OptionValue["ValidationFunction"], {PatternTest[
               Pattern[FunctionRepo`crossValidateModel`Private`assoc, 
                Blank[]], AssociationQ] :> 
             Map[FunctionRepo`crossValidateModel`Private`\
parseValidationOption, FunctionRepo`crossValidateModel`Private`assoc], 
             Pattern[FunctionRepo`crossValidateModel`Private`other, 
               Blank[]] :> 
             FunctionRepo`crossValidateModel`Private`parseValidationOption[
              FunctionRepo`crossValidateModel`Private`other]}]; If[
           AssociationQ[FunctionRepo`crossValidateModel`Private`trainingFun], 
           If[
            Not[
             AssociationQ[
             FunctionRepo`crossValidateModel`Private`validationFunction]], 
            FunctionRepo`crossValidateModel`Private`validationFunction = 
            Map[FunctionRepo`crossValidateModel`Private`validationFunction& , 
              FunctionRepo`crossValidateModel`Private`trainingFun], 
            FunctionRepo`crossValidateModel`Private`validationFunction = 
            AssociationThread[
              Keys[FunctionRepo`crossValidateModel`Private`trainingFun], 
              Lookup[
              FunctionRepo`crossValidateModel`Private`validationFunction, 
               Keys[FunctionRepo`crossValidateModel`Private`trainingFun], 
               
               FunctionRepo`crossValidateModel`Private`\
defaultValidationFunction[]]]]]; 
         FunctionRepo`crossValidateModel`Private`methodFun[
          FunctionRepo`crossValidateModel`Private`data, 
           FunctionRepo`crossValidateModel`Private`nDat, 
           FunctionRepo`crossValidateModel`Private`quietReporting[
            FunctionRepo`crossValidateModel`Private`listOperator1[
            FunctionRepo`crossValidateModel`Private`trainingFun]], 
           FunctionRepo`crossValidateModel`Private`listOperator2[
           FunctionRepo`crossValidateModel`Private`validationFunction], 
           Apply[Sequence, 
            FilterRules[FunctionRepo`crossValidateModel`Private`rules, 
             Options[FunctionRepo`crossValidateModel`Private`methodFun]]]]]}],
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     Method -> "KFold", "ValidationFunction" -> Automatic, "ParallelQ" -> 
      False}, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`crossValidateModel"], False]]], "Output",
 CellLabel->"Out[57]=",ExpressionUUID->"f5e1b2e4-8cd7-4112-9450-4c2f4cceb29f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"PoissonDistribution", "[", "2", "]"}], ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.781610902284114*^9, 3.7816109277192287`*^9}, {
  3.781611173709198*^9, 3.781611180206622*^9}, {3.7816116711764913`*^9, 
  3.781611675183671*^9}, {3.7816117183975105`*^9, 3.781611728390929*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"8528c3aa-c63e-44f6-8859-92cd72a89101"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.644], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.644], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.19213370696558, 80.69921937550042}, {
           36.16909458644571, 122.80666073838327`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 33.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.04921937550041, 
           134.55630504403524`}, {-135.80603771742938`, 122.80666073838326`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 33]& ,
        TagBoxNote->"33"],
       StyleBox["33", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[33, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 27.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.90630504403526`, 
           188.4133907125701}, {-88.90372890728165, 122.80666073838327`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{187.76339071257007`, 242.27047638110497`}, {
           12.71794018137183, 122.80666073838327`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{241.62047638110494`, 296.1275620496398}, {
           36.16909458644571, 122.80666073838327`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{295.47756204963974`, 349.98464771817464`}, {
           98.70550633330939, 122.80666073838327`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{403.1917333867094, 457.69881905524426`}, {
           114.3396092700253, 122.80666073838327`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.66, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.5, 7.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[59]=",ExpressionUUID->"c49933cf-851a-4942-8a52-ea8594a5cb0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"crossValidateModel", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"val", "//", "TableForm"}]}], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"c7566495-73d8-4323-bcb1-fa905a691565"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"FittedModel\"\>", "\[Rule]", 
         RowBox[{"PoissonDistribution", "[", "1.9875`", "]"}]}], ",", 
        RowBox[{"\<\"ValidationResult\"\>", "\[Rule]", 
         "1.577064268974675`"}]}], "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"FittedModel\"\>", "\[Rule]", 
         RowBox[{"PoissonDistribution", "[", "1.7875`", "]"}]}], ",", 
        RowBox[{"\<\"ValidationResult\"\>", "\[Rule]", 
         "2.011551270422792`"}]}], "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"FittedModel\"\>", "\[Rule]", 
         RowBox[{"PoissonDistribution", "[", "1.9625`", "]"}]}], ",", 
        RowBox[{"\<\"ValidationResult\"\>", "\[Rule]", 
         "1.6146264694175652`"}]}], "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"FittedModel\"\>", "\[Rule]", 
         RowBox[{"PoissonDistribution", "[", "2.025`", "]"}]}], ",", 
        RowBox[{"\<\"ValidationResult\"\>", "\[Rule]", 
         "1.4964207601480601`"}]}], "\[RightAssociation]"}]},
     {
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"FittedModel\"\>", "\[Rule]", 
         RowBox[{"PoissonDistribution", "[", "1.9875`", "]"}]}], ",", 
        RowBox[{"\<\"ValidationResult\"\>", "\[Rule]", 
         "1.7045365275209536`"}]}], "\[RightAssociation]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[61]//TableForm=",ExpressionUUID->"dae8d752-42df-479c-b756-0834db41405a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteContainedStrings", \
"Subsection",ExpressionUUID->"da8a948a-8e77-4887-90f5-94bf9f9dd812"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "deleteContainedStrings"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"37e1ff57-ee62-4bff-ab0e-875919154b44"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"deleteContainedStrings[{str1, str2, ...}] deletes \
every string that is a substring of at least one other string in the list. \
Preserves ordering.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"deleteContainedStrings", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", "___"}], "]"}], ":=", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"deleteContainedStrings", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`deleteContainedStrings`Private`strings", 
                    ":", 
                    RowBox[{"{", "__String", "}"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`deleteContainedStrings`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`deleteContainedStrings`Private`sorted", "=", 
                    RowBox[{"ReverseSortBy", "[", 
                    RowBox[{
                    "FunctionRepo`deleteContainedStrings`Private`strings", 
                    ",", "StringLength"}], "]"}]}], "}"}], ",", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{
                    "FunctionRepo`deleteContainedStrings`Private`sorted", ",", 
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    "##1", ",", 
                    "FunctionRepo`deleteContainedStrings`Private`opts"}], 
                    "]"}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    "FunctionRepo`deleteContainedStrings`Private`strings", 
                    ",", "#1", ",", 
                    RowBox[{"Missing", "[", "]"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "&"}]}], 
                    "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IgnoreCase", "\[Rule]", "False"}], ",", 
                    RowBox[{"MetaCharacters", "\[Rule]", "None"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`deleteContainedStrings\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"deleteContainedStrings[{str1, str2, ...}] deletes \
every string that is a substring of at least one other string in the list. \
Preserves ordering.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "deleteContainedStrings[{str1, str2, ...}] deletes every string that is a \
substring of at least one other string in the list. Preserves ordering.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`deleteContainedStrings, {
      FunctionRepo`deleteContainedStrings[{}, 
         BlankNullSequence[]] :> {}, FunctionRepo`deleteContainedStrings[
         Pattern[FunctionRepo`deleteContainedStrings`Private`strings, {
           BlankSequence[String]}], 
         Pattern[FunctionRepo`deleteContainedStrings`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{FunctionRepo`deleteContainedStrings`Private`sorted = 
          ReverseSortBy[
           FunctionRepo`deleteContainedStrings`Private`strings, 
            StringLength]}, 
         SortBy[
          DeleteDuplicates[
          FunctionRepo`deleteContainedStrings`Private`sorted, StringContainsQ[
            SlotSequence[1], 
            FunctionRepo`deleteContainedStrings`Private`opts]& ], 
          FirstPosition[
          FunctionRepo`deleteContainedStrings`Private`strings, #, 
           Missing[], {1}, Heads -> False]& ]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {IgnoreCase -> False, MetaCharacters -> None}, 
    "Attributes" -> {}, "FullName" -> "FunctionRepo`deleteContainedStrings"], 
   False]]], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"f9c49e16-3f7a-4eb9-bf75-f1086dab4a62"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["firstMatchingValue", \
"Subsection",ExpressionUUID->"f0081c56-07a8-467c-89b8-c381ea514997"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "firstMatchingValue"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"583296a0-bd1e-4d8a-ba59-9b25c158a6f4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"firstMatchingValue[{expr_1, expr_2, ...}, pattern] \
evalutates held expr_i in turn, returning the value of the first expression \
that evaluates to a result matching the pattern.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"firstMatchingValue", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`expr_", ",", 
                    "FunctionRepo`firstMatchingValue`Private`patt_", ",", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`opt", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"firstMatchingValue", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`expr", ",", 
                    "FunctionRepo`firstMatchingValue`Private`patt", ",", 
                    RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    "FunctionRepo`firstMatchingValue`Private`opt"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"firstMatchingValue", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`expr_", ",", 
                    "FunctionRepo`firstMatchingValue`Private`patt_", ",", 
                    "FunctionRepo`firstMatchingValue`Private`default_", ",", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`opt", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"firstMatchingValue", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`expr", ",", 
                    "FunctionRepo`firstMatchingValue`Private`patt", ",", 
                    "FunctionRepo`firstMatchingValue`Private`default", ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    "FunctionRepo`firstMatchingValue`Private`opt"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"firstMatchingValue", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`expr_", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`head", ":", 
                    RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`patt_", ",", 
                    "FunctionRepo`firstMatchingValue`Private`transformation_"}\
], "]"}], ",", "FunctionRepo`firstMatchingValue`Private`default_", ",", 
                    "FunctionRepo`firstMatchingValue`Private`lvl_", ",", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`firstMatchingValue`Private`matched", 
                    "}"}], ",", 
                    RowBox[{"FirstCase", "[", 
                    RowBox[{
                    RowBox[{
                    "Unevaluated", "[", 
                    "FunctionRepo`firstMatchingValue`Private`expr", "]"}], 
                    ",", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`possibleMatch_", 
                    "\[RuleDelayed]", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`try", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`matched", "=", 
                    "True"}], ";", 
                    "FunctionRepo`firstMatchingValue`Private`possibleMatch"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`head", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`patt", ",", 
                    "FunctionRepo`firstMatchingValue`Private`transformation"}]\
, "]"}], ",", 
                    RowBox[{"_", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`matched", "=", 
                    "False"}], ")"}]}]}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`firstMatchingValue`Private`try", "/;", 
                    RowBox[{
                    "TrueQ", "[", 
                    "FunctionRepo`firstMatchingValue`Private`matched", 
                    "]"}]}]}], "]"}]}], ",", 
                    "FunctionRepo`firstMatchingValue`Private`default", ",", 
                    "FunctionRepo`firstMatchingValue`Private`lvl", ",", 
                    "FunctionRepo`firstMatchingValue`Private`opts"}], "]"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"firstMatchingValue", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`expr_", ",", 
                    "FunctionRepo`firstMatchingValue`Private`otherPattern_", 
                    ",", "FunctionRepo`firstMatchingValue`Private`default_", 
                    ",", "FunctionRepo`firstMatchingValue`Private`lvl_", ",", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"FirstCase", "[", 
                    RowBox[{
                    RowBox[{
                    "Unevaluated", "[", 
                    "FunctionRepo`firstMatchingValue`Private`expr", "]"}], 
                    ",", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`possibleMatch_", 
                    "\[RuleDelayed]", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`try", "=", 
                    "FunctionRepo`firstMatchingValue`Private`possibleMatch"}],
                     "}"}], ",", 
                    RowBox[{"FunctionRepo`firstMatchingValue`Private`try", "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`firstMatchingValue`Private`try", ",", 
                    "FunctionRepo`firstMatchingValue`Private`otherPattern"}], 
                    "]"}]}]}], "]"}]}], ",", 
                    "FunctionRepo`firstMatchingValue`Private`default", ",", 
                    "FunctionRepo`firstMatchingValue`Private`lvl", ",", 
                    "FunctionRepo`firstMatchingValue`Private`opts"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"Heads", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldAll", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`firstMatchingValue\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"firstMatchingValue[{expr_1, expr_2, ...}, pattern] \
evalutates held expr_i in turn, returning the value of the first expression \
that evaluates to a result matching the pattern.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "firstMatchingValue[{expr_1, expr_2, ...}, pattern] evalutates held \
expr_i in turn, returning the value of the first expression that evaluates to \
a result matching the pattern.", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`firstMatchingValue, {
      FunctionRepo`firstMatchingValue[
         Pattern[FunctionRepo`firstMatchingValue`Private`expr, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`patt, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`opt, 
          OptionsPattern[]]] :> 
       FunctionRepo`firstMatchingValue[
        FunctionRepo`firstMatchingValue`Private`expr, 
         FunctionRepo`firstMatchingValue`Private`patt, 
         Missing["NotFound"], {1}, 
         FunctionRepo`firstMatchingValue`Private`opt], 
       FunctionRepo`firstMatchingValue[
         Pattern[FunctionRepo`firstMatchingValue`Private`expr, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`patt, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`default, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`opt, 
          OptionsPattern[]]] :> 
       FunctionRepo`firstMatchingValue[
        FunctionRepo`firstMatchingValue`Private`expr, 
         FunctionRepo`firstMatchingValue`Private`patt, 
         FunctionRepo`firstMatchingValue`Private`default, {1}, 
         FunctionRepo`firstMatchingValue`Private`opt], 
       FunctionRepo`firstMatchingValue[
         Pattern[FunctionRepo`firstMatchingValue`Private`expr, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`head, 
          Alternatives[Rule, RuleDelayed]][
          Pattern[FunctionRepo`firstMatchingValue`Private`patt, 
           Blank[]], 
          Pattern[FunctionRepo`firstMatchingValue`Private`transformation, 
           Blank[]]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`default, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`lvl, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{FunctionRepo`firstMatchingValue`Private`matched}, 
         FirstCase[
          Unevaluated[FunctionRepo`firstMatchingValue`Private`expr], 
          Pattern[FunctionRepo`firstMatchingValue`Private`possibleMatch, 
            Blank[]] :> 
          With[{FunctionRepo`firstMatchingValue`Private`try = 
             Replace[FunctionRepo`firstMatchingValue`Private`matched = True; 
               FunctionRepo`firstMatchingValue`Private`possibleMatch, {
                FunctionRepo`firstMatchingValue`Private`head[
                FunctionRepo`firstMatchingValue`Private`patt, 
                 FunctionRepo`firstMatchingValue`Private`transformation], 
                Blank[] :> (FunctionRepo`firstMatchingValue`Private`matched = 
                 False)}]}, 
            Condition[FunctionRepo`firstMatchingValue`Private`try, 
             TrueQ[FunctionRepo`firstMatchingValue`Private`matched]]], 
          FunctionRepo`firstMatchingValue`Private`default, 
          FunctionRepo`firstMatchingValue`Private`lvl, 
          FunctionRepo`firstMatchingValue`Private`opts]], 
       FunctionRepo`firstMatchingValue[
         Pattern[FunctionRepo`firstMatchingValue`Private`expr, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`otherPattern, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`default, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`lvl, 
          Blank[]], 
         Pattern[FunctionRepo`firstMatchingValue`Private`opts, 
          OptionsPattern[]]] :> FirstCase[
         Unevaluated[FunctionRepo`firstMatchingValue`Private`expr], 
         Pattern[FunctionRepo`firstMatchingValue`Private`possibleMatch, 
           Blank[]] :> 
         With[{FunctionRepo`firstMatchingValue`Private`try = 
            FunctionRepo`firstMatchingValue`Private`possibleMatch}, 
           Condition[FunctionRepo`firstMatchingValue`Private`try, 
            MatchQ[
            FunctionRepo`firstMatchingValue`Private`try, 
             FunctionRepo`firstMatchingValue`Private`otherPattern]]], 
         FunctionRepo`firstMatchingValue`Private`default, 
         FunctionRepo`firstMatchingValue`Private`lvl, 
         FunctionRepo`firstMatchingValue`Private`opts]}], "SubValues" -> None,
     "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Heads -> False}, "Attributes" -> {HoldAll}, "FullName" -> 
    "FunctionRepo`firstMatchingValue"], False]]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"72386168-2f0f-485a-a101-4144340ae02d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"firstMatchingValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<before\>\"", "]"}], ",", "10", ",", 
     RowBox[{"Print", "[", "\"\<after\>\"", "]"}]}], "}"}], ",", "_Integer"}],
   "]"}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"f41e503d-739e-4e0b-af4a-51a8b40b9b1b"],

Cell[BoxData["\<\"before\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"f134c028-5d30-480a-99dd-a64ab9ec99f6"],

Cell[BoxData["10"], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"7d55a529-1542-424d-992b-3f698afa1ac9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "2"}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{"x", ",", "\[IndentingNewLine]", 
   RowBox[{"firstMatchingValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2", ",", 
       RowBox[{"++", "x"}], ",", 
       RowBox[{"1", "+", "3"}], ",", "5"}], "}"}], ",", 
     RowBox[{"_Integer", "?", "OddQ"}]}], "]"}], ",", "\[IndentingNewLine]", 
   "x"}], "}"}]}], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"29421cbc-f709-476c-b19c-f1a36aa67e57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "3"}], "}"}]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"20b08824-0298-4b26-ae98-1ff2732f3356"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["kullbackLeiblerDivergence", \
"Subsection",ExpressionUUID->"e2779f55-4ae5-4ebd-b5b6-3be2e30b7a6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "kullbackLeiblerDivergence"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"18686fd2-517c-4c38-b65b-acb472f6cf45"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"kullbackLeiblerDivergence[P, Q] computes the \
Kullback-Leibler divergence from distribution Q to P\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"kullbackLeiblerDivergence", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p_", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    "0"}]},
                    {
                    RowBox[{
                    RowBox[{"kullbackLeiblerDivergence", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p_", "?", 
                    "DistributionParameterQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q_", "?", 
                    "DistributionParameterQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`opts", 
                    ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$Assumptions", "=", 
                    RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], "}"}],
                     ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
methodSpec", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Method", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`sym", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], "\[RuleDelayed]", 
                    RowBox[{
                    "{", "FunctionRepo`kullbackLeiblerDivergence`Private`sym",
                     "}"}]}]}], "]"}]}], ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`\
methodOpts", ",", "FunctionRepo`kullbackLeiblerDivergence`Private`domainp", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`\
domainq", ",", "FunctionRepo`kullbackLeiblerDivergence`Private`assumptions", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`rv", 
                    ",", "x"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q"}], 
                    "}"}], ",", "\[FormalX]"}], "]"}], ",", 
                    RowBox[{"x", "=", "\[FormalX]"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`\
methodOpts"}], "}"}], "=", 
                    RowBox[{"TakeDrop", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
methodSpec", ",", "1"}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method", 
                    "=", 
                    RowBox[{
                    "First", "[", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method", 
                    "]"}]}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method", 
                    ",", "\[IndentingNewLine]", "Expectation", ",", "Null", 
                    ",", "\[IndentingNewLine]", "NExpectation", ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`rand", 
                    "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"#1", ",", "5"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q"}], 
                    "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`rand", 
                    ",", "ArrayQ"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    "kullbackLeiblerDivergence", "::", "randomSample"}], 
                    "MessageName"], ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q"}], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", "_", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"kullbackLeiblerDivergence", "::", "method"}], 
                    "MessageName"], ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method"}],
                     "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`domainp", 
                    "=", 
                    RowBox[{
                    "DistributionDomain", "[", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", 
                    "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`domainq", 
                    "=", 
                    RowBox[{
                    "DistributionDomain", "[", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q", 
                    "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
assumptions", "=", 
                    RowBox[{"And", "@@", 
                    RowBox[{"DistributionParameterAssumptions", "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q"}], 
                    "}"}]}]}]}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{"Assuming", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
assumptions", ",", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
supportSubSetQ", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`domainp", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`\
domainq"}], "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", "True", ",", 
                    "Null", ",", "\[IndentingNewLine]", "False", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"kullbackLeiblerDivergence", "::", "supportPQ"}], 
                    "MessageName"], ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q"}], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "Undefined", "]"}]}], ",", 
                    "\[IndentingNewLine]", "_", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    "kullbackLeiblerDivergence", "::", 
                    "supportValidationFail"}], "MessageName"], ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q"}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`rv", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`domainp", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`l", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
domainPattern", ".."}], "}"}]}], "\[RuleDelayed]", 
                    RowBox[{"Array", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`l", 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"_", "\[Rule]", "x"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
assumptions", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
assumptions", "&&", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Statistics`Library`RealIntegerQ", "=", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Integers"]}], "&"}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "ListQ", "[", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`rv", 
                    "]"}], ",", 
                    RowBox[{"And", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    "Statistics`DistributionsCommonDump`DomainMemberQ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`domainp", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`rv"}]\
, "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    "Statistics`DistributionsCommonDump`DomainMemberQ", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`domainp", 
                    ",", "FunctionRepo`kullbackLeiblerDivergence`Private`rv"}]\
, "]"}]}], "]"}]}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"Assuming", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
assumptions", ",", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`method", 
                    "[", 
                    RowBox[{
                    RowBox[{"Refine", "[", 
                    RowBox[{
                    RowBox[{"LogLikelihood", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p", ",", 
                    RowBox[{
                    "{", "FunctionRepo`kullbackLeiblerDivergence`Private`rv", 
                    "}"}]}], "]"}], "-", 
                    RowBox[{"LogLikelihood", "[", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`q", ",", 
                    RowBox[{
                    "{", "FunctionRepo`kullbackLeiblerDivergence`Private`rv", 
                    "}"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`kullbackLeiblerDivergence`Private`rv", 
                    "\[Distributed]", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`p"}], ",", 
                    RowBox[{
                    "Sequence", "@@", 
                    "FunctionRepo`kullbackLeiblerDivergence`Private`\
methodOpts"}]}], "]"}], ",", 
                    RowBox[{"TimeConstraint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "10"}], "}"}]}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Expectation"}], ",", 
                    RowBox[{
                    "Assumptions", "\[RuleDelayed]", "$Assumptions"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"FunctionRepo`kullbackLeiblerDivergence\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"kullbackLeiblerDivergence[P, Q] computes the \
Kullback-Leibler divergence from distribution Q to P\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "kullbackLeiblerDivergence[P, Q] computes the Kullback-Leibler divergence \
from distribution Q to P", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`kullbackLeiblerDivergence, {
      FunctionRepo`kullbackLeiblerDivergence[
         Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`p, 
          Blank[]], 
         Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`p, 
          Blank[]], 
         OptionsPattern[]] :> 0, FunctionRepo`kullbackLeiblerDivergence[
         PatternTest[
          Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`p, 
           Blank[]], DistributionParameterQ], 
         PatternTest[
          Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`q, 
           Blank[]], DistributionParameterQ], 
         Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`opts, 
          OptionsPattern[]]] :> 
       Block[{$Assumptions = OptionValue[Assumptions]}, 
         Module[{
          FunctionRepo`kullbackLeiblerDivergence`Private`methodSpec = Replace[
             OptionValue[Method], 
             Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`sym, 
               Except[
                Blank[List]]] :> {
              FunctionRepo`kullbackLeiblerDivergence`Private`sym}], 
           FunctionRepo`kullbackLeiblerDivergence`Private`method, 
           FunctionRepo`kullbackLeiblerDivergence`Private`methodOpts, 
           FunctionRepo`kullbackLeiblerDivergence`Private`domainp, 
           FunctionRepo`kullbackLeiblerDivergence`Private`domainq, 
           FunctionRepo`kullbackLeiblerDivergence`Private`assumptions, 
           FunctionRepo`kullbackLeiblerDivergence`Private`rv, $CellContext`x},
           If[
            
            FreeQ[{FunctionRepo`kullbackLeiblerDivergence`Private`p, 
              FunctionRepo`kullbackLeiblerDivergence`Private`q}, \[FormalX]], \
$CellContext`x = \[FormalX]]; {
            FunctionRepo`kullbackLeiblerDivergence`Private`method, 
             FunctionRepo`kullbackLeiblerDivergence`Private`methodOpts} = 
           TakeDrop[
            FunctionRepo`kullbackLeiblerDivergence`Private`methodSpec, 1]; 
          FunctionRepo`kullbackLeiblerDivergence`Private`method = 
           First[FunctionRepo`kullbackLeiblerDivergence`Private`method]; 
          Switch[FunctionRepo`kullbackLeiblerDivergence`Private`method, 
            Expectation, Null, NExpectation, 
            With[{FunctionRepo`kullbackLeiblerDivergence`Private`rand = Quiet[
                Map[
                RandomVariate[#, 5]& , {
                 FunctionRepo`kullbackLeiblerDivergence`Private`p, 
                  FunctionRepo`kullbackLeiblerDivergence`Private`q}]]}, 
             If[
              Not[
               AllTrue[
               FunctionRepo`kullbackLeiblerDivergence`Private`rand, ArrayQ]], 
              Message[
                MessageName[
                FunctionRepo`kullbackLeiblerDivergence, "randomSample"], 
                FunctionRepo`kullbackLeiblerDivergence`Private`p, 
                FunctionRepo`kullbackLeiblerDivergence`Private`q]; 
              Return[$Failed]]], 
            Blank[], Message[
              MessageName[FunctionRepo`kullbackLeiblerDivergence, "method"], 
              FunctionRepo`kullbackLeiblerDivergence`Private`method]; 
            Return[$Failed]]; 
          FunctionRepo`kullbackLeiblerDivergence`Private`domainp = 
           DistributionDomain[
            FunctionRepo`kullbackLeiblerDivergence`Private`p]; 
          FunctionRepo`kullbackLeiblerDivergence`Private`domainq = 
           DistributionDomain[
            FunctionRepo`kullbackLeiblerDivergence`Private`q]; 
          FunctionRepo`kullbackLeiblerDivergence`Private`assumptions = 
           Apply[And, 
             Map[
             DistributionParameterAssumptions, {
              FunctionRepo`kullbackLeiblerDivergence`Private`p, 
               FunctionRepo`kullbackLeiblerDivergence`Private`q}]]; Switch[
            Assuming[
            FunctionRepo`kullbackLeiblerDivergence`Private`assumptions, 
             Simplify[
              FunctionRepo`kullbackLeiblerDivergence`Private`supportSubSetQ[
              FunctionRepo`kullbackLeiblerDivergence`Private`domainp, 
               FunctionRepo`kullbackLeiblerDivergence`Private`domainq]]], 
            True, Null, False, Message[
              MessageName[
              FunctionRepo`kullbackLeiblerDivergence, "supportPQ"], 
              FunctionRepo`kullbackLeiblerDivergence`Private`p, 
              FunctionRepo`kullbackLeiblerDivergence`Private`q]; 
            Return[Undefined], 
            Blank[], 
            Message[
             MessageName[
             FunctionRepo`kullbackLeiblerDivergence, "supportValidationFail"],
              FunctionRepo`kullbackLeiblerDivergence`Private`p, 
             FunctionRepo`kullbackLeiblerDivergence`Private`q]]; 
          FunctionRepo`kullbackLeiblerDivergence`Private`rv = 
           Replace[FunctionRepo`kullbackLeiblerDivergence`Private`domainp, {
             Pattern[FunctionRepo`kullbackLeiblerDivergence`Private`l, {
                 Repeated[
                 FunctionRepo`kullbackLeiblerDivergence`Private`domainPattern]\
}] :> Array[$CellContext`x, 
                Length[FunctionRepo`kullbackLeiblerDivergence`Private`l]], 
              Blank[] -> $CellContext`x}]; 
          FunctionRepo`kullbackLeiblerDivergence`Private`assumptions = 
           Simplify[
             And[FunctionRepo`kullbackLeiblerDivergence`Private`assumptions, 
              
              Block[{Statistics`Library`RealIntegerQ = 
                Element[#, Integers]& }, 
               If[
                ListQ[FunctionRepo`kullbackLeiblerDivergence`Private`rv], 
                Apply[And, 
                 MapThread[
                 Statistics`DistributionsCommonDump`DomainMemberQ, {
                  FunctionRepo`kullbackLeiblerDivergence`Private`domainp, 
                   FunctionRepo`kullbackLeiblerDivergence`Private`rv}]], 
                Statistics`DistributionsCommonDump`DomainMemberQ[
                FunctionRepo`kullbackLeiblerDivergence`Private`domainp, 
                 FunctionRepo`kullbackLeiblerDivergence`Private`rv]]]]]; 
          Assuming[FunctionRepo`kullbackLeiblerDivergence`Private`assumptions, 
            Simplify[
             FunctionRepo`kullbackLeiblerDivergence`Private`method[
              Refine[
              LogLikelihood[
                FunctionRepo`kullbackLeiblerDivergence`Private`p, {
                 FunctionRepo`kullbackLeiblerDivergence`Private`rv}] - 
               LogLikelihood[
               FunctionRepo`kullbackLeiblerDivergence`Private`q, {
                FunctionRepo`kullbackLeiblerDivergence`Private`rv}]], 
              Distributed[
              FunctionRepo`kullbackLeiblerDivergence`Private`rv, 
               FunctionRepo`kullbackLeiblerDivergence`Private`p], 
              Apply[
              Sequence, 
               FunctionRepo`kullbackLeiblerDivergence`Private`methodOpts]], 
             TimeConstraint -> {2, 10}]]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Method -> Expectation, Assumptions :> $Assumptions}, 
    "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`kullbackLeiblerDivergence"], False]]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"fce4a863-689b-4005-bc24-faba279337b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kullbackLeiblerDivergence", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", "\[Rho]1", "]"}], ",", 
   RowBox[{"BinormalDistribution", "[", "\[Rho]2", "]"}]}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"5ec8fba7-2cf3-462f-ac44-3aa8b53c644c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", "\[Rho]1", " ", "\[Rho]2"}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Rho]2", "2"]}], "-", 
   RowBox[{
    SuperscriptBox["\[Rho]2", "2"], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Rho]1", "2"]}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Rho]2", "2"], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Rho]2", "2"]}], "]"}]}], "+", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Rho]1", "2"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Rho]2", "2"]}]], "]"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Rho]2", "2"]}], ")"}]}]]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"ad4fdc61-2cca-4607-81b7-1d9034879309"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kullbackLeiblerDivergence", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EmpiricalDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<b\>\""}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"EmpiricalDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"bca30795-b9dc-4999-ac8a-93a48394a5fe"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Log", "[", "2", "]"}]}], "3"]], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"c8e42858-38f1-48d8-ba86-d8a1049d0e05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kullbackLeiblerDivergence", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BernoulliDistribution", "[", "p", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"EmpiricalDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"200811e0-9976-442e-8d63-800751e9f445"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "p"}], ")"}]}], "]"}]}], "+", 
  RowBox[{"p", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"3", " ", "p"}], "]"}]}]}]], "Output",
 CellLabel->"Out[70]=",ExpressionUUID->"a0855585-d02b-4b7c-9174-3537e70310f1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["maximumSpacingEstimation", \
"Subsection",ExpressionUUID->"e7f25d6e-d412-498b-92a0-f28a46aa5a37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "maximumSpacingEstimation"}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"5dc8f8f8-a1f2-4148-9fe6-38ff79eeffe3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximumSpacingEstimation[data, dist] fits dist to \
data using the maximum spacing estimation method.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"maximumSpacingEstimation", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`data_", 
                    "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"#1", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], 
                    ",", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`dist_", 
                    "?", "Statistics`Library`UnivariateDistributionQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`expr", "=", 
                    RowBox[{"Inactivate", "[", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{"Differences", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`dist", ",", 
                    RowBox[{
                    "Sort", "[", 
                    "FunctionRepo`maximumSpacingEstimation`Private`data", 
                    "]"}]}], "]"}], ",", "1"}], "}"}], "]"}], "]"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"Except", "[", "Sort", "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`cons", "=", 
                    RowBox[{
                    "DistributionParameterAssumptions", "[", 
                    "FunctionRepo`maximumSpacingEstimation`Private`dist", 
                    "]"}]}], ",", 
                    "FunctionRepo`maximumSpacingEstimation`Private`result"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`result", 
                    "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", "=", 
                    RowBox[{"-", "Statistics`Library`MachineInfinity"}]}], 
                    "}"}], ",", 
                    RowBox[{"NMaximize", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`expr", ",", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`cons", "&&", 
                    RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    "Statistics`Library`GetDistributionParameters", "[", 
                    "FunctionRepo`maximumSpacingEstimation`Private`dist", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`maximumSpacingEstimation`Private`opts",
                     "}"}], ",", 
                    RowBox[{"Options", "[", "NMaximize", "]"}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`maximumSpacingEstimation`Private`result", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"\<\"Distribution\"\>", "\[Rule]", 
                    "FunctionRepo`maximumSpacingEstimation`Private`dist"}], "/.",
                     "\[VeryThinSpace]", 
                    RowBox[{
                    "Last", "[", 
                    "FunctionRepo`maximumSpacingEstimation`Private`result", 
                    "]"}]}], ",", 
                    RowBox[{"\<\"MaxSpacingEstimate\"\>", "\[Rule]", 
                    RowBox[{
                    "First", "[", 
                    "FunctionRepo`maximumSpacingEstimation`Private`result", 
                    "]"}]}]}], "]"}], ",", "$Failed"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MaxIterations", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"StepMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`maximumSpacingEstimation\
\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximumSpacingEstimation[data, dist] fits dist to \
data using the maximum spacing estimation method.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "maximumSpacingEstimation[data, dist] fits dist to data using the maximum \
spacing estimation method.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`maximumSpacingEstimation, {
      FunctionRepo`maximumSpacingEstimation[
         PatternTest[
          Pattern[FunctionRepo`maximumSpacingEstimation`Private`data, 
           Blank[]], VectorQ[#, NumericQ]& ], 
         PatternTest[
          Pattern[FunctionRepo`maximumSpacingEstimation`Private`dist, 
           Blank[]], Statistics`Library`UnivariateDistributionQ], 
         Pattern[FunctionRepo`maximumSpacingEstimation`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{FunctionRepo`maximumSpacingEstimation`Private`expr = Inactivate[
            Mean[
             Log[
              Differences[
               Flatten[{0, 
                 CDF[FunctionRepo`maximumSpacingEstimation`Private`dist, 
                  Sort[FunctionRepo`maximumSpacingEstimation`Private`data]], 
                 1}]]]], 
            Except[Sort]], FunctionRepo`maximumSpacingEstimation`Private`cons = 
          DistributionParameterAssumptions[
           FunctionRepo`maximumSpacingEstimation`Private`dist], 
          FunctionRepo`maximumSpacingEstimation`Private`result}, 
         FunctionRepo`maximumSpacingEstimation`Private`result = 
          Block[{Indeterminate = -Statistics`Library`MachineInfinity}, 
            NMaximize[{FunctionRepo`maximumSpacingEstimation`Private`expr, 
              Simplify[
               And[FunctionRepo`maximumSpacingEstimation`Private`cons, 
                OptionValue[Assumptions]]]}, 
             Statistics`Library`GetDistributionParameters[
             FunctionRepo`maximumSpacingEstimation`Private`dist], 
             Apply[Sequence, 
              
              FilterRules[{
               FunctionRepo`maximumSpacingEstimation`Private`opts}, 
               Options[NMaximize]]]]]; If[
           MatchQ[FunctionRepo`maximumSpacingEstimation`Private`result, {
             Blank[], {
              BlankSequence[Rule]}}], 
           Association[
            ReplaceAll[
            "Distribution" -> 
             FunctionRepo`maximumSpacingEstimation`Private`dist, 
             Last[FunctionRepo`maximumSpacingEstimation`Private`result]], 
            "MaxSpacingEstimate" -> 
            First[FunctionRepo`maximumSpacingEstimation`Private`result]], \
$Failed]]}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AccuracyGoal -> Automatic, EvaluationMonitor -> None, MaxIterations -> 
      Automatic, Method -> Automatic, PrecisionGoal -> Automatic, StepMonitor -> 
      None, WorkingPrecision -> MachinePrecision, 
      Assumptions :> $Assumptions}, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`maximumSpacingEstimation"], False]]], "Output",
 CellLabel->"Out[71]=",ExpressionUUID->"93980acd-2ef4-4690-b15b-37ba536c321d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["multiNonlinearModelFit", \
"Subsection",ExpressionUUID->"b0f9ea23-866e-4cac-9997-19632af0abfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "multiNonlinearModelFit"}]], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"6efeacfa-38f2-467c-826b-25397978554a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"multiNonlinearModelFit[{dat1, dat2, ...}, {fun1, \
fun2, ...}, params, vars] fits fun_i to data_i simultaneously.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"multiNonlinearModelFit", "[", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets_", 
                    ",", "FunctionRepo`multiNonlinearModelFit`Private`form_", 
                    ",", "FunctionRepo`multiNonlinearModelFit`Private`\
fitParams_", ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`\
independents", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"multiNonlinearModelFit", "[", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets", 
                    ",", "FunctionRepo`multiNonlinearModelFit`Private`form", 
                    ",", "FunctionRepo`multiNonlinearModelFit`Private`\
fitParams", ",", 
                    RowBox[{
                    "{", "FunctionRepo`multiNonlinearModelFit`Private`\
independents", "}"}], ",", 
                    "FunctionRepo`multiNonlinearModelFit`Private`opts"}], "]"}
                    ]}]},
                    {
                    RowBox[{
                    RowBox[{"multiNonlinearModelFit", "[", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets_", 
                    ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`form", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{
                    RowBox[{"{", "__Rule", "}"}], ",", "_List"}], "]"}]}], 
                    ",", "FunctionRepo`multiNonlinearModelFit`Private`\
fitParams_", ",", "FunctionRepo`multiNonlinearModelFit`Private`independents_",
                     ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"multiNonlinearModelFit", "[", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets", 
                    ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\<\"Expressions\"\>", "\[Rule]", 
                    "FunctionRepo`multiNonlinearModelFit`Private`form"}], ",", 
                    RowBox[{"\<\"Constraints\"\>", "\[Rule]", "True"}]}], 
                    "]"}], ",", 
                    "FunctionRepo`multiNonlinearModelFit`Private`fitParams", 
                    ",", "FunctionRepo`multiNonlinearModelFit`Private`\
independents", ",", "FunctionRepo`multiNonlinearModelFit`Private`opts"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"multiNonlinearModelFit", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets", 
                    ":", 
                    RowBox[{"{", 
                    RowBox[{"__", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{"#1", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"KeyValuePattern", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"\<\"Expressions\"\>", "\[Rule]", 
                    "FunctionRepo`multiNonlinearModelFit`Private`expressions_\
List"}], ",", 
                    
                    RowBox[{"\<\"Constraints\"\>", "\[Rule]", 
                    "FunctionRepo`multiNonlinearModelFit`Private`constraints_\
"}]}], "}"}], "]"}], ",", 
                    "FunctionRepo`multiNonlinearModelFit`Private`fitParams_\
List", ",", "FunctionRepo`multiNonlinearModelFit`Private`independents_List", 
                    ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`fitfun", ",",
                     "FunctionRepo`multiNonlinearModelFit`Private`weights", 
                    ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`numSets", 
                    "=", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`multiNonlinearModelFit`Private`expressions",
                     "]"}]}], ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`\
augmentedData", "=", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "#2", "]"}], ",", 
                    RowBox[{"Length", "[", "#1", "]"}]}], "]"}], ",", "#1", 
                    ",", "2"}], "]"}], "&"}], ",", 
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets"}], 
                    "]"}]}]}], ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`indexSymbol",
                     "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"DatasetIndexSymbol\"\>", 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`fitfun", "=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`conditions", 
                    "=", 
                    RowBox[{"Join", "@@", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`expressions",
                     "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], "/@", 
                    RowBox[{
                    "Range", "[", 
                    "FunctionRepo`multiNonlinearModelFit`Private`numSets", 
                    "]"}]}]}]}], "}"}], ",", 
                    RowBox[{"Switch", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`conditions", 
                    ",", 
                    RowBox[{
                    "Round", "[", 
                    "FunctionRepo`multiNonlinearModelFit`Private`indexSymbol",
                     "]"}]}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`weights", 
                    "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Weights", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`list_List", 
                    "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"#1", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "/;", 
                    RowBox[{
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`multiNonlinearModelFit`Private`list", "]"}],
                     "===", 
                    "FunctionRepo`multiNonlinearModelFit`Private`numSets"}]}],
                     "\[RuleDelayed]", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"ConstantArray", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`list", ",", 
                    RowBox[{
                    "Length", "/@", 
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets"}]}]\
, "}"}]}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`list", ":", 
                    RowBox[{"{", 
                    RowBox[{"__", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"#1", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], 
                    "}"}]}], "/;", 
                    RowBox[{
                    RowBox[{
                    "Length", "/@", 
                    "FunctionRepo`multiNonlinearModelFit`Private`list"}], "===", 
                    RowBox[{
                    "Length", "/@", 
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets"}]}]\
}], "\[RuleDelayed]", 
                    RowBox[{
                    "Join", "@@", 
                    "FunctionRepo`multiNonlinearModelFit`Private`list"}]}], 
                    ",", 
                    RowBox[{"\<\"InverseLengthWeights\"\>", "\[RuleDelayed]", 
                    RowBox[{"Join", "@@", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    FractionBox["1.`", "#1"], ",", "#1"}], "]"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{
                    "Length", "/@", 
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets"}]}]\
}]}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"NonlinearModelFit", "[", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`\
augmentedData", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "TrueQ", "[", 
                    "FunctionRepo`multiNonlinearModelFit`Private`constraints",
                     "]"}], ",", 
                    "FunctionRepo`multiNonlinearModelFit`Private`fitfun", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`fitfun", ",",
                     "FunctionRepo`multiNonlinearModelFit`Private`\
constraints"}], "}"}]}], "]"}], ",", 
                    "FunctionRepo`multiNonlinearModelFit`Private`fitParams", 
                    ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`indexSymbol",
                     ",", "FunctionRepo`multiNonlinearModelFit`Private`\
independents"}], "}"}], "]"}], ",", 
                    RowBox[{
                    "Weights", "\[Rule]", 
                    "FunctionRepo`multiNonlinearModelFit`Private`weights"}], 
                    ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`multiNonlinearModelFit`Private`opts", 
                    "}"}], ",", 
                    RowBox[{"Options", "[", "NonlinearModelFit", "]"}]}], 
                    "]"}]}]}], "]"}]}], ")"}], "/;", 
                    RowBox[{
                    "FunctionRepo`multiNonlinearModelFit`Private`numSets", "===", 
                    RowBox[{
                    "Length", "[", 
                    "FunctionRepo`multiNonlinearModelFit`Private`datasets", 
                    "]"}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ConfidenceLevel", "\[Rule]", 
                    FractionBox["19", "20"]}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Gradient", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxIterations", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"StepMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "VarianceEstimatorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Weights", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"DatasetIndexSymbol\"\>", "\[Rule]", 
                    "\[FormalN]"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "13", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "13", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`multiNonlinearModelFit\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"multiNonlinearModelFit[{dat1, dat2, ...}, {fun1, \
fun2, ...}, params, vars] fits fun_i to data_i simultaneously.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "multiNonlinearModelFit[{dat1, dat2, ...}, {fun1, fun2, ...}, params, \
vars] fits fun_i to data_i simultaneously.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`multiNonlinearModelFit, {
      FunctionRepo`multiNonlinearModelFit[
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`datasets, 
          Blank[]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`form, 
          Blank[]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`fitParams, 
          Blank[]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`independents, 
          Except[
           Blank[List]]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`opts, 
          OptionsPattern[]]] :> 
       FunctionRepo`multiNonlinearModelFit[
        FunctionRepo`multiNonlinearModelFit`Private`datasets, 
         FunctionRepo`multiNonlinearModelFit`Private`form, 
         FunctionRepo`multiNonlinearModelFit`Private`fitParams, {
         FunctionRepo`multiNonlinearModelFit`Private`independents}, 
         FunctionRepo`multiNonlinearModelFit`Private`opts], 
       FunctionRepo`multiNonlinearModelFit[
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`datasets, 
          Blank[]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`form, 
          Except[{
            BlankSequence[Rule]}, 
           Blank[List]]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`fitParams, 
          Blank[]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`independents, 
          Blank[]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`opts, 
          OptionsPattern[]]] :> 
       FunctionRepo`multiNonlinearModelFit[
        FunctionRepo`multiNonlinearModelFit`Private`datasets, 
         Association[
         "Expressions" -> FunctionRepo`multiNonlinearModelFit`Private`form, 
          "Constraints" -> True], 
         FunctionRepo`multiNonlinearModelFit`Private`fitParams, 
         FunctionRepo`multiNonlinearModelFit`Private`independents, 
         FunctionRepo`multiNonlinearModelFit`Private`opts], 
       FunctionRepo`multiNonlinearModelFit[
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`datasets, {
           PatternTest[
            BlankSequence[], MatrixQ[#, NumericQ]& ]}], 
         KeyValuePattern[{
          "Expressions" -> 
           Pattern[FunctionRepo`multiNonlinearModelFit`Private`expressions, 
             Blank[List]], "Constraints" -> 
           Pattern[FunctionRepo`multiNonlinearModelFit`Private`constraints, 
             Blank[]]}], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`fitParams, 
          Blank[List]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`independents, 
          Blank[List]], 
         Pattern[FunctionRepo`multiNonlinearModelFit`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{FunctionRepo`multiNonlinearModelFit`Private`fitfun, 
          FunctionRepo`multiNonlinearModelFit`Private`weights, 
          FunctionRepo`multiNonlinearModelFit`Private`numSets = 
          Length[FunctionRepo`multiNonlinearModelFit`Private`expressions], 
          FunctionRepo`multiNonlinearModelFit`Private`augmentedData = 
          Apply[Join, 
            MapIndexed[Join[
              ConstantArray[
               N[#2], 
               Length[#]], #, 2]& , 
             FunctionRepo`multiNonlinearModelFit`Private`datasets]], 
          FunctionRepo`multiNonlinearModelFit`Private`indexSymbol = 
          OptionValue["DatasetIndexSymbol"]}, 
         Condition[
         FunctionRepo`multiNonlinearModelFit`Private`fitfun = 
           With[{FunctionRepo`multiNonlinearModelFit`Private`conditions = 
              Apply[Join, 
                Map[{#, 
                  Part[
                  FunctionRepo`multiNonlinearModelFit`Private`expressions, \
#]}& , 
                 Range[
                 FunctionRepo`multiNonlinearModelFit`Private`numSets]]]}, 
             Apply[Switch, 
              Prepend[FunctionRepo`multiNonlinearModelFit`Private`conditions, 
               Round[
               FunctionRepo`multiNonlinearModelFit`Private`indexSymbol]]]]; 
          FunctionRepo`multiNonlinearModelFit`Private`weights = Replace[
             OptionValue[Weights], {Condition[
                PatternTest[
                 Pattern[FunctionRepo`multiNonlinearModelFit`Private`list, 
                  Blank[List]], VectorQ[#, NumericQ]& ], 
                Length[FunctionRepo`multiNonlinearModelFit`Private`list] === 
                FunctionRepo`multiNonlinearModelFit`Private`numSets] :> 
              Apply[Join, 
                MapThread[
                ConstantArray, {
                 FunctionRepo`multiNonlinearModelFit`Private`list, 
                  Map[
                  Length, 
                   FunctionRepo`multiNonlinearModelFit`Private`datasets]}]], 
              Condition[
                Pattern[FunctionRepo`multiNonlinearModelFit`Private`list, {
                  PatternTest[
                   BlankSequence[], VectorQ[#, NumericQ]& ]}], 
                Map[Length, FunctionRepo`multiNonlinearModelFit`Private`list] === 
                Map[Length, 
                  FunctionRepo`multiNonlinearModelFit`Private`datasets]] :> 
              Apply[Join, FunctionRepo`multiNonlinearModelFit`Private`list], 
              "InverseLengthWeights" :> Apply[Join, 
                Map[ConstantArray[1./#, #]& , 
                 Map[
                 Length, 
                  FunctionRepo`multiNonlinearModelFit`Private`datasets]]]}]; 
          NonlinearModelFit[
           FunctionRepo`multiNonlinearModelFit`Private`augmentedData, 
            If[
             TrueQ[FunctionRepo`multiNonlinearModelFit`Private`constraints], 
             FunctionRepo`multiNonlinearModelFit`Private`fitfun, {
             FunctionRepo`multiNonlinearModelFit`Private`fitfun, 
              FunctionRepo`multiNonlinearModelFit`Private`constraints}], 
            FunctionRepo`multiNonlinearModelFit`Private`fitParams, 
            
            Flatten[{
             FunctionRepo`multiNonlinearModelFit`Private`indexSymbol, 
              FunctionRepo`multiNonlinearModelFit`Private`independents}], 
            Weights -> FunctionRepo`multiNonlinearModelFit`Private`weights, 
            Apply[Sequence, 
             FilterRules[{FunctionRepo`multiNonlinearModelFit`Private`opts}, 
              Options[NonlinearModelFit]]]], 
          FunctionRepo`multiNonlinearModelFit`Private`numSets === 
          Length[FunctionRepo`multiNonlinearModelFit`Private`datasets]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AccuracyGoal -> Automatic, ConfidenceLevel -> Rational[19, 20], 
      EvaluationMonitor -> None, Gradient -> Automatic, MaxIterations -> 
      Automatic, Method -> Automatic, PrecisionGoal -> Automatic, StepMonitor -> 
      None, Tolerance -> Automatic, VarianceEstimatorFunction -> Automatic, 
      Weights -> Automatic, WorkingPrecision -> Automatic, 
      "DatasetIndexSymbol" -> \[FormalN]}, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`multiNonlinearModelFit"], False]]], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"c5ee1adc-6a88-41e5-a4b5-eb21b635912b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"BinormalDistribution", "[", "0.7", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}], "+=", "2."}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"model", "=", 
  RowBox[{"multiNonlinearModelFit", "[", "\[IndentingNewLine]", 
   RowBox[{"data", ",", "\[IndentingNewLine]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"a", " ", "\[FormalX]"}], "+", " ", "b1"}], ",", 
      RowBox[{
       RowBox[{"a", " ", "\[FormalX]"}], " ", "+", " ", "b2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b1", ",", "b2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[FormalX]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 TaggingRules->{},
 CellLabel->"In[73]:=",
 CellID->161500924,ExpressionUUID->"c39143e0-8df7-4e59-b0a1-a501fd5ada30"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"Round", "[", "\[FormalN]", "]"}], ",", "\[IndentingNewLine]",
         "1", ",", 
        RowBox[{
         RowBox[{"\[FormalX]", " ", "0.7479134444326814`"}], "-", 
         "0.04215532466430405`"}], ",", "\[IndentingNewLine]", "2", ",", 
        RowBox[{
         RowBox[{"\[FormalX]", " ", "0.7479134444326814`"}], "+", 
         "2.0691902633667745`"}]}], "]"}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 
      0.7479134444326814, $CellContext`b1 -> -0.04215532466430405, \
$CellContext`b2 -> 2.0691902633667745`}, {{\[FormalN], \[FormalX]}, 
      Switch[
       Round[\[FormalN]], 1, \[FormalX] $CellContext`a + $CellContext`b1, 
       2, \[FormalX] $CellContext`a + $CellContext`b2]}}, {1}, CompressedData["
1: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
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{\[FormalN], \[FormalX], $CellContext`a, \
$CellContext`b1, $CellContext`b2}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"50c2d7a1-46d5-4710-a375-62d6e5e83e58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Normal", "[", "model", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalN]", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[76]:=",
 CellID->671103164,ExpressionUUID->"2c3b7c6e-944b-4770-9eb2-ff95dc74ee9e"],

Cell[BoxData[
 GraphicsBox[{{{}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVxXs0FPgeAPCZwSDTRJSOmVMMaWNOu6SldtzvjxXLMkjrel6PyybW2rOS
EOVWHpVHTGgVtSIayyivEf1GiWLbiEXZMmUwg/IcNOaxe//4nI9JeNyRSBKB
QIj4x/9XXaZSxh0/4uLq1rIyJxm4PjvBDynpgB+JqVy3G2qoSudjpPyOGI8W
F5un/kxA9vGjlpXHZvAhM2q2S5AS0uYoVqVD/fhstDCU5rsOTufKeU2CeazN
DTK30VSAL0/eWlcjBkr2YohlAhltutYif8IQwUHy0YrZb7TRirlHSX/JBJjs
/ip1bRcV6bpedXtbOIn72NpHO/1lkGQ8FfL06Qr4ZRfrd5hpoEL//n0BAY3Y
UWOkdjpGDi3beywv3rgHl+dKIpi2GsjVyeHSxH8nof1afqtpLgl9zv5ksok/
hYs0PHK+eTQLBTmO2Yl63dA7x/IZkC7AuRXmfuLpUZz/P7qxYkwBI0ETnZUq
IW7Oq8yLql6FtLAUVWLRKp4vEckSdq6Dl2U8w3ThATZsuZ1qdUYKAeWTS43J
byBrKLb+dpMamlt071R+Ow/jUfynbrlE5HCwXe8iZQno37Zsyb6shZqsVs22
fSHCzmQLZvTAMnj1PzEusuXD8S2pw3ubyKi3qa3yu/B1vDpjHf+Liwo8xlMj
rsVqCATblm6Yn1vCs/XJtl8qloDFW733xFsTMfy30Ry0ZqFvuTWc8oaMPPtS
pMx5CZBu0LgFvboo1r+6Whr0HJgXdmadKNVCE3nn9cns1/hBIvN4T9sqGCST
7HU6RdiL9zlj7OokUI6dJFPPSuCzstXAONoGXHnv/MPK/Sf4sLXoqytVKuA4
9+zW8v8Iz4pjGjsO6yAkvBXOTx0GYbLfJa9AMrrjvS0irfoebr8reWFvroms
/cL25/5rAF+silnyVpKQxa01R6OqYVgINTJMsCCiRpfNO967r+MJxqsm9dNS
MDkyOhikmMJ1Qv+oJrE6kuzLnN3rT0Q7+o0ykvzI6LyB7/PBeCL6fufdZloX
GQWbcXpYhe+weClC+EejFKLrBt1E3GUopHNjrHw2Iw7e4Pe9lEPhkaJWiT4Z
2evL7tp7ijC7IWBqzISAGl7sWtSbeoENHvHeGIZIgNHQz+e+XcA8vyHPd4k9
cOi3kyseHRJscMY1h2nzERrF41opt+5B7+whNZ91OQznBE5e9ynFH8gdHI6p
BiIo47N5NQSBCdRZZ20nos4vTgndqL24ymXjPn2TGE49JBsrc3OxV0/f46Ol
SjAaspkhGvDh57KwONpuMmJHW+jF9ImgIuxBTUKZOlrjqDyCH/4Ow4/Z7+xe
qCHeXufYwdB+oOgE/PnXIAlttQr2rHwsgbDjmm2GPG20jyF1lx6YxXaH5zy3
LA/BRELbiEHFOPadt9n54Po0jLyScZi2HbiWdjUwJEkG1uUf2LWVc5i13jZt
ZzsD3LDRO7rPxdg7w7dq+KYcPO22dsjKJ0HfXa1L0KyC93qRNOnbl1j+coNO
tF4E5wNnVzJqFyG3++vPgqt00UkIFKRbfALmo6S6PaepyHDXws3KHCGwzQyb
PFMIaCydMbS5fAJXZNgadqcsA6X6OKs1eQULKOl76llSuOZqaTpC/Qv2hNOd
TtgRUcGV25lM+ig26j2f4m1PQI31cQWmtJfYQXLEOteLiGLyFBS6kCyI2tgc
PXl5CPKjdEXhc+3YKSLnXVjxCpDsXv+bqzmFu7IIRTZWKnDcrvGpvL0M2jvP
XGpREFBz874dAwmf8I60rg+a6q8go6bJV5WugpkuDWptozYK5vb/FDlMEnCk
+tPljCnIqtVeqdkjxEqZY+G4cAGGqSF3tp4SQ2S9e/XRc0T0jHGgJzNnDapx
QWyQnIwE+Vyf7vwPeM7FWyfVSAH4Ol/SLZoGse93XpyHJPTHiPHdCZs/sWv5
79M/qpMR5ybpPz81iqHkdWjB5LI6stZsc4gr3YA8y8K05DUqanHZ/2WefBS7
lQRg3wNr8EOmXEcR2Q7f+xy7GlCggypOJ41f8N4Aijd+dMh+C0osfMbXnlNC
QOJuT7pCFx0eI5c3s7Jw9q+Wu+yWZTDBCg1VZ01iQUnPwXTafewc6TxwwVCC
zfpHW9o8p0DZs9aAzkfip8qE7Q2lJDTOZpFo/DXITOFYWJloo78BkCQdNA==

        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAfedN8v//E8C/2qyr90AOwOZ7FvXb
/BPAXurDCkU8DsBOEN/3t/kTwPv52mmSNw7AIDlw/W/zE8A5GQkoLS4OwMKK
kgjg5hPAsVdlpGIbDsAILtcewM0TwKXUHZ3N9Q3AlHRgS4CbE8CMzo6Oo6oN
wKsBc6QANxPAWcJwcU8UDcAFZUcyGV0SwHDUjhBdzgvAE9jFbKKREcCEJXRF
BJ4KwFLDmmMpyhDAv65R0aNzCcB77z1skOMPwHdiiTb5LwjAuHeaaq9PDsAr
VYgx6AEHwE6SVSD+mQzAXHLhBY26BcBHnb1OSOwKwLXHMjEqeQTApsd51nNb
CcAKXEvyYE0DwF6ElBXPqAfA3Bq+jE0IAsB+YAOuCxMGwKsY+LzT2ADAAC0f
v0OFBMBEnVSIpF7/v9qLmYer1QLAKl5tSQ3Z/L8cCmip9EIBwAudFDapfvq/
azUqBdsc/7/jMHDVsPH3v2M33qjDw/u/CzW8Iqlw9b8qeDr/bqT4vy23lpvU
GvO/od1TxHlB9b9IjiXHa5Lwv+eBFTxHGPK/ucaFPGxq7L+6lShF6Fbtv9Ma
KVDYSue/MOnZ9C+d5r+MT62/JUPiv0S62wn9VuC/cwCdDLMj279wqa/4ERPT
v6+1sGTJ9tC/VmYjodJ8ub9Zi/mrsdq9v8fM2YozU7g/WOwib92anT86LcGy
UJfTPwXZIpyy6Mc/AnYV3GQZ4D9TsvYWOGLVPwcMUIFi7uY/RKQKFWia3z+D
4NZDcqPtP3xqrq1q0eQ/sJuGUH7y8T/ghrr5On/pP2+iZBDkVvU/Vfld4DOS
7j9eapodh4H4P+o38jdjp/E/iVF2OTOc+z/aAsXRu/nzPwQUleZ/+v4/03jj
uKh+9j/Xy4XwhA8BQM9wc3Ri2Pg/VXtiNprDAkDVE099sGT7P2wL6yLOWgRA
4TicWsvF/T8fq8aWBuoFQM52/MR6DQBAe7hDUw+bB0CwplADWlEBQHCmbLY2
LwlAlZfdq59/AkAMAjdiLuUKQP1dEHsvxwNARW1UlSqTDEA97ErzxggFQBi5
HW9FJA5AgTu+1cQ0BkCScoiRMNcPQElg194MegdAUoZPLZ22EEASRilSu6kI
QCpbhFWkfRFAtfOCbnHTCUDW5gmik1USQNt2grFxFgtAzmLlQRIfE0ADu7pe
2EMMQOEEp/iVIhNAPlGvLxpJDED0pmivGSYTQHnnowBcTgxAGevrHCEtE0Ds
E42i31gMQGRz8vcvOxNA1Wxf5uZtDED6g/+tTVcTQKYeBG71lwxAJqUZGomP
E0BJgk19EuwMQDlH29AMkxNAhBhCTlTxDEBM6ZyHkJYTQL6uNh+W9gxAcS0g
9ZedE0Ay2x/BGQENQLy1JtCmqxNAGjTyBCEWDUBSxjOGxMcTQOzllowvQA1A
ZWj1PEjLE0AmfItdcUUNQHgKt/PLzhNAYRKALrNKDUCdTjph09UTQNU+adA2
VQ1A6NZAPOLjE0C9lzsUPmoNQPp4AvNl5xNA9i0w5X9vDUANG8Sp6eoTQDHE
JLbBdA1AMl9HF/HxE0Ck8A1YRX8NQEUBCc509RNA34YCKYeEDUBYo8qE+PgT
QBod9/nIiQ1AakWMO3z8E0BTs+vKCo8NQH3nTfL//xNAjUngm0yUDUAbjUDS

        "]]},
      Annotation[#, "Charting`Private`Tag$29377#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAfedN8v//E8DcWacH3bn6v+Z7FvXb
/BPAGnnVxXew+r9OEN/3t/kTwFSYA4QSp/q/IDlw/W/zE8DQ1l8ASJT6v8KK
kgjg5hPAwFMY+bJu+r8ILtcewM0TwKhNieqII/q/lHRgS4CbE8B2QWvNNI35
v6sBc6QANxPAECkvk4xg+L8FZUcyGV0SwD5Na9Gn1PW/E9jFbKKREcBm7zU7
9nPzv1LDmmMpyhDA3AHxUjUf8b977z1skOMPwJjSwDrAL+2/uHeaaq9PDsBo
nbwmfHfov06SVSD+mQzALBIheA9a479Hnb1OSOwKwCDPzEoIqdy/psd51nNb
CcDIcZFTvkrTv16ElBXPqAfAsNBOTkZEwr9+YAOuCxMGwABMKsLVanY/AC0f
v0OFBMDw8u06bkvDP9qLmYer1QLA4PUTGRS80z8cCmip9EIBwFz6dmakJd0/
azUqBdsc/79+VYT0wqzjP2M33qjDw/u/Lk3sWdKu6D8qeDr/bqT4v+pIN2h7
Wu0/od1TxHlB9b9azYyIpjXxP+eBFTxHGPK/RnhvMdyS8z+6lShF6FbtvzjO
nSemIvY/MOnZ9C+d5r/cs9tvf6b4P0S62wn9VuC/hRuLjCX/+j9wqa/4ERPT
vzYuhvZfiv0/VmYjodJ8ub/swvI0Z+r/P8fM2YozU7g/qnO34j4fAUA6LcGy
UJfTP2Fbm1GUYgJAAnYV3GQZ4D8bBLgqUJADQAcMUIFi7uY/WoJ6KlbXBECD
4NZDcqPtP3DIRNNjGAZAsJuGUH7y8T+Jz0fm10MHQG+iZBDkVvU/JqzwH5aI
CEBeapodh4H4P8ZJ0sO6twlAiVF2OTOc+z8+r7sQ5+AKQAQUleZ/+v4/OupK
hF0jDEDXy4XwhA8BQDjmEmI6UA1AVXtiNprDAkC8t4BmYZYOQGwL6yLOWgRA
Qkon1e7GD0Afq8aWBuoFQFDSavbBeBBAe7hDUw+bB0BA6pSVsRoRQHCmbLY2
LwlAs2LbadSxEUAMAjdiLuUKQOfFdFGcVRJARW1UlSqTDEAHDZINaPYSQBi5
HW9FJA5AqbTL/maME0CScoiRMNcPQA1HWAMLLxRAUoZPLZ22EEDyOQE94sYU
QCpbhFWkfRFAwxAuS71bFUDW5gmik1USQFbSrWw9/RVAzmLlQRIfE0Bq9EnD
8JMWQOEEp/iVIhNAiD/Eq5GWFkD0pmivGSYTQKWKPpQymRZAGevrHCEtE0De
IDNldJ4WQGRz8vcvOxNAU00cB/ioFkD6g/+tTVcTQDym7kr/vRZAJqUZGomP
E0ANWJPSDegWQDlH29AMkxNAKqMNu67qFkBM6ZyHkJYTQEjuh6NP7RZAcS0g
9ZedE0CChHx0kfIWQLy1JtCmqxNA9rBlFhX9FkBSxjOGxMcTQN4JOFocEhdA
ZWj1PEjLE0D8VLJCvRQXQHgKt/PLzhNAGaAsK14XF0CdTjph09UTQFM2Ifyf
HBdA6NZAPOLjE0DHYgqeIycXQPp4AvNl5xNA5K2EhsQpF0ANG8Sp6eoTQAH5
/m5lLBdAMl9HF/HxE0A6j/M/pzEXQEUBCc509RNAWNptKEg0F0BYo8qE+PgT
QHYl6BDpNhdAakWMO3z8E0CScGL5iTkXQH3nTfL//xNAr7vc4So8F0C+yD7X

        "]]},
      Annotation[#, "Charting`Private`Tag$29377#2"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.8594285025482598`, 
   2.2198025979674303`}, {-2.8530651937489164`, 4.247178303395993}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"b99d028f-1448-45ae-820e-ef3372c94feb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SparseAssociation", \
"Subsection",ExpressionUUID->"26e3ab04-da92-4478-8bd1-7bbb8b6a2afc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseAssociation", "::", "usage"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"2d8ddbf0-decb-4a5e-b02b-e61a020df293"],

Cell[BoxData["\<\"\\!\\(\\*RowBox[{\\\"SparseAssociation\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"key\\\", \
StyleBox[\\\"1,1\\\", \\\"TI\\\"]], \\\"TI\\\"], \\\",\\\",  \
StyleBox[SubscriptBox[\\\"key\\\", StyleBox[\\\"1,2\\\", \\\"TI\\\"]], \\\"TI\
\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\",  RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"key\\\", \
StyleBox[\\\"2,1\\\", \\\"TI\\\"]], \\\"TI\\\"], \\\",\\\",  \
StyleBox[SubscriptBox[\\\"key\\\", StyleBox[\\\"2,2\\\", \\\"TI\\\"]], \\\"TI\
\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\
\",  StyleBox[\\\"default\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) creates a \
datastructure that can be used like a SparseArray, but with string indices.\"\
\>"], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"046bd57c-a4f1-4ff9-ba4b-ae9ba35dc4a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"array", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "2", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[449]:=",ExpressionUUID->"3064bfcf-43b0-4386-b469-451a894acc6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[449]=",ExpressionUUID->"ce5d9423-cad5-4726-abd2-4dc9303d7591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sparseAssoc", "=", 
  RowBox[{"SparseAssociation", "[", 
   RowBox[{
    RowBox[{"SparseArray", "[", 
     RowBox[{"array", ",", "Automatic", ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\""}], 
     "}"}], ",", "0"}], "]"}]}]], "Input",
 CellLabel->
  "In[450]:=",ExpressionUUID->"7e7bb879-2ac4-452d-aa51-91875a3c72e3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseAssociation",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.6666666666666666`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Keys:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"a\"", "\"b\"", "\"c\"", "\"d\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"b\"", "\"c\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FunctionRepo`SparseAssociation[
   Association[
   "Array" -> SparseArray[
     Automatic, {4, 2, 3}, 0, {
      1, {{0, 5, 10, 12, 16}, {{1, 1}, {1, 3}, {2, 1}, {2, 2}, {2, 3}, {1, 
        1}, {1, 3}, {2, 1}, {2, 2}, {2, 3}, {2, 1}, {2, 2}, {1, 1}, {1, 2}, {
        1, 3}, {2, 3}}}, {1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1}}], 
    "Keys" -> {
      Association["a" -> 1, "b" -> 2, "c" -> 3, "d" -> 4], 
      Association["a" -> 1, "b" -> 2], 
      Association["a" -> 1, "b" -> 2, "c" -> 3]}, "ValidatedQ" -> True]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[450]=",ExpressionUUID->"fac2f676-db53-4a47-bfd3-86cf29b3d541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sparseAssoc", "===", 
  RowBox[{"SparseAssociation", "[", 
   RowBox[{
    RowBox[{"Normal", "[", "sparseAssoc", "]"}], ",", 
    RowBox[{"Keys", "[", "sparseAssoc", "]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[451]:=",ExpressionUUID->"a566945a-32dd-4de4-b72c-dffd2df5938b"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[451]=",ExpressionUUID->"4a2b80f1-fff4-4ceb-a181-d1901596b2b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "sparseAssoc", "]"}]], "Input",
 CellLabel->
  "In[453]:=",ExpressionUUID->"05f23729-58f7-4b7e-ac90-017ef67c3b7b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.6666666666666666`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {4, 2, 3}, 0, {
   1, {{0, 5, 10, 12, 16}, {{1, 1}, {1, 3}, {2, 1}, {2, 2}, {2, 3}, {1, 1}, {
     1, 3}, {2, 1}, {2, 2}, {2, 3}, {2, 1}, {2, 2}, {1, 1}, {1, 2}, {1, 3}, {
     2, 3}}}, {1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[453]=",ExpressionUUID->"27fb23eb-6981-4028-98b4-dd3ae4a03455"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Normal", "@", "sparseAssoc"}]}], "===", "array"}]], "Input",
 CellLabel->
  "In[454]:=",ExpressionUUID->"cfeb5275-c868-45be-ad86-25c773bb2e6e"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[454]=",ExpressionUUID->"f4df0557-9861-4b3f-bf20-9628e8fc59cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "sparseAssoc", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ArrayDepth", "[", "sparseAssoc", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "sparseAssoc", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Keys", "[", "sparseAssoc", "]"}]}], "Input",
 CellLabel->
  "In[455]:=",ExpressionUUID->"0fbc06dc-8cf1-43d0-8249-71c3a9f068d5"],

Cell[BoxData["4"], "Output",
 CellLabel->
  "Out[455]=",ExpressionUUID->"a367d6cd-5523-4f36-b21b-c3ef5c22da80"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[456]=",ExpressionUUID->"3147e69c-b035-4f5e-9052-65bdf5b3a164"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2", ",", "3"}], "}"}]], "Output",
 CellLabel->
  "Out[457]=",ExpressionUUID->"61e0910e-077f-4f1c-94d9-5463029eceb3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", 
     ",", "\<\"d\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[458]=",ExpressionUUID->"859126ce-0f1c-4b73-915f-03e777371a7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sparseAssoc", "[", 
  RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "===", 
  RowBox[{"array", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}]}]}], "Input",
 CellLabel->
  "In[459]:=",ExpressionUUID->"b1a99917-9445-4765-818a-41e8a6e278e7"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[459]=",ExpressionUUID->"9f325cf1-7695-4630-af28-6b351b480a99"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[460]=",ExpressionUUID->"e9fed724-0824-4334-86a9-ca61ed8b63d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sparseAssoc", "[", 
   RowBox[{"[", 
    RowBox[{"\"\<a\>\"", ",", "All", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "3"}], "}"}]}], "]"}], "]"}], "===", 
  RowBox[{"sparseAssoc", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<a\>\"", ",", "\"\<c\>\""}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[461]:=",ExpressionUUID->"e166c204-1b98-4bff-a434-031965edb61d"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[461]=",ExpressionUUID->"58105afb-9f07-4f22-bf8b-a430e8e8b1b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sparseAssoc", "[", 
  RowBox[{"[", 
   RowBox[{"\"\<b\>\"", ",", "All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<c\>\""}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Normal", "@", "%"}]}], "===", 
  RowBox[{"array", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}]}], "Input",
 CellLabel->
  "In[462]:=",ExpressionUUID->"cfe8df5f-8a15-4b21-9c97-dfce33fd9651"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseAssociation",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             
             RasterBox[{{{0.772061, 0.92462, 0.998703}, {0.772061, 0.92462, 
              0.998703}}, {{0.772061, 0.92462, 0.998703}, {0.772061, 0.92462, 
              0.998703}}}, {{0, 0}, {2, 2}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             
             RasterBox[{{{0.772061, 0.92462, 0.998703}, {0.772061, 0.92462, 
              0.998703}}, {{0.772061, 0.92462, 0.998703}, {0.772061, 0.92462, 
              0.998703}}}, {{0, 0}, {2, 2}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Keys:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"c\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FunctionRepo`SparseAssociation[
   Association[
   "Array" -> SparseArray[
     Automatic, {2, 2}, 0, {
      1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {1, 1, 1, 1}}], "Keys" -> {
      Association["a" -> 1, "b" -> 2], 
      Association["a" -> 1, "c" -> 2]}, "ValidatedQ" -> True]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[462]=",ExpressionUUID->"6118583b-78dc-4f66-93d6-fdfe3dcad561"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[463]=",ExpressionUUID->"59c3aafa-1fa3-426d-8302-d6b8c971853f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["#", "2"], "&"}], ",", "sparseAssoc", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "@", 
  RowBox[{"Normal", "[", "%", "]"}]}]}], "Input",
 CellLabel->
  "In[464]:=",ExpressionUUID->"b83be3f5-d129-4839-b189-f7b0fa6b4903"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseAssociation",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.6666666666666666`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Keys:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"a\"", "\"b\"", "\"c\"", "\"d\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"b\"", "\"c\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FunctionRepo`SparseAssociation[
   Association[
   "Array" -> SparseArray[
     Automatic, {4, 2, 3}, 0, {
      1, {{0, 5, 10, 12, 16}, {{1, 1}, {1, 3}, {2, 1}, {2, 2}, {2, 3}, {1, 
        1}, {1, 3}, {2, 1}, {2, 2}, {2, 3}, {2, 1}, {2, 2}, {1, 1}, {1, 2}, {
        1, 3}, {2, 3}}}, {1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 4, 1, 1, 1, 4, 1}}], 
    "Keys" -> {
      Association["a" -> 1, "b" -> 2, "c" -> 3, "d" -> 4], 
      Association["a" -> 1, "b" -> 2], 
      Association["a" -> 1, "b" -> 2, "c" -> 3]}, "ValidatedQ" -> True]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[464]=",ExpressionUUID->"1e7d8efd-6524-496e-8b0c-01bfdb98ba61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[465]=",ExpressionUUID->"442f3b57-457d-46f8-842a-793487f353ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayRules", "@", "sparseAssoc"}]], "Input",
 CellLabel->
  "In[466]:=",ExpressionUUID->"d0f379ae-0db3-4388-82ab-1d58591bb2bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"d\"\>", ",", "\<\"a\"\>", ",", "\<\"a\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"d\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"d\"\>", ",", "\<\"a\"\>", ",", "\<\"c\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"d\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "_"}], "}"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[466]=",ExpressionUUID->"955a015b-bfb1-4e76-b1dc-0350eeb7e4ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SparseAssociation", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Alphabet", "[", "]"}], ",", "9"}], "]"}], ",", "3"}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"ArrayRules", "[", "%", "]"}]}], "Input",
 CellLabel->
  "In[467]:=",ExpressionUUID->"972cbd88-2090-4ee0-8252-afba106a0a8b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseAssociation",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["19", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["19", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.7037037037037037`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Keys:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"a\"", "\"b\"", "\"c\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"d\"", "\"e\"", "\"f\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Level \"", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
                    "\": \""}, "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"g\"", "\"h\"", "\"i\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FunctionRepo`SparseAssociation[
   Association[
   "Array" -> SparseArray[
     Automatic, {3, 3, 3}, 0, {
      1, {{0, 5, 12, 19}, {{1, 1}, {1, 3}, {2, 1}, {3, 1}, {3, 2}, {1, 3}, {2,
         1}, {2, 2}, {2, 3}, {3, 1}, {3, 2}, {3, 3}, {1, 1}, {1, 2}, {2, 2}, {
        2, 3}, {3, 1}, {3, 2}, {3, 3}}}, {1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 
       1, 1, 1, 1, 2, 1, 1}}], "Keys" -> {
      Association["a" -> 1, "b" -> 2, "c" -> 3], 
      Association["d" -> 1, "e" -> 2, "f" -> 3], 
      Association["g" -> 1, "h" -> 2, "i" -> 3]}, "ValidatedQ" -> True]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[467]=",ExpressionUUID->"d49df56a-e5b3-414f-8329-fd5a2f07f4d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"d\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"d\"\>", ",", "\<\"i\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"e\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"f\"\>", ",", "\<\"h\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"d\"\>", ",", "\<\"i\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"h\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"e\"\>", ",", "\<\"i\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"f\"\>", ",", "\<\"h\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"b\"\>", ",", "\<\"f\"\>", ",", "\<\"i\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"h\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"h\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"i\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>"}], "}"}], 
    "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"f\"\>", ",", "\<\"h\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"c\"\>", ",", "\<\"f\"\>", ",", "\<\"i\"\>"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "_"}], "}"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[468]=",ExpressionUUID->"bdb7c762-482b-40af-b236-74811580fc73"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tukeyMedianPolish", \
"Subsection",ExpressionUUID->"e9e75c8c-5552-4968-99ba-f046fd15b3b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "tukeyMedianPolish"}]], "Input",
 CellLabel->
  "In[103]:=",ExpressionUUID->"5da7d7b8-e171-4eca-a0c1-852ad28cf372"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"tukeyMedianPolish[mat] performs the Tukey median \
polish algorithm to find row and column effects in a data matrix.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" DownValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DownValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DownValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"tukeyMedianPolish", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`mat_List", ",", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`outputType", ":", 
                    
                    RowBox[{"\<\"Matrix\"\>", 
                    "|", "\<\"PropertyAssociation\"\>"}], 
                    ":", "\<\"Matrix\"\>"}], ",", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`tukeyMedianPolish`Private`try", "=", 
                    RowBox[{
                    RowBox[{
                    "tukeyMedianPolish", "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`opts", "]"}], "[",
                     "FunctionRepo`tukeyMedianPolish`Private`mat", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`tukeyMedianPolish`Private`try", ",", 
                    RowBox[{
                    "_", "?", 
                    "FunctionRepo`tukeyMedianPolish`Private`validOutputQ"}]}],
                     "]"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`outputType", ",", 
                    "\[IndentingNewLine]", "\<\"PropertyAssociation\"\>", ",", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`propAssoc", "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`try", "]"}], ",", 
                    "\[IndentingNewLine]", "_", ",", 
                    "FunctionRepo`tukeyMedianPolish`Private`try"}], "]"}], 
                    ",", "$Failed"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"tukeyMedianPolish", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`compilationOpts", 
                    "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"OptionValue", "[", "Compiled", "]"}], "}"}], 
                    "]"}]}], ",", 
                    "FunctionRepo`tukeyMedianPolish`Private`cf"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`tukeyMedianPolish`Private`fun", "=", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`\
itukeyMedianPolish", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`tukeyMedianPolish`Private`opts", "}"}],
                     ",", 
                    RowBox[{
                    "Options", "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`\
itukeyMedianPolish", "]"}]}], "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"FunctionRepo`tukeyMedianPolish`Private`cf", "=", 
                    RowBox[{"Compile", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`tukeyMedianPolish`Private`m", ",", 
                    "_Real", ",", "2"}], "}"}], "}"}], ",", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`fun", "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`m", "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`compilationOpts", 
                    ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    RowBox[{"FunctionRepo`tukeyMedianPolish`Private`cf", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
                    "NumericQ"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "tukeyMedianPolish", "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`opts", "]"}], "=",
                     "FunctionRepo`tukeyMedianPolish`Private`cf"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"tukeyMedianPolish", "::", "compileFail"}], 
                    "MessageName"], "]"}], ";", "$Failed"}]}], "]"}]}]}], 
                    "]"}], "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`compilationOpts", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" SubValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"SubValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "SubValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"tukeyMedianPolish", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`mat_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{"#1", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], 
                    "]"}], "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{
                    "Dimensions", "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`mat", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "Positive"}], ",", 
                    RowBox[{"_Integer", "?", "Positive"}]}], "}"}]}], "]"}]}],
                     ":=", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`\
itukeyMedianPolish", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    "{", "FunctionRepo`tukeyMedianPolish`Private`opts", "}"}],
                     ",", 
                    RowBox[{
                    "Options", "[", 
                    
                    "FunctionRepo`tukeyMedianPolish`Private`\
itukeyMedianPolish", "]"}]}], "]"}]}], "]"}], "[", 
                    "FunctionRepo`tukeyMedianPolish`Private`mat", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"tukeyMedianPolish", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], "|", 
                    RowBox[{"_", "?", "MatrixQ"}]}], "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"tukeyMedianPolish", "[", 
                    RowBox[{
                    "FunctionRepo`tukeyMedianPolish`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "_", 
                    "]"}], ":=", "$Failed"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"MaxIterations", "\[Rule]", "100"}]},
                    {
                    
                    RowBox[{"\<\"ConvergenceTest\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"Tolerance", "\[Rule]", 
                    RowBox[{"Scaled", "[", "0.0001`", "]"}]}]},
                    {
                    
                    RowBox[{"\<\"LocationEstimator\"\>", "\[Rule]", 
                    "Median"}]},
                    {
                    RowBox[{"Compiled", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"MaxIterations", "\[Rule]", "100"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`tukeyMedianPolish\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"tukeyMedianPolish[mat] performs the Tukey median \
polish algorithm to find row and column effects in a data matrix.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "tukeyMedianPolish[mat] performs the Tukey median polish algorithm to \
find row and column effects in a data matrix.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`tukeyMedianPolish, {
      FunctionRepo`tukeyMedianPolish[
         Pattern[FunctionRepo`tukeyMedianPolish`Private`mat, 
          Blank[List]], 
         Optional[
          Pattern[FunctionRepo`tukeyMedianPolish`Private`outputType, 
           Alternatives["Matrix", "PropertyAssociation"]], "Matrix"], 
         Pattern[FunctionRepo`tukeyMedianPolish`Private`opts, 
          OptionsPattern[]]] :> 
       With[{FunctionRepo`tukeyMedianPolish`Private`try = 
          FunctionRepo`tukeyMedianPolish[
           FunctionRepo`tukeyMedianPolish`Private`opts][
           FunctionRepo`tukeyMedianPolish`Private`mat]}, 
         If[
          MatchQ[FunctionRepo`tukeyMedianPolish`Private`try, 
           PatternTest[
            Blank[], FunctionRepo`tukeyMedianPolish`Private`validOutputQ]], 
          Switch[
          FunctionRepo`tukeyMedianPolish`Private`outputType, 
           "PropertyAssociation", 
           FunctionRepo`tukeyMedianPolish`Private`propAssoc[
           FunctionRepo`tukeyMedianPolish`Private`try], 
           Blank[], FunctionRepo`tukeyMedianPolish`Private`try], $Failed]], 
       FunctionRepo`tukeyMedianPolish[
         Pattern[FunctionRepo`tukeyMedianPolish`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{FunctionRepo`tukeyMedianPolish`Private`compilationOpts = 
          Flatten[{
             OptionValue[Compiled]}], 
          FunctionRepo`tukeyMedianPolish`Private`cf}, 
         Condition[
          
          With[{FunctionRepo`tukeyMedianPolish`Private`fun = 
            FunctionRepo`tukeyMedianPolish`Private`itukeyMedianPolish[
              Apply[Sequence, 
               FilterRules[{FunctionRepo`tukeyMedianPolish`Private`opts}, 
                Options[
                FunctionRepo`tukeyMedianPolish`Private`itukeyMedianPolish]]]]}\
, FunctionRepo`tukeyMedianPolish`Private`cf = 
            Compile[{{FunctionRepo`tukeyMedianPolish`Private`m, 
                Blank[Real], 2}}, 
              FunctionRepo`tukeyMedianPolish`Private`fun[
              FunctionRepo`tukeyMedianPolish`Private`m], 
              Evaluate[
               Apply[Sequence, 
                Cases[FunctionRepo`tukeyMedianPolish`Private`compilationOpts, 
                 OptionsPattern[]]]]]; If[
             MatrixQ[
              FunctionRepo`tukeyMedianPolish`Private`cf[
               RandomReal[1, {3, 3}]], NumericQ], 
             FunctionRepo`tukeyMedianPolish[
              FunctionRepo`tukeyMedianPolish`Private`opts] = 
             FunctionRepo`tukeyMedianPolish`Private`cf, Message[
               MessageName[
               FunctionRepo`tukeyMedianPolish, "compileFail"]]; $Failed]], 
          MatchQ[
          FunctionRepo`tukeyMedianPolish`Private`compilationOpts, {True, 
            OptionsPattern[]}]]]}], "SubValues" -> 
    Information`InformationValueForm[
     SubValues, FunctionRepo`tukeyMedianPolish, {Condition[
         FunctionRepo`tukeyMedianPolish[
          Pattern[FunctionRepo`tukeyMedianPolish`Private`opts, 
           OptionsPattern[]]][
          PatternTest[
           Pattern[FunctionRepo`tukeyMedianPolish`Private`mat, 
            Blank[]], MatrixQ[#, NumericQ]& ]], 
         MatchQ[
          Dimensions[FunctionRepo`tukeyMedianPolish`Private`mat], {
           PatternTest[
            Blank[Integer], Positive], 
           PatternTest[
            Blank[Integer], Positive]}]] :> 
       FunctionRepo`tukeyMedianPolish`Private`itukeyMedianPolish[
         Apply[Sequence, 
          FilterRules[{FunctionRepo`tukeyMedianPolish`Private`opts}, 
           Options[
           FunctionRepo`tukeyMedianPolish`Private`itukeyMedianPolish]]]][
        FunctionRepo`tukeyMedianPolish`Private`mat], 
       FunctionRepo`tukeyMedianPolish[
         Pattern[FunctionRepo`tukeyMedianPolish`Private`opts, 
          OptionsPattern[]]][
         Alternatives[{}, 
          PatternTest[
           Blank[], MatrixQ]]] :> {{}}, FunctionRepo`tukeyMedianPolish[
         Pattern[FunctionRepo`tukeyMedianPolish`Private`opts, 
          OptionsPattern[]]][
         Blank[]] :> $Failed}], "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     MaxIterations -> 100, "ConvergenceTest" -> Automatic, Tolerance -> 
      Scaled[0.0001], "LocationEstimator" -> Median, Compiled -> False}, 
    "Attributes" -> {}, "FullName" -> "FunctionRepo`tukeyMedianPolish"], 
   False]]], "Output",
 CellLabel->"Out[103]=",ExpressionUUID->"2f2d40f1-72c7-44df-b759-5f5852697dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"N", "@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"10", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", "matrix", "]"}]}], "Input",
 CellChangeTimes->{{3.791273680562056*^9, 3.791273714049474*^9}, {
  3.7912737784727316`*^9, 3.791273778660079*^9}, {3.7912739431915703`*^9, 
  3.7912739436836433`*^9}, {3.7912745920644417`*^9, 3.791274592298622*^9}},
 CellLabel->"In[104]:=",
 CellID->443871870,ExpressionUUID->"ddd76005-0bdf-4eef-a2b1-e27c86ce4923"],

Cell[BoxData[
 TagBox[GridBox[{
    {"7.`", "10.`", "10.`", "10.`", "4.`", "4.`"},
    {"0.`", "4.`", "0.`", "2.`", "1.`", "9.`"},
    {"6.`", "6.`", "7.`", "6.`", "7.`", "2.`"},
    {"6.`", "3.`", "6.`", "3.`", "4.`", "1.`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[105]=",ExpressionUUID->"9e8869e6-008a-4657-a007-b5be35cc06b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"polish", " ", "=", " ", 
   RowBox[{"tukeyMedianPolish", "[", "matrix", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"polish", ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "\[Rule]", "True"}], ",", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Rule]", "True"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[106]:=",
 CellID->19768148,ExpressionUUID->"9dfa27c0-9231-488f-a277-9ddedc89e8f9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "0.75`"}], "0.75`", "0.5`", "1.500579833984375`", 
     RowBox[{"-", "3.49993896484375`"}], 
     RowBox[{"-", "0.5`"}], "3.`"},
    {
     RowBox[{"-", "1.2503204345703125`"}], "1.2496795654296875`", 
     RowBox[{"-", "3.0003204345703125`"}], "0.0002593994140625`", 
     RowBox[{"-", "0.0002593994140625`"}], "10.999679565429688`", 
     RowBox[{"-", "3.4996795654296875`"}]},
    {"0.7497100830078125`", 
     RowBox[{"-", "0.7502899169921875`"}], 
     RowBox[{"-", "0.0002899169921875`"}], "0.0002899169921875`", 
     "1.9997711181640625`", 
     RowBox[{"-", "0.0002899169921875`"}], "0.5002899169921875`"},
    {"1.75`", 
     RowBox[{"-", "2.75`"}], "0.`", 
     RowBox[{"-", "1.999420166015625`"}], "0.00006103515625`", "0.`", 
     RowBox[{"-", "0.5`"}]},
    {
     RowBox[{"-", "0.3747100830078125`"}], "1.1252899169921875`", 
     "1.3752899169921875`", "0.3747100830078125`", 
     RowBox[{"-", "0.6247711181640625`"}], 
     RowBox[{"-", "3.6247100830078125`"}], "5.1247100830078125`"}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "ColumnsIndexed" -> {-2 -> True}, "RowsIndexed" -> {-2 -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[107]=",ExpressionUUID->"7accbc18-b6c7-42c4-873f-eec877d034c5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["multiSet", \
"Subsection",ExpressionUUID->"9231c90f-9978-4d21-8d57-134232cfc8ba"],

Cell[BoxData[
 RowBox[{"<<", "FunctionRepo`"}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"d6af41e2-bf1e-474c-a13b-c339d75d83b2"],

Cell[BoxData[
 RowBox[{"?", "multiSet"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"8b2d7699-c36a-4db5-af75-471c049c21d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"multiSet", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], "]"}], ",", 
    RowBox[{"multiSet", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1", ",", "3"}], "}"}], "]"}]}], "]"}], "//",
   "Normal"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"f8e07950-295d-4aab-acd7-464a9303bdbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "3"}], "}"}]], "Output",
 CellLabel->"Out[50]=",ExpressionUUID->"56699f00-5640-40b2-a59a-c6802adee5db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"multiSet", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "3"}], "}"}], "]"}], ",", 
   RowBox[{"multiSet", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"0bdb69d7-c67e-4331-9214-522c4a4e1f6d"],

Cell[BoxData[
 RowBox[{"multiSet", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "1"}]}], "\[RightAssociation]"}], "]"}]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"90f4ab96-2a8d-4b1a-8cd2-7bf50ac2735c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"multiSet", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], "]"}], ",", 
    RowBox[{"multiSet", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "n"}], ",", 
       RowBox[{"2", "\[Rule]", "2"}], ",", 
       RowBox[{"3", "\[Rule]", "1"}]}], "\[RightAssociation]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"f5a9f0fc-a4b0-470b-91ec-142556d34b9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", "-", "n"}], "}"}]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"c80bc8ae-604b-46bd-8f87-0d7877ab3ba8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["checkboxLegended", "Subsection"]], \
"Subsection",ExpressionUUID->"491c85ee-eb96-489a-9de7-eeb2de507160"],

Cell[BoxData[
 RowBox[{"<<", "FunctionRepo`"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"53be8ef7-771a-4971-9d48-ba3020b02e48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Dataset1\>\"", "\[Rule]", " ", 
      RowBox[{"Range", "[", "10", "]"}]}], ",", 
     RowBox[{"\"\<Dataset2\>\"", "\[Rule]", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"10", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "]"}]}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"checkboxLegended", "[", "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", "dataset", "]"}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"68f7efbd-2b69-4440-9bd3-9848271a09cc"],

Cell[BoxData[
 DynamicModuleBox[{FunctionRepo`checkboxLegended`Private`opacity$$ = 
  Association["Dataset1" -> True, "Dataset2" -> True]}, 
  TemplateBox[{
    GraphicsBox[{{}, {{{
         StyleBox[{
           
           PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
            6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}}]}, {{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Opacity[
              Dynamic[
               Boole[
                TrueQ[
                 Lookup[
                 FunctionRepo`checkboxLegended`Private`opacity$$, "Dataset1", 
                  True]]], 
               TrackedSymbols :> {
                FunctionRepo`checkboxLegended`Private`opacity$$}]]]}}, 
          StripOnInput -> False]}, {
         StyleBox[{
           
           PointBox[{{1., 10.}, {2., 9.}, {3., 8.}, {4., 7.}, {5., 6.}, {6., 
            5.}, {7., 4.}, {8., 3.}, {9., 2.}, {10., 1.}}]}, {{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Opacity[
              Dynamic[
               Boole[
                TrueQ[
                 Lookup[
                 FunctionRepo`checkboxLegended`Private`opacity$$, "Dataset2", 
                  True]]], 
               TrackedSymbols :> {
                FunctionRepo`checkboxLegended`Private`opacity$$}]]]}}, 
          StripOnInput -> False]}}, {
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, 
         Annotation[#, {{Legended, Style}, Charting`Private`Tag$7758, {
           1}}]& ], 
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, 
         Annotation[#, {{Legended, Style}, Charting`Private`Tag$7758, {
           2}}]& ], {}, {}, {}}, {
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, 
         Annotation[#, {{Legended, Style}, Charting`Private`Tag$7758, {
           1}}]& ], 
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, 
         Annotation[#, {{Legended, Style}, Charting`Private`Tag$7758, {
           2}}]& ], {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0., 10.}, {0, 10.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     FormBox[
      TagBox[
       GridBox[{{
          ButtonBox[
           
           PaneSelectorBox[{
            True -> "\"Select none\"", False -> "\"Select all\""}, 
            Dynamic[
             TrueQ[
              Apply[And, FunctionRepo`checkboxLegended`Private`opacity$$]], 
             TrackedSymbols :> {
              FunctionRepo`checkboxLegended`Private`opacity$$}], Alignment -> 
            Center], 
           ButtonFunction :> (FunctionRepo`checkboxLegended`Private`opacity$$ = 
            AssociationThread[{"Dataset1", "Dataset2"}, 
              Not[
               TrueQ[
                Apply[
                And, FunctionRepo`checkboxLegended`Private`opacity$$]]]]), 
           ImageSize -> All, Appearance -> Automatic, Evaluator -> Automatic, 
           Method -> "Preemptive"]}, {
          TemplateBox[{
            TemplateBox[{"\[ThinSpace]", "\" \"", 
              CheckboxBox[
               Dynamic[
                FunctionRepo`checkboxLegended`Private`opacity$$["Dataset1"]]],
               "\"Dataset1\""}, "RowWithSeparators"], 
            TemplateBox[{"\[ThinSpace]", "\" \"", 
              CheckboxBox[
               Dynamic[
                FunctionRepo`checkboxLegended`Private`opacity$$["Dataset2"]]],
               "\"Dataset2\""}, "RowWithSeparators"], "None", "None"}, 
           "PointLegend", DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[
                    Dynamic[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset1", True]]], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[
                    Dynamic[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset1", True]]], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[
                    Dynamic[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset2", True]]], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[
                    Dynamic[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset2", True]]], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", 
                    DynamicBox[
                    ToBoxes[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset1", True]]], StandardForm], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", 
                    DynamicBox[
                    ToBoxes[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset2", True]]], StandardForm], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}], 
                    "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", 
                    DynamicBox[
                    ToBoxes[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset1", True]]], StandardForm], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", 
                    DynamicBox[
                    ToBoxes[
                    Boole[
                    TrueQ[
                    Lookup[
                    FunctionRepo`checkboxLegended`Private`opacity$$, 
                    "Dataset2", True]]], StandardForm], 
                    TrackedSymbols :> {
                    FunctionRepo`checkboxLegended`Private`opacity$$}], 
                    "]"}]}], "]"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#3, ",", #4}], "}"}]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
      TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  DynamicModuleValues:>{}]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"a36e8284-73fa-4f4a-bd58-b5e5faef31b9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["expressionToFunction", \
"Subsection",ExpressionUUID->"dffba0f4-0d0a-4456-a65f-58b3c9560710"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expressionToFunction", "::", "usage"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"44f058fe-a8b7-4ad4-85ba-d2f2d8327336"],

Cell[BoxData["\<\"\\!\\(\\*RowBox[{\\\"expressionToFunction\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[SubscriptBox[\\\"var\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\
\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"var\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) returns a function that takes \
\\!\\(\\*StyleBox[SubscriptBox[\\\"var\\\", StyleBox[\\\"i\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) as arguments\"\>"], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"a32fd485-ab87-41d3-925b-701b8a6c494f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"polyFun", "=", 
  RowBox[{"expressionToFunction", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "x"}], " ", "+", " ", 
     RowBox[{"x", "^", "2"}]}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"polyFun", "[", "1", "]"}]}], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"9ba67bf6-3302-4822-b07d-48acd6641350"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"8792938e-db4b-45b7-b25b-5703f360ab54"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"fdcffc4b-6263-4eb2-ac21-1fdeb36c58a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pdf", " ", "=", " ", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BinormalDistribution", "[", 
     RowBox[{"1", "/", "3"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pdfFun", "=", 
  RowBox[{"expressionToFunction", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", "pdf", "]"}], ",", "x", ",", "y"}], 
   "]"}]}]}], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"055a241a-78ac-461f-8076-d2a0c7fb6742"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["9", "16"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       FractionBox[
        RowBox[{"2", " ", "x", " ", "y"}], "3"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}]]}], 
  RowBox[{"4", " ", 
   SqrtBox["2"], " ", "\[Pi]"}]]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"e99f43a7-88b2-4140-b1cf-2e1f18a30b78"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["9", "16"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         FractionBox[
          RowBox[{"2", " ", "x", " ", "y"}], "3"], "+", 
         SuperscriptBox["y", "2"]}], ")"}]}]]}], 
    RowBox[{"4", " ", 
     SqrtBox["2"], " ", "\[Pi]"}]], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"9eaeb481-0827-49ac-a168-29fa68aba824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"powerFun", "=", 
  RowBox[{"expressionToFunction", "[", 
   RowBox[{
    SuperscriptBox["x", "y"], ",", 
    RowBox[{"x", "->", "\"\<Base\>\""}], ",", 
    RowBox[{"y", "\[Rule]", " ", "\"\<Exponent\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"powerFun", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Base\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<Exponent\>\"", "\[Rule]", "3"}]}], "|>"}], "]"}]}], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"16a556db-dfa8-489e-b9eb-f34316a8a03e"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"Null", ",", 
   SuperscriptBox["#Base", "#Exponent"], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"c5451e37-5c00-4b96-8128-c9f9e55b4199"],

Cell[BoxData["8"], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"ff642ffb-d422-4604-b9a7-19e8eb199d5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expressionToFunction", "[", 
   RowBox[{
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"E", ",", " ", "Pi"}], "}"}], "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"f95013eb-dc29-4c42-af61-391d44dc3540"],

Cell[BoxData[
 RowBox[{"\[ExponentialE]", "+", "\[Pi]"}]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"e2e79be2-5e4c-4be6-b2bc-9fe87b44569a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"powerFun2", "=", 
  RowBox[{"expressionToFunction", "[", 
   RowBox[{
    SuperscriptBox["x", "y"], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "->", "\"\<BaseExponentTuple\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"powerFun2", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<BaseExponentTuple\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "|>"}], "]"}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"9fb63f28-47ab-4b6f-a36c-c89011d5b6a9"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"Null", ",", 
   SuperscriptBox[
    TemplateBox[{"#BaseExponentTuple", "1"},
     "IndexedDefault"], 
    TemplateBox[{"#BaseExponentTuple", "2"},
     "IndexedDefault"]], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"0e42963f-93df-4340-af49-27e15149b3ea"],

Cell[BoxData["8"], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"7cdc725c-50f9-4162-bbb9-bd149f0b3bdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pdf", " ", "=", " ", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BinormalDistribution", "[", 
     RowBox[{"1", "/", "3"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"pdfVectorFun", "=", 
  RowBox[{"expressionToFunction", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", "pdf", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataRange", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"pdfVectorFun", ",", " ", 
     RowBox[{"CoordinateBoundsArray", "[", 
      RowBox[{"dataRange", ",", "0.1"}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"points", ",", 
   RowBox[{"DataRange", "\[Rule]", "dataRange"}]}], "]"}]}], "Input",
 CellLabel->"In[32]:=",
 CellID->65701632,ExpressionUUID->"42359224-f4bc-4d0d-9aef-30a44580c090"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["9", "16"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       FractionBox[
        RowBox[{"2", " ", "x", " ", "y"}], "3"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}]]}], 
  RowBox[{"4", " ", 
   SqrtBox["2"], " ", "\[Pi]"}]]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"c995d20a-a788-4e13-be1f-c0fa011cb7c8"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "vecVar12", "}"}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["9", "16"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          TemplateBox[{"vecVar12", "1"},
           "IndexedDefault"], "2"], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           TemplateBox[{"vecVar12", "1"},
            "IndexedDefault"], " ", 
           TemplateBox[{"vecVar12", "2"},
            "IndexedDefault"]}], "3"], "+", 
         SuperscriptBox[
          TemplateBox[{"vecVar12", "2"},
           "IndexedDefault"], "2"]}], ")"}]}]]}], 
    RowBox[{"4", " ", 
     SqrtBox["2"], " ", "\[Pi]"}]], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"0847548a-d125-4751-ad9a-d8eb13cf386d"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxl3XngZmP9//FBlkhCdglZSyrLrxLO2LWgbKlIpEmyJ8tXRpiiSIlo0rci
QiRbGKrzsY0wE7KGDDPWwZgxZjEz+N3d1/245nu/7v45PZ2Zz5zPOdfz2q/3
e439D9v1GwsOGzZspWWHDfvvtfxvsSHXjbv/W7TyiO7/Fqk8uvu/hSuP6/7v
HZXf7v5vocobdX/efP5G9+ctWPmX3Z+3QOV7uj9vWOV55Qe2eP/u33+r8j+6
f35e5Q27/97cyud0f/4bled0f9ysyl/r/ryZlcd2f97rlTfo/rzplX/e/XnT
Kk/r/rxXK/+9+/dfrnx698+/WHmv7r/3XOW1uz9/UuVnuj9vQuWR3b//78or
dv/8A5W/3r1/1/zn7fKYyt3L9x/fHC/2q+79Bt9f/n7lXcrPr3x9+fcrv7t7
faryVuX5Kx9Vfr/Kl5Tfv/Jj5f1UXrR7nVr5gvJ+K3+qvP/KD5XvU/mw8v0q
v7N7nV359+X7V96ilI/Kj5TyU/mIUr4qL1z+z3D8r1I+K/+2lN/KB5fyXfmT
pfxXXqR7fUflB4o/lX9X/Kp8SPGv8mbFz8q9a3L1OK98xnzGfMZ8xnzGfMZ8
xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfK7P2/MZ
dz9vx2fMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xn
zGfMZ8xnzGfMZ8xnzGfMZ8xnzOfgAW9xXvmM+Yz5jPmM+Yz5jPmM+Yz5jPmM
+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Vyft+cz5jPmM+Yz5jPm
M+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz
5jPmM+Yz5nPwQLub3uK88hnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ
8xnzGfMZ8xnzGfMZ8xnzGfMZ87k+b/c6pjKfMZ8xnzGfMZ8xnzGfMZ8xnzGf
MZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfgwf6
zdnuprc4r3zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzG
fMZ8xnzGfMZ8rs/b5TGV+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM
+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Rw8MO7NfnO2u+ktziuf
MZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ/r
8/Z8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8
xnzGfMZ8xnzGfMZ8xnzGfMZ8xnwOHpi3ynFv9puz3U1vcV75jPmM+Yz5jPmM
+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5XJ+353PfukLHZ8xn
zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfM
Z8xnzGfMZ8xnzOdYN0oemHfOeasc92a/Odvd9Bbnlc+Yz5jPmM+Yz5jPmM+Y
z5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jP9Xl7PvetC3Z8xnzGfMZ8xnzG
fMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8
xnzGfI513+SBdaOcd855qxz3Zr852930FueVz5jPmM+Yz5jPmM+Yz5jPmM+Y
z5jPmM+Yz5jPmM+Yz5jPmM+Yz5jP9Xm71zGV+Yz5jPmM+Yz5jPmM+Yz5jPmM
+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPkc+zaS
B9Z9c90o551z3irHvdlvznY3vcV55TPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz
5jPmM+Yz5jPmM+Yz5nN93i6PqcxnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xn
zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfM59h3lTywbyPXfXPd
KOedc94qx73Zb852N73FeeUz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPm
M+Yz5jPmc33ens99++o6PmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5j
PmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz7HvsnkgX1XuW8j131z3Sjn
nXPeKse92W/Odje9xXnlM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPm
M+Zzfd6ez337Yjs+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5j
PmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPse+5+SBfZO57yr3beS6b64b5bxz
zlvluDf7zdnuprc4r3zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnyu
z9vzuW9fe8dnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xn
zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfM5zi3kDyw7zn3Tea+q9y3keu+uW6U8845
b5Xj3uw3Z7ub3uK88hnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfO5Pm/P
575zKR2fMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8x
nzGfMZ8xnzGfMZ8xnzGfMZ8xn+PcUfLAuYXc95z7JnPfVe7byHXfXDfKeeec
t8pxb/abs91Nb3Fe+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5XJ+3ex1T
mc+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Y
z5jPmM+Yz5jPmM+Yz5jPcW4weeDcUZ5byH3PuW8y913lvo1c9811o5x3znmr
HPdmvznb3fQW55XPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jP9Xm7PKYynzGf
MZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8x
nzGfMZ8xnzGfMZ/j3G/ywLnBPHeU5xZy33Pum8x9V7lvI9d9c90o551z3irH
vdlvznY3vcV55TPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Zzfd6ez33nujs+Yz5j
PmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+
Yz5jPmM+Yz5jPse5/eSBc795bjDPHeW5hdz3nPsmc99V7tvIdd9cN8p555y3
ynFv9puz3U1vcV75jPmM+Yz5jPmM+Yz5jPmM+Yz5jPlcn7fnc19cho7PmM+Y
z5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jP
mM+Yz5jPmM+YzxF3I3ng3H6e+81zg3nuKM8t5L7n3DeZ+65y30au++a6Uc47
57xVjnuz35ztbnqL88pnzGfMZ8xnzGfMZ8xnzGfMZ8zn+pw9n/viqnR8xnzG
fMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8
xnzGfMZ8xnzGfI64OckDcTfy3H6e+81zg3nuKM8t5L7n3DeZ+65y30au++a6
Uc4757xVjnuz35ztbnqL88pnzGfMZ8xnzGfMZ8xnzGfM5/q83euYynzGfMZ8
xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzG
fMZ8xnzGfMZ8jrhXyQNxczLuRp7bz3O/eW4wzx3luYXc95z7JnPfVe7byHXf
XDfKeeect8pxb/abs91Nb3Fe+Yz5jPmM+Yz5jPmM+Yz5XJ+3y2Mq8xnzGfMZ
8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnz
GfMZ8xnzGfM54tYlD8S9yrg5GXcjz+3nud88N5jnjvLcQu57zn2Tue8q923k
um+uG+W8c85b5bg3+83Z7qa3OK98xnzGfMZ8xnzGfMZ8rs/b87kvLmHHZ8xn
zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfM
Z8xnzGfMZ8xnzOeIO5k8ELcu415l3JyMu5Hn9vPcb54bzHNHeW4h9z3nvsnc
d5X7NnLdN9eNct45561y3Jv95mx301ucVz5jPmM+Yz5jPmM+1+ftXsdU5jPm
M+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz
5jPmM+Yz5jPmM+ZzxI1NHog7mXHrMu5Vxs3JuBt5bj/P/ea5wTx3lOcWct9z
7pvMfVe5byPXfXPdKOedc94qx73Zb852N73FeeUz5jPmM+Yz5nN93i6Pqcxn
zGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfM
Z8xnzGfMZ8xnzGfM54j7nDwQNzbjTmbcuox7lXFzMu5GntvPc795bjDPHeW5
hdz3nPsmc99V7tvIdd9cN8p555y3ynFv9puz3U1vcV75jPmM+Yz5XJ+353Nf
XO+Oz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Y
z5jPmM+Yz5jPmM+Yz5jPmM8Rtz15IO5zxo3NuJMZty7jXmXcnIy7kef289xv
nhvMc0d5biH3Pee+ydx3lfs2ct03141y3jnnrXLcm/3mbHfTW5xXPmM+Yz7X
5+353BeXv+Mz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz
5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmc+RdSB6I255xnzNubMadzLh1Gfcq4+Zk
3I08t5/nfvPcYJ47ynMLue85903mvqvct5HrvrlulPPOOW+V497sN2e7m97i
vPIZ87k+b/c6pjKfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8x
nzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnyNvSvJA3oWM255xnzNubMadzLh1
Gfcq4+Zk3I08t5/nfvPcYJ47ynMLue85903mvqvct5HrvrlulPPOOW+V497s
N2e7m97ivPK5Pm+Xx1TmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPm
M+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5nPkPUoeyJuSeRcybnvGfc64
sRl3MuPWZdyrjJuTcTfy3H6e+81zg3nuKM8t5L7n3DeZ+65y30au++a6Uc47
57xVjnuz35ztbnqL88rnvrxWHZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8x
nzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfI29Z8kDeo8ybknkX
Mm57xn3OuLEZdzLj1mXcq4ybk3E38tx+nvvNc4N57ijPLeS+59w3mfuuct9G
rvvmulHOO+e8VY57s9+c7W56W583rnzGdb9nj+t+zx7X/Z49rvs9e1z3e/a4
7vfscd3v2eO637PHdb9nj+t+zx7X/Z49rvs9e1z3e/a47vfscd3v2eO637PH
db9nj+t+zx7X/Z49rvs9e1z3e/a47vfscd3v2eO637PHdb9nj+t+zx7X/Z49
rvs9e1z3e/7f7/vf/Z79POS78xnzGY8u/15lPmM+44wDnXFkMw5lxrHLOFgZ
RyfjcOQ5/jwHnOcI8xxSnmPIfdC5jzL3YeU+jlwHznWknIfOeawcB2c/Otvh
9DivffklO9yXX7LDffklO9yXX7LDffklO9yXX7LDffklO9yXX7LDffklO9yX
X7LDffklO9yXX7LDffklO9yXX7LDffklO9yXX7LDffklO9yXX7LDffklO9yX
X7LDffklO9yXX7LDffklO9yXX7LDfMZ9+SU73JdfssN9+SU73Jdfcn7e0OSB
vIOZtyzzHmXelMy7kHHbM+5zxo3NuJMZty7jXmXcnIy7kef289xvnhvMc0d5
biH3Pee+ydx3lfs2ct03141y3jnnrXLcm/3mbHfTW5xXPmM+Yz5jPmM+Yz5j
PmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPkfe
3+SBvKGZdzDzlmXeo8ybknkXMm57xn3OuLEZdzLj1mXcq4ybk3E38tx+nvvN
c4N57ijPLeS+59w3mfuuct9GrvvmulHOO+e8VY57s9+c7W56i/PKZ8xnzGfM
Z8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xn
zOfI2508kPc384Zm3sHMW5Z5jzJvSuZdyLjtGfc548Zm3MmMW5dxrzJuTsbd
yHP7ee43zw3muaM8t5D7nnPfZO67yn0bue6b60Y575zzVjnuzX5ztrvpLc4r
nzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGf
MZ8xnzGf+75vx+fggbzdmfc384Zm3sHMW5Z5jzJvSuZdyLjtGfc548Zm3MmM
W5dxrzJuTsbdyHP7ee43zw3muaM8t5D7nnPfZO67yn0bue6b60Y575zzVjnu
zX5ztrvpLc4rnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8x
nzGfMZ8xnzGfMZ8xn/u+b8fn4Jr3gM+Ztzvz/mbe0Mw7mHnLMu9R5k3JvAsZ
tz3jPmfc2Iw7mXHrMu5Vxs3JuBt5bj/P/ea5wTx3lOcWct9z7pvMfVe5byPX
fXPdKOedc94qx73Zb852N73FeeUz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz
5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmc9/37fgcXPOW8BnzOfN2Z97fzBuaeQcz
b1nmPcq8KZl3IeO2Z9znjBubcSczbl3Gvcq4ORl3I8/t57nfPDeY547y3ELu
e859k7nvKvdt5LpvrhvlvHPOW+W4N/vN2e6mtzivfMZ8xnzGfMZ8xnzGfMZ8
xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ87vu+HZ+Da96hjcufr8xn
zOfM2515fzNvaOYdzLxlmfco86Zk3oWM255xnzNubMadzLh1Gfcq4+Zk3I08
t5/nfvPcYJ47ynMLue85903mvqvct5HrvrlulPPOOW+V497sN2e7m97ivPIZ
8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfO57/t2
fA6uecP4jEeUn1eZz5jPmbc78/5m3tDMO5h5yzLvUeZNybwLGbc94z5n3NiM
O5lx6zLuVcbNybgbeW4/z/3mucE8d5TnFnLfc+6bzH1XuW8j131z3SjnnXPe
Kse92W/Odje9xXnlM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz
5jPmM+Yz5nPf9+34HFzz/vEZ8xmPLv9eZT5jPmfe7sz7m3lDM+9g5i3LvEeZ
NyXzLmTc9oz7nHFjM+5kxq3LuFcZNyfjbuS5/Tz3m+cG89xRnlvIfc+5bzL3
XeW+jVz3zXWjnHfOeasc92a/Odvd9Bbnlc+Yz5jPmM+Yz5jPmM+Yz5jPmM+Y
z5jPmM+Yz5jPmM+Yz5jPmM+Yz33ft+NzcM3byWfMZ8xnPK48T2U+Yz5n3u7M
+5t5QzPvYOYty7xHmTcl8y5k3PaM+5xxYzPuZMaty7hXGTcn427kuf0895vn
BvPcUZ5byH3PuW8y913lvo1c9811o5x3znmrHPdmvznb3fQW55XPmM+Yz5jP
mM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPfd+343NwzbvLZ8xnzGfM
Z8xnzGfM58zbnXl/M29o5h3MvGWZ9yjzpmTehYzbnnGfM25sxp3MuHUZ9yrj
5mTcjTy3n+d+89xgnjvKcwu57zn3Tea+q9y3keu+uW6U8845b5Xj3uw3Z7ub
3uK88hnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfO57/t2fA6u
ebP5jPmMR5d/rzKfMZ8xnzGfMZ8zb3fm/c28oZl3MPOWZd6jzJuSeRcybnvG
fc64sRl3MuPWZdyrjJuTcTfy3H6e+81zg3nuKM8t5L7n3DeZ+65y30au++a6
Uc4757xVjnuz35ztbnqL88pnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfM
Z8xnzOe+79vxObjmvd+4/PnKfMZ8xnzGfMZ8xnzGfMZ8zrzdmfc384Zm3sHM
W5Z5jzJvSuZdyLjtGfc548Zm3MmMW5dxrzJuTsbdyHP7ee43zw3muaM8t5D7
nnPfZO67yn0bue6b60Y575zzVjnuzX5ztrvpLc4rnzGfMZ8xnzGfMZ8xnzGf
MZ8xnzGfMZ8xnzGfMZ8xn/u+b8fn4CHvhc+Yz5jPeFx5nsp8xnzGfMZ8xnzG
fM683Zn3N/OGZt7BzFuWeY8yb0rmXci47Rn3OePGZtzJjFuXca8ybk7G3chz
+3nuN88N5rmjPLeQ+55z32Tuu8p9G7num+tGOe+c81Y57s1+c7a76S3OK58x
nzGfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGf+75vx+fgIe+Bz3hE+XmV+Yz5
jPmM+Yz5jPmM+Yz5jPmcebsz72/mDc28g5m3LPMeZd6UzLuQcdsz7nPGjc24
kxm3LuNeZdycjLuR5/bz3G+eG8xzR3luIfc9577J3HeV+zZy3TfXjXLeOeet
ctyb/eZsd9NbnFc+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz73fd+Oz8FD
fm8+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPuPM4515gDOPaOYhzDxmmQcp86hk
HoaM455xoDOObMahzDh2GQcr4+hkHI48x8/nPDeY547y3ELue859k7nvKvdt
5LpvrhvlvHPOW+W4N/vN2e6mtzivfMZ8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzG
fO77vh2fg4f8nnzGfMajy79Xmc+Yz5jPmM+Yz5jPmM+Yz5jPmM+Ztzvz/mbe
0Mw7mHnLMu9R5k3JvAsZtz3jPmfc2Iw7mXHrMu5Vxs3JuBt5bj/P/ea5wTx3
lOcWct9z7pvMfVe5byPXfXPdKOedc94qx73Zb852N73FeeUz5jPmM+Yz5jPm
M+Yz5jPmM+Yz5jPmc9/37fgcPOT32rj8+cp8xnzGfMZ8xnzGfMZ8xnzGfMZ8
xnzGfMZ8zrzdmfc384Zm3sHMW5Z5jzJvSuZdyLjtGfc548Zm3MmMW5dxrzJu
TsbdyHP7ee43zw3muaM8t5D7nnPfZO67yn0bue6b60Y575zzVjnuzX5ztrvp
Lc4rnzGfMZ8xnzGfMZ8xnzGfMZ8xnzGf+75vx+fgIb8HnzGfMZ/xuPI8lfmM
+Yz5jPmM+Yz5jPmM+Yz5jPmM+Zx5uzPvb+YNzbyDmbcs8x5l3pTMu5Bx2zPu
c8aNzbiTGbcu415l3JyMu5Hn9vPcb54bzHNHeW4h9z3nvsncd5X7NnLdN9eN
ct45561y3Jv95mx301ucVz5jPmM+Yz5jPmM+Yz5jPmM+Yz73fd+Oz8FDnpvP
eET5eZX5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmcebsz72/mDc28g5m3
LPMeZd6UzLuQcdsz7nPGjc24kxm3LuNeZdycjLuR5/bz3G+eG8xzR3luIfc9
577J3HeV+zZy3TfXjXLeOeetctyb/eZsd9NbnFc+Yz5jPmM+Yz5jPmM+Yz5j
Pvd9347PwUOek8+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5m3
O/P+Zt7QzDuYecsy71HmTcm8Cxm3PeM+Z9zYjDuZcesy7lXGzcm4G3luP8/9
5rnBPHeU5xZy33Pum8x9V7lvI9d9c90o551z3irHvdlvznY3vcV55TPmM+Yz
5jPmM+Yz5jPmc9/37fgcPOS5+Iz5jPmMx5XnqcxnzGfMZ8xnzGfMZ8xnzGfM
Z8xnzGfMZ8znGoe153Pm7c68v5k3NPMOZt6yzHuUeVMy70LGbc+4zxk3NuNO
Zty6jHuVcXMy7kae289zv3luMM8d5bmF3Pec+yZz31Xu28h131w3ynnnnLfK
cW/2m7PdTW9xXvmM+Yz5jPmM+Yz5jPnc9307PgcPeQ4+Yz7j0eXfq8xnzGfM
Z8xnzGfMZ8xnzGfMZ8xnzGfMZ8xnzOcaR7nnM+Zz5u3OvL+ZNzTzDmbessx7
lHlTMu9Cxm3PuM8ZNzbjTmbcuox7lXFzMu5GntvPc795bjDPHeW5hdz3nPsm
c99V7tvIdd9cN8p555y3ynFv9puz3U1vcV75jPmM+Yz5jPmM+dz3fTs+Bw/5
d/mMR5SfV5nPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+YzzUOes9nzGfM
58zbnXl/M29o5h3MvGWZ9yjzpmTehYzbnnGfM25sxp3MuHUZ9yrj5mTcjTy3
n+d+89xgnjvKcwu57zn3Tea+q9y3keu+uW6U8845b5Xj3uw3Z7ub3uK88hnz
GfMZ8xnzue/7dnwOHvLvbFz+fGU+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+
Yz5jPmM+Yz5jPmM+Yz7jzOOdeYAzj2jmIcw8ZpkHKfOoZB4GPuOMA51xZDMO
ZcaxyzhYGUcn43DkOf48B5znCPMcUp5jyH3QuY8y92HlPo5cB851pJyHznms
HAdnPzrb4fQ4r3zGfMZ8xnzu+74dn4OH/Fw+Yz5jPmM+Yz5jPmM+Yz5jPmM+
Yz5jPmM+Yz5jPmM+Yz7XPCQ9nzGfMZ8xnzGfM2935v3NvKGZdzDzlmXeo8yb
knkXMm57xn3OuLEZdzLj1mXcq4ybk3E38tx+nvvNc4N57ijPLeS+59w3mfuu
ct9GrvvmulHOO+e8VY57s9+c7W56i/PKZ8xnzOe+79vxOXjIz+Ez5jPmMx5X
fk5lPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPtc8Qj2fMZ8xnzGfMZ8xnzNv
d+b9zbyhmXcw85Zl3qPMm5J5FzJue8Z9zrixGXcy49Zl3KuMm5NxN/Lcfp77
zXODee4ozy3kvufcN5n7rnLfRq775rpRzjvnvFWOe7PfnO1ueovzymfM577v
2/E5eMjf4zPmMx5d/l5lPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+Yz5jPmM+1zxg
PZ8xnzGfMZ8xnzGfMZ8zb3fm/c28oZl3MPOWZd6jzJuSeRcybnvGfc64sRl3
MuPWZdyrjJuTcTfy3H6e+81zg3nuKM8t5L7n3DeZ+65y30au++a6Uc4757xV
jnuz35ztbnqL88rnvu/b8Tl4yJ/jMx5R/lxlPmM+Yz5jPmM+Yz5jPmM+Yz5j
PmM+Yz5jPmM+Yz7XPH49nzGfMZ8xnzGfMZ8xnzGfM2935v3NvKGZdzDzlmXe
o8ybknkXMm57xn3OuLEZdzLj1mXcq4ybk3E38tx+nvvNc4N57ijPLeS+59w3
mfuuct9GrvvmulHOO+e8VY57s9+c7W56i/PK5+Ah/33j8t8r8xnzGfMZ8xn3
5ZfscF9+yQ735ZfscF9+yQ735ZfscF9+yQ735ZfscF9+yQ735ZfscF9+yQ73
5ZfscF9+yf/m4SzlqXJffskO9+WX7HBffskO9+WX7HBffskO9+WX7HBffskO
9+WXHMzbPZAHOPOIdi//Jw9h5jHLPEiZRyXzMGQc94wDnXFkMw5lxrHLOFgZ
RyfjcOQ5/jwHnOcI8xxSnmPIfdC5jzL3YeU+jlwHznWknIfOeawcB2c/Otvh
9DivyufeM5/bZaXVhw09NfKS25866LWad1l5PeDGsTscvMuwIeX17ke33evM
w4YNKa9X3LH1zENOHjZU87kccNgi3/rRsCHl9VcrTF7m6z8YNqS8Xn7JmN8/
cPSwIeX12Hc/O2P8PsOGlNcFR5x/04Kbzc/rfuu5Gy3218WHDR1z2sab7v7J
O+vz8W/XP9866uAPvt2+ecrK42/90sz5eaJ7Ps67/M4Ntrhjfh7pHW674FuL
/2l+Htp1bp9z+X0fnZ/Hcq2Pf/Hfi//qrfbEPzx6w7a/G6r7xtUH6y104CFv
Hfpm++jYYy845unZNQ+1+uHhGYcttNLX5ufNm/DePXY/evabNa/Ufb9caOt/
DX+z/dvOy49ZeszDdR+6+me1RY787qbNvPblzabdd8Dtc9rM47PuUR+46+6j
5ucFGX3enjdvee7c9rQ9H3vou9s9Xfexu77U+znv6/1c/47v++RCy73rrkXm
tFOfeO6wTRefVu/73v/4+xkHjBo1p+az3mP8Yztd99icms96ofOnnbPKUnNr
PutlH9vywufXnlvzWY+98eeXz15jbs1nvfPu7YRlFp5b81k3z6759rx759R8
1oePmLXaT0+eU7/XqJ0/Mu2aVea010x64NHJf12/zTwJ//zHIe2+F81pt157
5zNGfnF+3HXv1Xfy3Woe8F75+PLnH7p3xkmz20s/NOuF982cXu/zY2i9nT6+
xz7z8w6/a80LNt7n/+QtnbDznmf/Z/H5eQ9nXvXN5R/56uz24n3G7PDqVfcO
xH0/d4UjbvnXOfPjSJ992OE//v3xs9uvLXLfY/P+M3l+HJ1eOVKulPe/Xv7c
8oscMKv9x3e2O/xnU2bU+77Hm/O+uuVfrp7Zjr/urhE/GvdCve/73HPv9Tct
M2Vm/T6/uuKYQ+YtPKt+ny8+csPpU+fNrN/nygdP/umiD82s32fh9bb81so/
ndnef8fM9a/a+/b685Xvxa959Z67fj0/r9S2/z7j+VNvndneuszuuw1/+/GB
uLqzV5i6/CnbzWpHrX/DyPdOnlLv825ez2ueew/+nPfgvbivfH/38C9+c4Ep
r7eHjrn44NM3nVrv13h/G6173l03zajl+4Xn5+5z5+fm54U/c8b6xx76kfl5
pe+fsMpXj7t+Rv3+pwyNu3fT989oD77yRxv++aJbB/Ls7Lz2r26+774Z7etv
XX3Qy4tPGog7+t6T3/PHLafPaH8we7djRn1mfhzDWm/1yqlyoZwqt+4rr+OW
PH/4vEemt1udfMXvh3/5tXrf9z9n51tXvn3r6e0yX/rrEttdNaneVx7m/uyG
5+85YXotD39Z567Zt5w5vZaHp579yMI3Hze9locb37PR+u/banp73QLf/fiu
F99Zfx4fHj1rzHGbHTo/L+BxF+yy94MXTG/f8fDIr9y76cMDeUsu/86jnzqp
nZ8H4bIj9r7yvtHT200WXXqRXQ96fiCu488m3vThcaNebz81Yc6+h89+rd7X
TmjXtHPpNa7P0Xtv3qP7yse5f95t1kYbv9Z+7cBRQ9f8/aV6n3+X37PvB5d+
9LVafg4565h5W7z4Wi0/K3z/om+efsRrtfzccc3eH/7Uo9PambdNfPCu1W4Z
yKt21LUPPbnZja/V8rTnT4/52xpXTmt/Pf6qY6755FMDceT3uHTyeZfu9lp7
w+vDr1hv+5cG4uRtUN5Te2F5b/W+dp436lHtgnbCfeWUVzxzn1/fO3zUmKe2
mdZussSHrxn32Kv1vvL21b9fs+8Ba05t91znZ29v+u6n633lb7eVNr55+y9O
reXviE9f/+KdX5lay98XZ8w+5cFNprbnfO3dv/j6GrfUv1/nk6bvt+cOq8/P
O3n5NfPuP3X7qe1fdrhysecWeGggL87Xv/X53a84dWo7arvNv7Hyqc8MxPH+
0NrT7548eWr79lLnXrL5mCkDccqOLR63axav6339pmxXsx7C/p735j26r7wd
v+yZi82Z+Up7wKX/enqHzV6o9/n+6mcOeGyNEa/W8vjFqZ/Y4aG75+e5/9P2
yz75woQp8/NU33LknXtd9kq74UMn3LTrqrcP5PG7d99JG537iyntrV+5/MRV
L3tyIO/IvTsueu1WR09p19tolbn7bv3CQJzkZ8p7azcr73EgDtQBpR1oF12x
2y7U+3/q9TOzH5L1Nlauecpb910Xv23fPz/QvlSv/rvy9+1HVnt54/dMbk8b
NvJ7V77vP/W+8njTH2+a9ZMDJ9fyuM4ty4/beufJ9X3/8tVTX97kny+2B37+
yBOPPP/a+veVz6du/Z8XHl9rft7TEzZY5JD1vzC5fe9bb4066KsPDeRZG/+j
F5fd4vPz8zZ95b4bDrz5xhfbr/581GdH7zlpIE/Ed/Z/ZsTnTn+p/Wm5DsS1
/VWpJzrlp1tvDMTt+Uzpl7QXlX7K/DyOvX5+9gOx9nlcrx8yr9cvyXoS+87K
sXLtvvK8/4c/MvWEE55vr/zxX3834XfP1Pvqk30+udtvP7zei7V8v2+FP3+y
ffGFWr5f2uaa51+/9Pl2ybGHL7fbhLEDeSgfOvSJpT++9gvtSmfc+fgS73ly
IG/O5JE/uOzGW55rFzmxex2I2/+uUu7bV4oHA3FGVyntWHtTadfmx1Ep/cLK
xk3Zr85+HNZ+ade18+5P7dUD2L/jPXqv7ivfu7djNr9mh0nthAM3eHXDsQ/U
+8r78O/eO+qeMyfV8n7OxA/sd8Z2k9p333rdZX/c6Yb652se8Ic33fjOxefn
8d1t293PWnfBZ9q9b7l9+/33e2ggb+A6n/7Sxsf/8tl2q5HnLbnH6IkDeU62
LuW+PaZ4MBBn/dulHm+/U+r1ev+vpZ8xELfm/WUc0T5RxhX1vnFrjmuyH539
KKw+36vXzmn3stxi9c8nrpz76ds+OLHd9bKf/HWtVya0ffM+nfL93pt2WXa/
gyfW8v3GGreM3nLlp9vrD5271D3jbx/Io3rzxfdcf9spT7df+uAnJ9497YmB
PG5rlffcblHee73/XKl3BuJcH1f6Ie3XS79kIM7mE6Xf2+5d+sEDcUS+Xcat
7SVlHFvvmxeoeZx748Ycp2Q/NfsNWL2lHlevu+/f9Z6998wLf8SBx54y5/Qn
54/nr/7DFefd+u925NCTx1yx3wMDeS3XLO+5fbS894G8Wo+c3q1n2ldLvTOQ
12NUaWfbV0q7W++fXPqFA3EPTy7jrHa3Mu6q9zcp8waVzbPkODzHfdnvz35Y
toOYN+oN9Yj76o8N3lry2vf/84F21aHvbnDKk/fU++qTGw9dYc7E2x6s5X25
Wed/crmrH2i///Gnz/3cuj8fyAO8Y/kO7Tuv6X6XgTyEa5V6pj2s1DsDeZAe
fbPb7rbnlXZ4IA/DD0u/sb2p9CMH4kCPf6g7rmlPK+Ocen+lMi4eiKtxeJkH
ap8o80L1/m29ea+cF8lxeI7Dsl+M1+31S7Lexv5d38F3cV/9cvpjd17/6qH3
tRM3enr8iG3H1jgCfypeVD6u1POVZ5d+TuXvlX555RfKOHEgrt/OZR6lXeTq
7rxKvf9ymVerbLw3ojdPaJ5POTqlN4+E9U/MYxjnu689vao3rjWOc7+Ok3rj
Dv3q7Pdlu5jlGtd8eOW9treW9zyQ93bvUq+3K6zZrecH8u6dfEe3X9O+Y9tu
P2cg78+FD3b79e32pZ8/kHfggDIObf9VxqUDcY+XKPMc7dll3qPef6XMgw3E
kVi8zKO2G5V51XrfvCuvjTdn9Ob5zLPlvEuOo3Mcg9X3+t36ge7Xfkavn6Id
zXoGq+9X3Lhb77Tblvs1TsaHyt+vvGn59yr/ozxf5bXK81d+svx+lVcqv3/l
Tcr7qrx2b5465yFzXirnGXKcl/3i7Edg9YN6Vz3g/lOlPA/kbd3xtu77bf5U
yv9A3rixX+h+n+bPxZd6/+jiU+Xji3+Vf118HYgDuPulD/+3/DQ/K77X+3uU
+qCy+cUze/P85ulzHheb7xjRm+czr+W+8aZ5HPMO7hvfGFdP6I373NcfNy7R
T3a/9uN6/Tr9EPfVg+pl9Yj7Xyr1eY3b8uVS/1ceXtqHgTxBE0v91nyjtCcD
eQp2XLBbPzZjS/szECf50LHd+rVZtrRX9f7I0p5Vtn52Y6m/m7tL+1fXHe/v
rZvw0HyoeXbzzjnPmPM+Oc7OcQh+uNevw+ot9bJ6wH3XA0r7Wa91H1Pp/1R+
oPSXKp9Y+lOVp5T+VuWbS3+s8udKf63yYqU/V9dlrX/c2ltnsm6U8/JYe7dQ
b17WvKP72rtrevNm5oHcV9+atzCOdl99+5XeOM84xH390h/0+tH6cX3ryp16
T72b9U6W85rnu/Q/m11Kf77GJTqp9P8r71fGC5VvK+OJygeU8Ublvct4pPLI
Ml6p6+DW5bTb+hvWQawL5LwuVl+YZzPv4776wjyFcbL76gvjPOMQ92s85V4/
Oftxu/f6Gf6864/L+KheM4/n2WV81XynjGfr/YPLeLfyYmd1x8eVLy3j58oP
lvF15avL+LvuK7C+ad3TOmDmR7fuYl0h86ObRzfvm/NqA/nPe/MQxsmZ/9w4
zzgj850v1+u3Zb9BO5n5zJXbl3vl2P1jynzNQF62I8v8QrPEZ7vzPfX+hWU+
qPK/y/xR5TXK/NL8vFBl/qnu29A/a3rrrL/orWPmOk3mpzaPbl4481ObtzSv
lvmozUMYJ2c+auO4HHeM6vWDM/+0fki2g+rNg3r1tL83VObH6rXm9y7zkwN5
dj5Q5t+aG8v8Zr2/+Jvd+c/K7ynzpZX/VuZT676Yc3rrwpk/2DqYdZ7MF2ze
/ajevG/mCzZvad4s8wObh3isNw7OfMAL98YV2c/Vj8v8vuoB9ULm+1WOjU++
U+Z/m5XLfHz98xeW+fuBPAkPlfnlZkaZ/6/39y/rA5WvKesHdZ+R/sP+vXV3
69CZz9U62gd76z6Zv/VnvXl1876Zv9W8ZM6jmdfJ/K2/7M075LjZuC3zteo3
Zz+uxvvp9TOy3fMevGfvPfO8HVHWT5rTyvpTvX9lWa+q/GBZz6p8X1nvqvu4
tH8/7K3zL9db9878mm/11tWsE2U+TfPqB/fmdTN/pnky8zSZL9O4N8dlOe7Q
7838l+pV9Wzmw1Qv+O9fKOt39eq/n1LWSytPLuurlQ8q67F135v2zD4B696Z
v9C6mnWdzFdoHty8beYnNK+V8zTmBTL/oHFB9mOzX5X9AOVCuVLOMk/RCWV9
ufl3WY8fiKs+u6xPN+PKen69//Wy3l/3Cdb8cfYJ9NbBMz+cdTDrNJkPzjy3
8nZKbx72/t68X+Z/M4+S4/4c1xpHZf427Yh2JfO5qRf9953K/oV69d8PLPtF
BvKpvVL2RzSLX9Hdb1Lvq//sE7Cunfm2rGPluop5/8yv9aPevGjO+y3Qm1fK
/FnGlTkuyn569iuz36McKEfKVebVuKHsr2nuLvuJ6v19y/6jyuor6/zWrTM/
kXUP8/KZf+jnvXk05cM8UM5zGEdnviDtnnYw8wepp7PeqedJy/6pes24qIuM
6u6/aiaW/Wj1fj3P31unt06c+VusQ+Q8uHndzMdiniDHvTkOy3FD9muz3+W7
+a6+c83/U/YHVlYfWPdW3i/srdOu1lsnzPwV5qlzXtT3Na9nnirzRajH1GuZ
P4LH1g8mlP2NzTplf2f983y0jmmdLePtmyfLeZmcZ8hxb47TchyR/dzsl2W/
IdtBzzmz7F+t18xHYN0w17msq2R8bu/Je8t459Zhcp3BPHbGD+YFTzKesHKl
PJgHVx7M6+Y8pXmwjH+qnlZvZzxU9ZTvaR4t54ly3iLH2TkOzHFK9quz35f9
mGyX3zvtf14/afy0tr388A+/vtKwoTH737DfcT+c2n716sev2nybYUMLnjb3
uHP2mtLee+VnX5q2/7Ch7xw78pCxI19qb/z4G5t89rhhQ0ts9dKkO0a+0F7+
//absMIPhw0tedod/3zvns+2n/jFMyNuPG3Y0MGLrLZyM2xi+78nnTp2qe8P
G/rGZa88PP3lJ9q5J/1xh28fNGxo8df3XGytzvhm1WMvWvmr2w0bevmQTf+4
/5F3tzv87Z1nnbHksKGjPzv7/CW+NKNd5tmzNr34tbfaVS5b9opdNnu9/cIT
2084+ZC3248eNXuxwxab3g7b6o6HPvXQ2+2G7zz92cmTrm7nLd++9+JRb7dL
n3Hrkgf97bpm60c+sO/6173V/u0Lo1467Ruz29NX+8KNe2z0ZnvJt76y5vcP
m9Uudd8tpz330JvtiHXPffB7+89sD+xe32rPu/lLD/5j8fua6z94ygHPn/tm
+6vdt/3F5I/NaTeZ8p8NR90zt73tP0e9/vtd3mhnvefSdR85eV6759ATa957
+xPN6gt976C3F5jXbtz7c6N7f2/vc8757buHza3XIze//u5hu05tl3x4lwN+
9dIb7Q+Hn/OPY7ee0h672wnnHbb7nPaHV7+99vTrX2p/fvG4fbe/dE77x7PP
2+z4BV9st/zoNQtd9Pyc9vFT3pq27lrPta9u9fbsZZeZ2x5425eee3XFSe0u
x489Y+l15rajnn7ujAuun9Ce+9LB5z6++tx2sT+8+cAJdzzafuH/jdtqg7fm
tD8++9a9zt7u/vYzS5y3+T03zGnnLbrfanute2u7wBrjFnpp2zn1PXlvfk+/
90Gv7Pu7o384vf3ETRscss1us9vd3/zc2muc+lr7169fe/qpr8xux6+21TZ/
P2Jae2/3+kZ74i2rLLjXeis2G5z1ydmfGP1GO/PNw+6885Lbm6M33m6zzX4z
u91v+I+3G3Pac83/XrHoBw8/7Y36XXynw8+5eJ1T9pnRLr5hM7TqrJnt+3b8
zRKjj+2Uh+Pv33Lc5bPa1w//21ZLP/tce+VLSz9488X/3a889cLj1n2mPWat
7X7zo6dmtn9d686l3rXJ0+0dsz996MHDZrUvrzL09r3vfKKdt8jUt7+z4Kz2
L5/506rTV3+o3eHl27/28NMz2/2nfuCbF65xTzv86hW+/83zZrZjj7v5oR0v
fLjZe8o+52221qxaLpVT5UY58pyee8Hpk375mw1n1uunj/zQqnctN7VdoZn9
wi8mvt6u+eY9p3x/lSnt7AM+d+k6R3V+z+NPWv2FJ15qf/i34e85asqMdt51
Jy31xyNfbFc66ssXTNl1ZvvJhZf89DYXX9eu8b/7LLDGCjPbiWP/c8GwX1/d
zP7Rjnv/4XMzqie88Z18N+/Ne3zgrO1+vtnsae0hH5rwoQfPmt4+NHr7+/+2
9LT2neOPe8e0bV9v9xu/3luf32lS+5lhV6649fDp7a6/fnnnM099qt37pMu+
POfo6e2P79pnaOyCj7cfaZ753sifTG/nzXhk99n7Pdg++/VfH//MyOntiK81
5721yt3tu15+/l8nbjO9PXTW7rueeum9zTL7/WW5Vxd/vf3M/xv/sZ+OntRs
dc+J438z+vVaL6mneM575Uy589x+jwNOP3DFW8a/Vq+XfH7/6Z88aHK7+owT
xr64wGvtdR/52vc/v/kL7fCR5/7hzFGvtbsc/vjUb/3n2XbdGw+Zfd2U19q7
P3TbX/6w6LXtnuNmvOO9d7/WrvixVxfc4fBrmzWGv+O2DedNaz924pMzXl5z
QjP+jTX2fvK+abXeVI/ymuc84IXvrhx4z977D3Y/8TPLbjelfWKbf2/5gb9O
be9YYPI1zUEvt8tvcum7djtwWvvRlaf/9sed8eMKP3ljlztWndrOGrXSq8s/
/lj7yJx999j381PbYf88cJkfXfpge82I8cfssc/U9n/GfvB7Sx59T3v+2rt+
78xPTW3X3PbaGz7z/H3N7XMnrDbn51NrPa/er/VQr15SLtfolVPP5TlH3rPH
W2dMebVeL/nD2afvte7z7ZJLzpn295+80l51wRf32X6pZ9tPf2razAmXTmmX
P2ylRw+7ZWI78VPPXbT5ma+2D5z+uT9/Zccb2u2/ev3Wj/7l1fbwNbd/x6nL
/al59H9v/uklG06p7Y52SL2onuQJb3xn39178x7n/OSyF8782+T518c3vvXk
xV9sP7zUN2f8ZYuX268+95+9vr7vY+3c9lPHjZz3YvuJEbet9IUbH2xXufbp
M9bbe3I79p5Vrvra+ePatdbZbN8lvjy5nTfiuocm/PLmdrvpq+538r9fbGf9
8wc7LXLPvc132/t/e8Twl9qtf/n0vz533sTmx5u89MaJm05ur9Bu9tpR9frl
vXpePTa9V6/xXj2g3CrH3rP37vfwe+145K8W3vjxSe33Lh7/iRHvfr7d5rLl
Xj9r4tPtZUt978uzd3yh/eOST3zrt3tPaA/93ak7v7jDi+2Ks5Y59qDpFzTr
HrTia/v/zwvtxaVebnYr9XRt57X72iHtknpXPazeUI/wjHfKhXLiOT336o/e
eNKEs56t118stff6W+zxQHvABTts+IltJ7XrTRy2/Jpv3d3uufBOu+5xxqT2
tF/uftKPtr6pfc/ZH/zoF3ac1M7d4x0fW/iM8c3ON5z+/Xu+9Wy7R6lnmrVK
vVP7Kfot2tFv9tpV7YZ2RL2nHuQhLyf1yvUKvXLuPXvvtxz976XH7vVEe86U
929+7r5Pt5Mmjtp2jQ0fbR995NLFjjlhYnvg+K2OuP2Wi5q9l3//y8s//3T7
+1JumvVLOar9KP0q7bx2X7umnVMvq6fVE+oN5Vy5Vw6UC8/pue9f6/rFtpo1
oV4XW+3En779k381d1y50xbjt+zUQ6VebN5d6sn2Q6Vf1GxQ+km137dErx+o
X/KuXj9FO6xd1o5oV9Rr6jle8lS5UE68V+959SOPeeLko+9uj37/hQ9ecsED
7W2Xjn3pdz9p27eO/vuim171YPv9sz/4wolnjmrvPfWojS555IH24NLuN6eX
fkDtp77e67fqR+lX6TfoR2j3tIPqYfWyekS9ohwr157Tc1987xf2f+qx++p1
2J+777355/u636Hdv5Tz5o+l3Lenl3qo+V2pl9oHSr3fvLBNtx1o1yztcPPm
zG673N5a+r3NoaUf3A7r9Qtf7/UT1XNv9eo9nvHOe/ReR5V+XnNa6ffVfrp+
u36Mfo1298FeO6xd0E74Lr7Td4snzcv3dL1ptyj1VtPO6NZj7bTSjjQvrt5t
V9oPl3a8OfKj3Xa9XezH3X5Ts3DpR7UfL/3U5v07rfTffmv7+TKOaDY9vTuu
aLfpjSvmFK79Wv1c/TD9Mv0G/QjtmnZOPave5b16YF75fZv3jO7+vs03yvto
bj2j+z6aA8r7an65Qfd9NRuW99nMK++zWXyF7vtuhi3efd+1360fvs4x3e/V
fP2y7vdq1i/fs/ns6O73bPYu37v50ze737tZspSH5vOLdctDc2NvnPTz3rhp
6V6/7pheP++2Xj9j7V6/Q7uonVQvq6cf79Ujr5Xy3DxYynm9/qH40JxYfGgO
K740Py6+NJsXn5p1xnV9av5YfGueK741Kxcfm7uLj81Oxdfm9uJr88XiczOm
+NzsUnwf/u1Du77XcYBxge/iO3mP3qvn9NxTS33ULDupWx81J5T6qrmz1FfN
JqU+a75V6rNmqNR3zSalvmuml/qw2XBmtz5s9ij1ZfNcqS+bfUt92mxR6tPm
A6W+Hb5lqW/rONW4VT9Wv1Y9ol5559rder5e/1zag2ZWaQ+aH5b2ovl3aS+a
ZYa67UlzemlPmmdKe9Ns8INue9NsUdqj5u+lPWreuWi3vWret2q3vWouKu1Z
c2Npz5oFTu62d8NHl/au9qP0q5YYV7z/Tq8e8F69Z8/puW8p7XHzldIeN2+X
9rrZqLTXzTqlPW8+W9rz5qDS3jffLu1986/SH2geLP2BZp/SX2hOLv2F5vel
PzH81NKfqOMa4xz1snqaZ7xTjpXrW3vl4vheOfl46QfV6zmlv9R8rfSXmgNK
f6q5u/Snmk1Lf6s5sPS3mr1Kf6w5vvTHmlGlv9YcXPprzZulP9e8XvpzTVP6
e8PXLf295vzeOH1Eb9x+ba+e3bJX7yoHyoX37L17zrN7z7116a82Sz3R7a82
65T+bDNU+rPNTqW/24wr/d1mndIfbpb7S7c/3Nxc+svNu47o9pebz5b+dHN7
6U8315T+9vB1Sn+79qP0q37VaxfP6LWT6jn1nnpEvXJgz8uNe54q58q938Pv
tcyZ3XFGvX6gjEeaJ8t4pPlwGa80fy/jleacMp5pPlDGM81vy3in+W0Z7zR/
L+Oh4aeX8VBt17Rz2gXthHKtnCsXyon37L2fX8Zx9Tq5jPea35bxXrPIN7rj
wWbzMh5sflDGi81vynixebiMJ4evWsaTtZ+h36EeVi+r19Rz6gn1Bg956b15
j57Lc65QxtPNpDKebtYp4+1mrzLebp4o4/HmsTIeb1Yu4/VmZBmvN98o4/nh
d5bxfLNkrx+rX6vfoB+h3dUO84x3yq1y7Dv77keWeYp6Pb7MZzRPl/mM5q4y
39HsV+Y7mneX+ZCmKfMhzdgyXzJ8zTJfUsc1xjmze/06/TztnnZQO6JdUS+r
p9V76kH1hnrEe/bePbffY98y39R8qMw3NTuU+ajmuDIf1exb5qua9ct8VbN8
rx+2SK9fph+jX8N79QBPeKNcKqe+u3KwVJmHq9cVy3xdM7LM1zXfLfN5zXfK
fF6zepnva0aV+b46DjAu0G/Qj9AOa5e1a9o57YZ2RL37g149rB5Tr3lv3qPn
9NzvK/OlzV/KfGmzZ2+cflFv3K7frR+uX6ufywNeKGfKne/kuy20dHc+uLm3
zAc355X54uauMl9c+4X6ifpR+lWb9/ol+inaee2+dlS7qh3SLqnX1fPqRfWk
eki9xGuef6vMw9fr8DJf3/yhzNfXcapxq9/T7+3P+XvGScZNyo1y5Lv4Tt6T
92ZcYZyhn67fznPe84Q3yqVyqp+q36rfpx+oH6VfpZ+i37JOr53fstfuaze1
o9od7ZB6Xr2v3lSPqpfUU/8fhk6dzA==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
6o8fZzlga/RTq2iLcF8ZmBF4PXCxcb1m+XC/Yxy895Hpzwx8ErgucH1Vkrl+
cj3yqc9uqErnDhwXOD7wnumQ74+Ng/DMx/+4XmU+/tv1Z2f7F31uJWQrbKPq
kpu1+jOup1lXP+d6nWfPugZ93jUra2XWzE+6Vubd59UB8Owp17ULXSvDN68P
3FCXZJ9rAzOVgaDX1VXWvayDV26e8vVhXcov8T1tGvBd9ITIPRsqWxyvfEF/
51s1vGXL1mkNcJz+yP1HOJ5YDxyue5XmKR3yhZyP7Iv8xFoJmTuvyU7Xj3UQ
615kdtYvyMfI4KzJ+uv+xDJRZtYlJ+h3q+8i4+e1H2nkdQvvfWY93ej36VsC
s+rS9+qbdcOTHnLdD89iTfugY362OgbafK66h798NncJfUHWHzxiGOrgGtvm
PXnJVXVJ5oMHoHdAFqOdalpWdCLoSHbUH79sI1WU129gO3XyGX3kWtvhKPvp
POPKa3LKQ/tfbZ6IG90H/YO46SP0v8+tp5sCX0ipI3gVOtKsp4fe63yArjTr
1O/yvZ/1v6++oqO/Q95H+R6tr+jrb6+v6Avud066w3gX2jfRZSO7jVImYl7d
3bl3ovINcy+2JSs2T2Oxj5S+v0UprTFZf7YrpTU1a+f2pbSOZj2+VSmtlVkz
926eZDVkN2xalmPNFNhPukJg61J6l/V421Jaf7MO36aUnuHetpSekR72MMsa
15allBfS2zn+17onuVfzJBeSds9AY/Mkb2KTw7hirdNXyhqIPoXtZT/7FvRw
565D9TvQOiD8Duok0E3sKK0ObK/eAr89TZN8bFdK9UQd7c1a1DJ0iudF892h
lOqP8DvF/xr9Oho3bmQQ7EmxK93LeiWudUtJV4HOgrUmdjOXu3adoY0Ha99L
9XtX+5EZrkt594rmFVufS12jXuF7rLWw9ck2PtAL9ccmKdvgQA9rXrElyrZF
Fxsv69dp+rGmvUg367mppsHa7DzdrNWm6MYuBfse7Fmwc5mgG5sVbFmwYVmn
lPTP1EW2x8L/WcNlu5XJxot/P8Pfoi0KtilrNk/87nPH7vHaqGxQSnomdErw
Quyfj5OfHqP7Zt8lrhnWB2lcYbsdqozY17aEj2AHjd0yOm7Wz1nnDWWuoEw3
y8vpC6yZH3fMsLZkrYkO/TrDoxNizmDN/YV8nPD0U9bwhEcXP9MwjB/Wug86
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
fgj9BbqcC6XoMC6SosOYJj1AGQ2dNbrq6T5Dh3G+8RHXxT5Dn4GeCH1EX2XD
vubpEv3x6xHlbB1orE76rd7m7wrzfmghydD9Ckk3c7UUPeKV+h9WSLLtEdbR
TOuJOrreekIff4MU/f2NUvT3N0nR088wPtK72Wfo2u+w3MiLt/gMXT7yLHp5
dNu3SamjWfrj97zjljHd07LSLw+w76xUne5s2aM61ce59kXc3I/Uxf41Rkqf
vcC+Qj+aaDjiHqs/fXCSzxgHU+279ME+prmy4x9ZBtlosu/mu0R62ffPkxL+
fOMg7fGOK8bTOVLyPc708eP+M2QLZBzuPDtE93TLT14ulsKPLnI8MLZmGA6Z
iDvVDq9OMh13niFjIVtxB9rRurlXahfr60LrhrgYz8hQ2D5PM27S5s405EXk
x5lS4rrGdLIs+VVVkgWQE5EnkC+QL3mGmzGN/TG2yfRl0sG2mnaGYk9N/WJb
jF0wbc8zbJAZ64TDlpkxD8UeGX4AxX6Z9sE2mvDIWMzN8DhkLOZj5mf4E/bN
2ErDRwiHPTLtjC01dta0N5S46Hf447eHdUTe4W3EQXmQ6Yib9JBnKTcyGjIi
8gryC7IqFLkGeRabaeyjkV95hhyH/Es45DXkYChyH7IwFJkLmZG5k/Igm1NP
xIVMSnykBz+mzignMjThkN2QSZHnkO+QTaHEheyOP351flvt7LdD9rbwLRE7
PfaqsD/l5HLkI7BloFOgGKgNdAxUB2oCqwc+4TtxYI1yop8F+sX/tQJrB9Ys
p2efBw732TqBw/TjvYMDqxlf38Cqug8KrKL7yMC6gfUCh/guaR4qzXGRzhel
lA70y1KK6+NSyuvy8f8dvq8Hlov/b5eSe8X4/x62QYEVyskf9/rx/xts/gLL
xv+3SikM+fi6lPyWiv+vB30jsHQ50TdLKb9fldJ7lJm84D7COljXsn1USvlb
Of5/gB1AYJlyioP0qAOe8d5R1gH52tk2aRY4MbBZYPPAPuWUV8rXI9A60BjY
I9BK9+6BBt1dAs0DLQL7Go566mm4psDe5ZQn4t2rnMqJG30Cuumsk4aiL98l
/OqMN+vQ0an3Cnebcqqz3lLi2tN08NugnOr7f4HOlo+4uprH+sDR1gHvHh/Y
OLBJoH9gU+viBJ/hPsm6oU8fY7gNA8dKNwocJyWuA8upPaj77oGWgVKgm+nj
3s96or/sFihbp/v7jD7VJ7CSce1qHLzX5P0z3DtD+pT1u0C7+L8YW2FsHuP/
uYEJgScD5+h+NjApMDnwfGBK4LzAcz7D/bThJgZeCEwNnE97+YzwDwXOCgwN
3Gx9UX83Wae4Z5VT36L+btEf94OBIYZ/2DiGBRaaF9KbWU79lbZ6IjDeMlxb
TuMZv2vKaTzgvrqceATukeXU9vSjs8upr+NeEBgdGBN4VDo2MM8wowLzpbz3
mP7jAnMCI4zvRtubcs4ODNfvcd8lr3N9l3gfsXy890DgTMt/neWjT10vpU/R
737AprOU+tP3peSmf9HOuLeO/78H/aOU+ijv/hTYKv7/Vkp+25ST/6LATuXE
d+HFOwT44FcV2DbwZyn1m7bl9C5u+vvPQX8JtI//fwf9J9ChnOi/gR2NA56+
fTk9I97tyqkPEoaxRL6Ii/FDfL8G7ov/gwKDA7cHTgmcGritnOYP3Lfad3Df
YN1Q7/cbjnq8w3CnBe4NDDTeewJn6CYu5qKtfBe6tc/IC/V1ms+os7sCpwcG
BO6WEtedpoNfvrtxT8/n5x4o7pRqdFziRp/DPYv5jkRovoMReqvyHvcRPqHc
xb2e85QJecZ9g8ir3K3IPZ/ItE8ZBhmS+xO5wzDfWYhfvu+Q+w+n6p/vXVyo
H3LvS4ZHH8X9jtz9mO8TJR/jTD/fJ/mY+aB83IPF/Vfcs8UdXfneLWi+d2u0
d1h19M6podbXZMNzZ9c4w/cwvnw3F5Q7u/hmybdM5gnulOKuKe6YQlZ/xjJz
BxV3ZnInVb4bjLvCdjcO3Lv6jPSQ5581/GTrCXe+23JWdeWuzZeWkGuznHvt
ErItNMvUUO4tzndzEj7fzfmK6TX3Toh8jy9u6rimpnLfb7X3NSBDX2fatBn3
qHKvar6HON9L3Kymcq9vrXdR5PtcuW8M+Z7vecj76E75zsd+O9YJ6C9YN6DL
QMeRdRtQ9DrcS0F9c09Ff/sI3+4O0p/wee3BWoQ1CWsV1ij7WRfU5XGmST5O
MA7ycYz5opysUWYY/gDjy+uMacZ1iHGTV+6D4D6yfo7FKfYt7uYYbp/jPgzu
5Mj3Y0C5t5N7JrjnI987AeU97jCjH9HPuNuTd1euqdxdwV0W3DHLXbPcZZvv
ml3RduXOj3w/LZR7PFo4NvLds118jzsxiI985HtqiesLy7ZWTeV+EcqU79Pt
Ztrc+8bdcvku3nw37241lft1dzVMvleV++1aOcYIs5TPetVU7lvdy37WzXxT
Z9w1d5BjjHv58l2s+xiG8h9gnihDH92U6UDd+X7cvrbBQfoxd3Zynq61zigz
93xw/wd1wf1z3EvHfXTcy8f9fNz9CH/hHs98J+Q8/eBD3JW3oKZy793D9ovZ
ukcYx2zLwB1+U03/7JrK/cwjDJfvXp1v+40yzXx34BTrbqruzvoTV74zpmNN
5V7hw6wP7gK8zH7AXXv5LuJD9M93z+S7aKDc68KdKNyVQh2taXyHWq/cEXiJ
dX2ZbtqAewGn207cHZjvJ4ReaHjq+Arb9gLr5QDDTbPNLjGufH8hZUC+2cm2
HKX81UU5C/kb+feemGvPCAwMzA4MD4wI3B8YHDgz8GBgSOCswAM+w32v4QYF
Hg4MDQxDlvAZ4ecY39mBxwPjAuMDjwXG6n4ycE7g3MAT+uN+ymcTAo8YN/l7
yLyQ3l2B0wMDAk/77sTAM9JJpbSeuzhwSeDVwLTA9MDCwHmBqYHnA1N0s268
KnC167drAteW0jryysCMUlpPzvC9Z01ncimtJy8PXBF4NDDGcrL2u0y/N8zL
paW0Xr3CeN/0Ge/Ntc5GBuZJRwXmS0eX0vqJtJ8rpbXZM+aF9dXT1gFrm+ct
K2uVF4K+WErrnucs92Lbnrb607rGvch2xf2H9Y6bte/NgVtKaQ1E3MTL2nhW
4NZSWvPdFri9lNbVt+r+ynCzzPdk652160tBXy4l3cP1gRtKSZalr9B3WPNf
px9r7Jm6P7J9cC+wbqh35GvC0aeQgxfYJsjIUOL91zrFj7UpfY66Qy4nHH2T
dSB1Rv7+sT0I85d1Rluxduddwv/tM957rZT62sXWEX3tfOO6IHBhKemVL15C
9zxd/fTR6sTR+2LXjI0o9qPYTGOPefoSeu0Ll9BrX7SE7vsC9dGXqp/GNnqQ
cWX9NX7LGWYfddiXmKe91YNn/Tr0PN+7QD9009eqq17ePBHXipaHfK1qeuSF
/aTopTgPBPtF9PzZnhG6RyHZAqLbR+9P82Ef2b1QsY/EjS3k7rqxWextmGyD
SNrLmlfKke0Xyd8q5oWyLqN/tmfcy7iy/SJxfWZ/vLGUdPAzLfMRlvtq84Jd
KXaq2UZ8tGWaWKjYaEzwvS76j7IMhMs249BsJw7NduVjjfdF+xF96JXARaXE
13YxvpGFNJYu1O+lqLgLAhcGXg1MC0wvJzuvU7VHO9xyXFWo2L6fXUj28dgj
Yw/MNwS+JeRvFND8TQOav89A6Vv9jG+GdUrfyd9toPnbDnRSIdnWjigkO+T2
pjnIPjLJesSuHzto7KGxnR+qu2Mh2TDj3tm8E9dOxocfa7ii8//ntudNpaSz
gVfdIT/qFehtne4fOMB63E83fGtP34P399RNfe/re8w/PfSjnfbRDx6wV2Dv
UtLjoI9Dz4fO7FV5Bro62hU3Or6XbefzzNdetv/exssc0y3QXd7XVTe8sItu
ynl84ATLfZxu+vWxuuHN/QMnlhLPPilwcinx+xP0Y446KNC3lOaxA3XD4/ro
nm6d4R5nvnYtpT5IWdFNMsfvFti9lObtPayvc32Ge7zheA9dFHpGdJZTpdQd
OrJe+qFfaKfOA50EupIO6iC20z1E/cgO6iw66EbvhQ6lozoFdA9t1TdAt1Xv
sK1pjFaeQpZCz4RuEb0gek/aELljrHIWfsOMG5nsLNMnvfGGQ+84y7qn3s/x
Gfrdy8pJn36wY5j6Q2eJjnBPy48esKdu9II9dF/ku/s75g8oJ13mucaNLnlG
Oenx0fdfJUV/d2k56e5J+5Jy0qXinmA40rjY+PC7spz0+MR1RTnp93Ffbt5x
M85OCZxaSjLBybqRa3axvyKTck4E51Ig33F+RFvrhv3Ym9sXN9VN39xEN/2Y
/cbsM0Zm5MwFzmAYLuWcBuRHzn3gvAfkWc5r4LwHZNb2ugeYJvlAnt1OvyG+
S/ihxkEaA83vdo6rjc3TSeZ3C8sK5awLdIjIr3eXkn4QORsZC/3XA7rRLd7p
e+ga79CNnux+30OHd59u9Hr36kbPd4/u00rpbI5trPetdJ9iXnC/WE78iDF6
t+WnHX40j/eY9mm2Cd9k4CnwBvjHhtY745492OzPRoY+PHBEKcmwnW1jZNud
dY+wTXAfVkp7INkfiUx3ZOCoUpK18etXSjJ3P+NFbj5UP+TCY8zLTMMdrf8a
xousfYjPkLPhYQeXkhx5tOEv99kh1veplhn36sbVzzyydxPex55P9nfC39kX
yv5L5okVrIv9fIa7j3XDnnX4+NKBZUqJl0OXLSWevqxxHei7q1iPnIuxruVf
Wzf5Xc38UQ72yW9geTawbfqax9Wsm/V8r8k5mDkW3Ru6BnQk6HteU1/G9x5s
3vKeKig2S9gAY9+U92BB834vaDu/IXU2PPbd2Adhz4NtLrY9u/rNaRffQ7fY
RXfer4Wb/RTddLNHoLvuknHgbjBu4mW/AzZR5I89GthP5T1kUPyw6cWONdtf
Q7FBxRYae9Vs632472HHS5mwu1rDd7FbzXbn2Ilhd95Xd7Zfx11jneU9bR3N
E/ZO2Kdhu4Ydeg/rCBt37J2wrVrddIir0We8h80Vtm/YtmHHgH4ZvTL2OthL
YFfxk9+S+W6M3dfThsGOCXsmbJ2wPcJuCVskvuNjL4GNRf72TPgf/D7N9+0f
/Q6NO3/z5hs439X5vs43fL5V8/2b8I3Ghz1H/l7O93O+vfMNHhsEvpETjjB8
V8cfv5WtV+zwWhsH3/b5bt7LvGb7J2wzsKnCXgIbqxbWQbbz6qIfdkzdraNs
p0X5s50W7mynhbtk3ITJ9lLZfqq3+WhlvrAVwf4BWxJsSqqtV+q6QX/yuoz+
xFWwHbBZwxYfGz3s4tgXgU0cNm+fFFI/oE99W0i2/ewTwCZ9Lfsv9vPrVFX2
HKxtH8/7dgiPrT77FNibwN6NNe3L/yukvQLEy74x9hOwrwD7c/YcsPcg7wvN
+0ShvIcdO7Zv2INhD0++SAP7/3UdT3mPxJHm++gl3NiOZ5tx6NVVFRvxbDMO
zTbs0EsMP9Pw2KBjV4sNKrbb2LfOMp3rfI+yHVP1/22L8cP+n/Kx1wI74xv0
wz4YO1bsV08wbtzH+Yz38v5b6o59AeyxwM0+AvaM4GY/FXtV2PfCngL2nuBm
HwR7UHDnfVy42UPBvgzcef8t9c7+BXhPW9vvSOuM97ClxNazjf0F3rGS44b+
xD6upe1TpI095l6mvY9u0tzfuJYzvn2qKvt26IvsDSFe+in7w5YyTfa8wb/g
8R8WEk9k7H5USDwR98eF1H9xs/+C+qaO2EcHXyM8e8Dg48wP7CsjPtzsU+IZ
/J69aqSZ965BCc/+lBUtB3ubeJe54rlCmj+YT9jPsrJ183wh+eOH3SX2l9h7
Yn/JWMSNDSa2mNiHYg+Mnc5r9r83dNMf39RNP31Ldz7PETe2xfBH+Nx048Be
Cltk7J5+971l5Q3YOmHzhM0UaSwlzyPeZaorNk1Ly4eyrRXhsVHCVgk7JvaA
EFc+D/Id8zTN9LHlwoYZG3xs79n3gf0UdlSMww9057MscWNLznwA78dW+SXD
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
sYdwrv2IvOQ9lNC8F/Mp0x5tuLzXcL7hp5n+K+Vkj0afxWbt4MZ07jd3O5/U
mPruMvF/g6iTYxznGwaO1b1l4JTAyYFNA/0DJwQ2DhwfOC6wkZQwW/juSYGt
7AuEbx8YHBjEmJPSP7ZvSPzvTMaxlPd2bEi8Df64iWmS3ubGfWJgMyl5erUh
zfU3RJmObUw2e62jXCc0pvK3if8nNqbxvHT879+YxvNS8f/kxjSel43/xzUm
m73G+H9kY7JvKcf/4xuTHV9Tm3RPM/eXFtukO625g+6HphgXjekeOu5d39s7
iavjnY0a071I3Dlf35jOx14Y/w9oTHdPcI8xdpHYR2K/Sd6xO8QukryM1829
ERto98L9HNiOYTP2nXdUYCfDHRTYbWG/xV0cG2pDs7rzGPMcd6Csq+0N91Gs
rz0N919g/5XvU4JiP8Y9LNiUYT/GnSHYg5E2d12QPunluzE20o1N2/Hmr79u
wpyoGz/sr7ItJ/QG7YKwu8p2UtBsPwW90rhuNjx3fGDnhm0Ydk7YeN1hGrf4
HmnO0o092626sWe7TTe2ZLfrPtU4cGMrdpfxYlN2t27ufKFuSJv7R7CLo17e
8w4PbKW4m4Y6o07f984P/D70nP187wcUP+4uwTavg+13vHXDu9hpYUuFjRS2
XAcbF/Zq+xsX/tk+q49+2Ez1NfxHnuNPfO96vj92XZ94Xn++B2A1w33uWf/Y
nuWz/nFz/w72d/l+LWi+/wpKXXzmfQDYm3E3EO1DGMYSY+qoxnSu/xqWCZ5N
XvK9BFBsyOCRzUuVe3Kg+R4eKPf8HCGfh99j5/mGPBf7O+zw2AODzdhM3bQH
NpEDbbOT7CNb2fanmNfTdG9jPzitVLGDPMkyn6K7nfFhc5jtNbHfxEYQ28Fs
MwjFZhA7wlH60UcGm6dtjSPbbw4wbWQN9pywRwYb09GGp82xY8Z+GTvpMfph
m4etNjyF74pTjAMexjww3j5xqeE7ma/h9htsoLP9OBT7cWyyx5rGfj7LNuPQ
bCcOzfbd55uPPuaReLHxu8726Gg9YYtK38c+9Uzzxx6Wxy0Pe1zYt8I8xj4V
9qvkvVJPW6YnDUP+HjUM+X1M9zjjw42dJfwm211eb56oe2xF77Y979VN29yn
e4Jpkg9sMeFJV5Qqe5zm2c7so2GPzSH6Z9tMaLbfvMw22NE6yLa9Z1kXtAf7
mdjH1MG6GWxbzdFvmP4PGwbb27zXDZr3w91vGfK+rLmm85BhhhoHbs4l+Dzw
WTntl4d+Wk5nC0A/Kaf75Hp57wl3I3IfHffSLeW9KL2WuLeJe5yW9t4T/LhL
kjvvCMMdm9zrxz1/3GlIHCt5Rw131eT7baD5fhsod9o0mX5P78PhXpzlvTOK
NPM9VNB8zxX0EO+ROsL8LeN9LORvNe8h6du8ckfgvs0rdxDmOwkP8E6XZb3j
hfDc10n4Vc33vvqtbpoHe4cJd5lwb9zQpkQHtE7l4I6ZfJ/MJN/j3p5lrL98
X2C+P/Ag71LhPs3VzfspTSmNQ1onObFZyEa1gffKaR3IGg55tI1yNPJ3fdAW
DUleRM5G7n6/nNZjhHmnnNaKrPPeLac4cL9VTutA1nBvlhNl/QcPhrL+gxdD
Se/tcoqDMMjapNm8Icm50LqGJLc2Ke+zBmjZkPLHXWvr2Ke493Nd25A7w/jf
rXW6C2dN27kx3xXTPN2Ls7b9gjtz1rBNPvfuHMJw/xv3wHGvHeuBcqRZakhr
ESj5YB3QqiGtY150PcN73BvHPXOE50474uCOO2R2ykQbrGxb0Ye4H3lpx8oM
73Gi/3KfJ2OAMcE44f6hKfYt7hPKdwdN1S/fA834uNI4cOe7ot/yXr8Pjfcy
n+U7oqH5rmYod0RzX9tHhuHuRe4w5y5z7mrkrmrc3OfIndW4ud+Qe9Jxc2ci
d7W39I6czt6Z83LzdJ8292pz9+J/++dapLsXofhx9yJ3uxM+331LPrgfiXuS
8OPuSO5D5x7zfFc9aXN3JHlc1vt5SJM74K9uSvTB1uk+SvwJz/2SxME5U/k+
J8Ye5adN4G3cwd1kPzrSeqEuuVORuxW5j/EIn11dV7kbj7rM93fStty/eIth
uANvpnEdbxzcEce92G3kZ9yPd53vcU/e9bq50/EG3ccZDne+ny/f1wflbjrO
Y59l2n1t+0sNzxjId/B+Yl3nO2I/NwxjLN+p+6V+pPeZ4Y9sSnXTtXXKy+f6
Tbc81B/3TF5RV7kv9HLzcZh1k+81vdL3uH+OPK/QOpXjdeNaTjkD+YJ1L/ys
2JDOwPkt8Gs5nelyg3MUZ+FwJg5n/7B/ijNiONOFPVCc58JZLAN9hpuzYr4N
fFNO+40uUgdwgOt51tPsU0JngT6D/UKXuL5nHxd6BHQY+xou7xW7QL98/gvn
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
bPsWOjawR2N8NhOMUeYNxklzx+7/AfaaPU8=
         "]], PolygonBox[CompressedData["
1:eJwllVlsVVUUhnd6O93ecgaOjFGRl9YHlRiKY61DIhQtVRBUJAq2xRmQQkGE
BjQQCQW1UIoKWgvEgZhCYoIgPCg0cXgQBQyJRWMUjMKDYhSoL/j9+R++ZP1n
7b3OXuusvc7YpgXT5heFEFZDMbyQhlDHg9uhMwphWWr7DtiI7kI35UJohn3o
g+jpbJwBF9Gnh4awuyKEPrgG31K4rcgxX8f/BHpYZQjTYFQWwlb0CmK1wyH8
i9A3s/YWWB95jdZOhYX4LkNPwW6A59BZZvteeFax0Y2VXjMPPTSz7x54Bt0G
txK7Fl4l/uLU79KzDeglqX0682voNPPeyfA0vpGZz3I/PI8ekdm+DxagY/QI
7OHwJPrF1LW7EzYRb3lq+y7oQhdYn2dtOTyOrxJdUelnTehWuKnINVnH+iTz
WerhKXxR5neppnPRwzOfRTWYj26PQ7hUQm0hx7fpIEZbkWMq9ugkhI/KWAul
2OdYfzn2TLib9XN41lIeQjW0oieg/yjznofQf7P+eux/Sqkjegf+kjz5QS96
PfrLcj/bjN6A/hm9HZZit0FHudesxT8e3U2841CjWInPomdT8e9EX5F3jG70
/sTvWgl96O/Qb2LPggPYj5BjTyGEk1BBbT5N7FMMxVrO+XdRm99hBfZh6CWX
n6CGeJvQVdjNMAo9BT2vxHv+JfaJ2LnvhX7sJYlzU81UO+WgXFL0XPbXJ66l
aqhaTkrsa4SFqi8x6oldgB+JPza2/Q336xj6PN/vRuw2uBD5nXr3Mqhi/67Y
di2MRh+KfXblpNy6YvvUExH+C3A1tamGicTfGLsWylm5n4p8t0fCntQ9ql79
mvWPYv+CfzDnM/0qGzqLPRM0G/6KXUv1lHpLPaZeU89M5N0tsXtzDZxnfWNs
WzU4gy7Ezl0xv1A89kS8ewjUovOxa/ExVGCv5VkV56mGDzjLmNi+c3AV9vjY
9jji12DPYv1XxOqAh7Fnww8F32Hd5W8T99ZB2Me7V+P/jLvzOfQS/yV0H/Zu
eBv9Dpwt8jP5+tEnOUsPbEOvhFXywVv4VqW2X4at6OLMZ1kHD2o2wiJ8i6Eb
f3tqW3f4jch7tFdn2oZdyv53C+75mazdGbkWZ/CvST1jNWsPwGHtTX32PdCD
bohdG/W4ev0IOd/ALJ8AFalnlmaXctiMvSXyXp1RZ/0w8r9B30DfYn/k3PXP
0L9jL7ou55n/CfZ7EHJ+9n7kmqq2l2C7/OwZyLmGx9FHI59dPXcscg+oF45w
vnHYV0In9gMwBPsi328w7xyUS2Vq3zD4D18hdW6tMIB/Brq54BqqlpoZmh0D
MAdfWebeV8+od/KZfeqZx1LPZM1mzfAW7FdS56Iclev3ke+SclJu+sb61g0w
GTtHvJaCzzAdfW3qf+lZ+FPzI/Va3YE6/ctS+3SHdZcnpb7LiqFY+ub69urJ
Hbz7utS1Uo3GYJ9K3NuqUT/7BxPX5gT6N83a1LXRP13/9tOJfZqxR7FnJ55d
muHt+P8HhzAQLQ==
         "]]}]}, 
     {RGBColor[0.3956227076725968, 0.4427428046133727, 0.5865029450103585], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
cZ7VKPfH8i9/4zk/SjXmDbRXpcKRPEs/m7xXgbI8lq84KJb/9pjP/7NUd0Qe
5B7zfY6tOGMlzvhppLNW5aveDTDS9dMAo1yn/zsZMCkr3HnnXJe+8hT31djv
rrS/zu9TE9W7mOfHGS+es8ptXItn4xnfRfkE1voT4I+AtVnFax9S9wDnJTjj
deSHrPAjvuemWo/0++cgPbYm0hqM+04HPO71PnB5us9HHq/IV6x4t+0a5S93
x0ctP6uN9wTzIOk7ONa9j4/lv7cRx6zsWLNt6fPWj1/Znh2xfau3jHJc/1Ty
siuWn8016He/YN7h/I3WK9QF+yLttTeSb95iWX3Ja5PnPqENwpk+RnkPaDKR
MW8kWSL+r8fyAXfajnL/hfaj5xk/nmNRrh+w2/zLO9huPuKc+bbRnLMqiMZv
YK+/S7XeM7F8l+0eR9yJW/984U79xTvgudnG+kLvyTkDUumNb2PFN58WKOaL
0Z5F/S60/xRzFwDmAy5zOS/bLtt/i3FQfzIr/upmHUG9Qhn7BWUHMNjn4zm/
9DzqmNogHtoeiWffty6953vzGGcwFiJOGyLhtD5SHMI4hzHQbNtA6oY55gnW
GWsxpmXsu8W6knprru+B4z4P0glDY51pmsctDOKzhyPFQB2MR8dEY7olwpP3
Rz1U4bWnWyfOdH1+LNoui0WPxdZBgx0HMB4ojhVDFjkGp83b6PvY4Hq3VHpm
Uyy7xJjwufz2WJ3z7nAsyhiSur/WtrSn42nqCep36vIjsWSAPmvOn2JJv/Uc
y+R4x3wLrOMGmjdZp/5inqcuX/LEOKePfR/6QIxFhvh8zFVc65K5jUHmBdKC
csV4ifOpK2sd4+biT+5X5X3YtzMoXj0Wyb+62bqyt+NO1mnzanz++kg8/Eqk
/XY5z7DE/DWkQPp3rfmYOvcp17nuOtcvAczJypcdAJjr+hdBa1wUq+2VrHJe
l1pW5loueTeM70vN2+SFSuNIXOkvXOZ5F3sf+tx5qfiHfLTRvJzjkYPmkYWx
2hfEkvVZ9l0+CNqnfyz/hT4ufVv6KZf6HPQ/LvGeG7we96NvMsDnpu/CfsZ/
nU23Qc43DXH9N6Yr8zj07ejXcr9+sfIrFS5v/17e5baC9jzErbb39Mk4Zoj9
kBmWpZagtSei/epUMkhZLLfMsZ5NpRMWOb/xtOVneKo1OiXac6P7uF4H6xHi
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
lXzPHxfkW/L/U4xTN3vc/wMD/lXD
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.581039276490269, 0.5079051770413087, 0.47750406749453833`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.7664558453079413, 0.5730675494692445, 0.3685051899787182], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.908286328135082, 0.6407158203377051, 0.31568761721875427`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
pg==
         "]], PolygonBox[CompressedData["
1:eJwtlllsVlUUhW9r/6FN9A7YIc5IoYBAxAfFog8K1UgiJYUXBk2YWnywRMQx
kQhq1AixToEHpUBbUBAhCihCQVEUKTggRIQWZJQOUIVEEwjot7L+h5WsdfY+
+wx7331u32mza+rzgyBoAAVgRRIEFYVBMBB8HQXBlWuCYCmGw2BvHAT7wGn4
KVAWBkEnenoqCKaBKvR3zD/B3JMgD1vAWAu+daCXWC9j35YNglbwKvEfBucz
QXA7eiz8CFjL3C7Qim8Xc6Yzdxn4hnhv5eZvB434/oDuxrcHpLFvQD8Jnwv+
wH4OnIZ/CNrhq7HfBR8B9kSOqdiN4D/W2hGb68yX0b+gm+DNoISzfIGuhc8E
PdiriTGcvVzgDJXw7xOf/RTIx/dbsLLAd6C72Bz7LhTjLPN/zK2/HCTYfyfG
SubOAjvhP8W2rQDXhs6BcnEIROg2fObguw58xto7sa8q8Jp52Idi383eMuxx
KvbPY+99Buhm/Z9jx9YZi0PnVLlVjKvg7zK/m7lrwTz4aJCFtxFzGvGmoKuy
HqtHtzJnSToIJoEW+FawGL4fDFeu0H2YewC9Dz4jcu7rwUzlnrEF2LaDQfi/
zdgabJ3gnch3rLveBCZhH4JemPEZddY5YEHWe3oe+y7ifUWsl8BgdD72cRnv
4X7065FrSXNeQT+C//KUa/pB+NPgaMpjj8IvRK413fc2/EcyNgFbKTjOXRZh
f5bYI8EY7C9iz7J2FYjRfdAduXpW7m/G/xl8N4Jb4MVgUcZ7rMb/CP5X0j6D
zqJvUt9mLdgBH8VYP9aeCkbDN0au7Uuc5wPmN4fOxQ1gUeg1tJa+uYnY29nD
CfZyEtyG/WCuvtrBANVjbK49Dwxd06rtfkXUB7xv5FzozDr7UHzKU+4R18H7
gxL0eHAsdo9Qr5DPMHgec6ozzuFY9jMscm3pDnQXH0XOvXrSaniKGBVF7g+7
8D+MPl7gMwwm3r+h7153dm/iGlOtqSbvQG9BT0y7JlWbyplyVwYq0XHob0tj
v2FbHDp3qskbmd+BvgyvZI17dH+ha1VjsnWBJOMz3Yd9WeRcqGepd3WG/hbk
I1+dQWdRDytgvRrG3mTtPeBi7JwoN7eih8B7Y9+lam586D1qr7rjcnQt683O
uieNg2cSx9oL5mN/grH5uf2oF7+f64d3qn+oH4I6+CDwse4/10/VY3ZHzqHW
rwEjiDdZPSHrmM/huyFyLM3R3DWRY6mHvAf/lLFPCt3jOyL3LH1LGjuK3oI+
A/8T9KK/TMzVw9XLX4v8dlwEDUnujcDWCf7Gtg69qtA9VL10a2KbYv6F/hVd
Tv30ByWcZX3it0FzDmE/gB5Q5Borw74/sa/GSvX+Ja59xShGT+AOGnL1rdyo
h6mXqWfNS5xD3X8bqFO+In+7zeCgehVjhWn7KFdL0A+kPZYk/mb17aoHXY1e
gb4+7Rpugr+hfpLy2EJ4Reha1jesb/nu0LlSTZ2L/YbpLdM3Uwr/J3Qtqwc9
RPwe9tRS6Df8LPyFyL1fNVUH3xv5bVXN6C2dHLr3NIIp8KbEb5dqSLW0OfFZ
FVOxl0bOnear9rbl8r8enMd2Jnatq6ept22K/VbpH6CT92pu6LV05qfgj4Wu
beXgEr7HIsdS/elfYFbou1cPTqv2Qr8FuuOb0KMiv42q4cfR/wOyf1CS
         "]]}]}, 
     {RGBColor[0.9379055883295984, 0.714763970823996, 0.407507323821755], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1Vm1snmMUvkff533fWXLfz20majYNQdouoRs/9oGtEkJWjK5Ny5QfaLv1
I8hSiW6m9bGJGKadrAuGZLb0nZHso/UDES1JN5sf61adSRhC52PSLSJcl+v4
cXLOc3+c+3xc55yn5IHWZS3nOOe+Ap0Lui/jXB9oC+iixLlj4GOgR7zk58Br
Eu0Vg+qjc3uzzl0enPsH34sgLwT9hHMp+I/gH+LMzrxz4zhzNufcAGgQNIbv
7VifAD+c6HwAbcQ7B0AjoK32Pt/+K9VaI3S+D53tuPsF7k6HPA33n/LiI3b/
RqwvhT6HMzdhrwFrleDfQk815AWQz3rZfAZ8UyI7DtE/7NeAloP+xP6erPx8
Mcr2Z6HzUuytAN0LugV3poLOS+RDVVZvvwsbV4JW5RWDFlAraIet8ftUKp/v
hg0lGeWAeufjjdPQcTv4Y15xeNTL9pdBL4HKYE833ixg/WPwrkTff6c6sxzr
pXjjZ9j8S065eRzUkdX7tIM23hq1NjXIXq4xN+WgJlAj6H6cGcaZOThTCV0Z
UAJ6CN9t4E+Az80rL2155WCj2bkpyIYd4GV52TKRk0/Fhifu94MKOeFvhcVi
sVeMa8H/gF+1kBdBrsgpPszPPV5YqWc+o/ychNwZpPOVIFxTH3HwvNe7G8Cv
B12Cte8tZtWW9/Vedr0OPpSVr/S5wXBJfQuxNxP8O9wtzsg24iYf5X8z9jcb
LqcbZhmjeaBJ6LrW5Bqvu/Sv2kvH76nqiri7DLwAmoOz/UE53Gu4LFhuGb/e
oLj2gLd7xXFK1Bpz+X/syYmLWovtaby1PcqeD3C3ySsWxFHE+s2wv5f6omp4
a5CNrJP//Mb+q4lq6IUo3/pwZtBrfcCr7nn3TE6x5x32krqoPBLvjWYjbe3F
egX4e0F4qrDYzYrCeb+XXd2G+z2GBepqMh2M19VRNX0Q57d5vfsm+EqsL4Et
dUF3O6w26ixujN/anM4Q78zzeJFzx0E7g+L3CXh1FD7KIG/Iqkb43W5YJv5u
gK5ZuH8S8bwmKiaMzaooXFXi7jLWD+Q7wdcG3V0T1FfYX+gr64y457l1UTF9
Gmc6racO2B7f5tnGIPlh8NVR59qCaph2lgflfNLyUmv5vNh6bp9hPWMxYCyI
l9kZ9b87gux5MCj2c82+jqjz9UG1xZh9U6T7jOmanOqbOtjzGIMhi11D1HtL
gnLeZj2TffWQ9ejPzW5ilnPno0T9r9L6/A+pct9s/avKZgtnzAVethwktr1y
OgJ5yEvPOPivQb1xMAo3fPck+G1R84Jzg/HuNF+6ovxqD8oz9Z8oUq3Sjh7s
bwmKM+ujx+p0PeTPrOe+Bflrw/puyLvMf9bBhM3K/ZCPBvm0C/KpoF49QAwG
9fS3Ie+2XrwZ8uwo/LwGm38LmkOcyVd41e8R+F5ms2cM8nDQXHoHZ66Liuuw
1xzlTIvgd3n1ds6u40F9jTO51Cunx1LFlLE9H2tVUTmYwnnthYcDqXxqthm5
OCo//HegTbTtSshPetVANkrfTMNnt9UEfZtvc5GzvdXqgXi/0CsPM2y+11jf
4ZxjvZcE1TBreRvOl1scGI/D1s9Yq88E5Zd5brFZTnzMMP1f4t2rvGpnNFUf
4QwiVugra4B20wf6ss7usY6Ily7DL/H3qfXBUesnS+1/gv810+wf4w37D9vH
fyH7r2JvJu6oj++VRukjrvutH7AXjJr+Avb/BYWtUuk=
         "]], PolygonBox[CompressedData["
1:eJwtlVlslVUUhY+mt/f+YnLO/YsxoILVRKWtiYryICBQTTQaBdFSbR3QB7VM
bZ0iJiKTE5g4MgoERBkUKaCJCrxoHKgmIvBEqW0NKpg4gMGA0US/5boPK1lr
7332Pf/Zw629v33yrNNDCI+DKvBTOYTzCiEMA+NiCD+izy3Ydg36tDyEVfDV
4GF0nkK4uRjCYlADH5zMbxGIrSGmj8TnEN9Drh/K5so5RvmSY8tgAvGD0E/C
x4Kb0E+Ap0shzAHt+KZzZi9nXwX/kOsBbFfg6wAPwlvxr8E3FVwHn4jtRNEx
k+DXgmp4N7b7yN0qW8m2meg3wCn4X+B9fGvJMaQ6hGawDr4I/2/4fgVL8Xdh
ewbfDWA4vqeS77JVd4Z3grkl/8Zs/C9V8p8Eq/D9HP3tBzi/D/48tt0lf/MC
YndiW4JvP7gMfQH+D4v+phZ0N/5Pq32HevSd6HsKrlEL/FHQW/Cb3AVfGX3X
QaCG+F3opfA7wHr4AnBmtd84y11j1foQeAS+DNulWQgN4D3ucju2V/B9A/6m
HqPRTZX6HEO/EH1Wb7gIvl314mw72EiuL1TTzDm74FOIeY34KeA451cScyW+
kWAH/hW5uXJsQ2+q+K8CX6G3cn4hv/UJqMN3pOxeHg7G42sE98JrQQP8zehv
HwpejO5h9e8e0MT53eBdcm8Bx1VvdBt8GuhB70K/kznmGHonenNm2+/oo+RM
Rc/IeHx7uU9/lWcix3cqutf/5fcH4Bdy5qOiZ0Cz8Kx+o+SeUe9sz/12HeA7
fDty807Qn9yT6s0uMBfeH517jGaK2Ibk3tc3albVA+oF1XxFdM1UO9X0NnSp
4j8DzEO/hZ6RuWaq3dvomZltXybXVPebBbrRY/W+Bc+8Zn9Dbp/O7EmeYf2e
aj6N2BPouwvuYfVyT2VfDAWXoA+WzYeAi9Dfogeq/KaD0dty10b3O0T+3rJr
fT6oUy+WzdUPI9D70N9XOcdZ0TOn2dPMPsf5WjC76JnT7P1BfHPB39RM/AfJ
vaf6aHf0Rfee3lxvP1B5f83oKPxfJ9dKPave1QxplrRTlsNHgz+L7oHW3DtB
u0Ezejn6M/z1mXvwc/h6bHWZbfJ9HL2rtDO0O27FNrLknMrdCAroRjCDsy3J
XN/8/65N7p1O0AZ/KJkrx2T4/OheuB7kuWdUs6o3aYqeMb2tajgB3ha9G9RD
6qURFb/e/Gz44cp57Yyr0a8n785fwBL4xdG1Voxil0f/tmZ8GPmOlr3rNdOa
7SPRu1Izp9nrSP7v0AzNz90T6g3NaC98dfIuVj20axZH7wLtzMfgJ6NnRz1w
o3ZB8t305lvgfcm7QT2v2VyT/N+hHf4yuj55l+jNp6L/A+7K/90=
         "]]}]}, 
     {RGBColor[0.9675248485241147, 0.7888121213102868, 0.49932703042475557`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVUlsjlEUfdX2+//G8F5fE+ykERaIITEs0F/taDeGoiUhVoa2pCWRlGhK
S0tioaUDQWJYibYk9f9bUsNGsTCsLFA7NZUg4RznJhY3933v3XffHc49X+nO
fevrJzjn7kDyIZsS5zohZyE1hc51Q85DHgXnFhU5dyM69xDrhVhfx7razs9B
tkF6IT2QGu9cH3Q19PeUc1lIDrItSs+Gj0HIeBp3sPcA6wXweQ3rftypwPul
WP8udm4EfvZibxg282FzFfs3sf6Iu+ej3nwJeVGoN1/Zdz9svsGmBzbTEu2/
huz3sm2D7oJ+DnkGuQD7HOzPwH5qIh+8s9VyYi1WeOX8FnFlvM7eYz2Ae42Q
A2nFxe9BSAt83oY+Cp+LocdTqseYnfOsDN8Okgd5inc99BRIM+724/wc9Bsv
mx/QH7xsRqGP42wINs3wXwFpwv5E7PVCPmP/VJT/wymdZbHXBDkMqQtaH4TN
3qDYD0TVgOdHIJ1Wm6eQlqi9/bCttBgZx258NzBH6C2QDNZ7omJvsLqs8sLH
KGrV6NWHBq/caNcB+5Nedb8IfcULi5ehZ+CsDetbWO+DfTnsD2GvAHoY7z+A
rMH5iUR2HbCbDt0OvSPqfG5QL4kDvsH3acPvF9Zf4oj4Js4Hgs4ZQ5Vhodfw
NTEKM3XsQ6LasEa3DJ/E6eREGF6bCGd8YxLulUTF2us1E03WG/qgrymJ8E5N
H0VR+pj/f0Zb1p49qEgJi8TkSuLBKzbGyPlhDBewd8krjyGv2a6y3FizNRYn
8XcP+n4iHJ41LqiyOrEey6LOH7NXUTG30jfWHbhfElTv9pS+71tP+M7CKH85
2D+BjGD9DrrWi0P+II96rzlzUThgr6ZZHpOtPsx9xGIsN1wRX/Oi3hnAusyL
v97B56di4XgTOcl6xth7bLb/3Y/CMmeLOTD2GNSbnPHXp7Q4ij3mbJED+U08
5qeFxwVRsTG/Hq/asudzo2r7iPkadlfb7JKjvkLupsWH/CY/8t1Z0FujeGN5
EHcsSYtL2qxX9PslLdwypqxxDO8cM/5psfkeNG5qsBnMi/JL23WWL/kik1Is
jClrPMX8yVvMfyz9vx7UrEe3cfJN+1d8sbz2eOGWXM7chswveZ9vXLT/CX3w
DvmLczEzCIPsM2tKXHfZv4bz1mnfTRbjXeOtnH2TE/lWK/ysD6rZriAOI0et
Mn7i/hLjFPayJqhOY8bllVH1+OX1PyMHfC1W3fOMu8mhjKM+yFej+SaWawxn
vE8/PzkvXvETm2eMc9uC5qDa7nBOOC9Zr1nvsLn64zX3Iej9jPVsaVQs/FfU
Wr/J65koe97LGK+zTpvt//cZMfQF1f40bDdaDhuC3qswrmk07JCvt0dhvjyI
6+m3OoiPC2weNkZ9zwlmazVvN87m2V9NWSiI
         "]], PolygonBox[CompressedData["
1:eJwtlDlM1kEQxRfl4zDIf79/vDo1aiNGMfFokA/sFBoRkCtqrJRbIVqA8eAS
FBsP+ACvRC0FtBBoNSJWoIVHZwGUKiAeicfvZSheMrNvdmZ39u1sPFFXULvM
OXcUJIIVoXNvI869A62Bc6PgZpJzxeAB9nX40RTnxsCAd26QtXa4FyADbgT/
BvYk2IE/HXWujFylIAuuA3zAXgN/BbsOxPHfg3psR878ZOcCkMP+YtWHmwJ/
yHUIfhFuF/ULsB8Ssz2VWmAcf4D4PHKng9VwbfhBkt1Jd+vDP5BkZ16P/1M1
yZcNfmF7cuRhd4Io9mNiMsm9E0zg14Pz1M4B5+DuB9abdaALOwN+nL1doAje
gd6I3VF3vQB/hr1D4CJ2FvhB7BioIHYTfhP2KNiM/Zc732ZvD6hmfw8xX9j7
FTyBb2FtJbUPglVwZazlwiWC6tDWxOnOcWKHvd1lAb4Xbl9gb6Ma89Ta722v
7nAc/qS3XuvMp7Dbvb29enAZvor9kxE7Qyp+Z2C9+MRaA/ZW4l+Raznxx+Dv
srYWvgjcwy4BfcRWgFzss8Q0E9sEatjbiN+I3QAq8ePgG/Yz0IJdCmIptkd7
q0J7G62VwD0KTRt6w9fecijXblCI/YaaLzlLB9hG7HBgtnq2Af9f1HqvN6zV
+4VW+ym4xP7ngd1Fmpf2a72dfUR8aDGK1R2qsbd4e+tmkOZNY9KaelRIfOhN
O/oD+gu/yRnDTgCfsScC+2vS7B7iu0LT0jDo8aZhaVkayoPL9dZ79US9Oezt
7tKctNemO6SYHrrhZ9ifnmx/IIYfB9/hFnVnYhfoR3/E3kxvN7+kz1vgSGA9
U+/0B4cC+yOqLU3WeeuJeqOarfizgf31Kc0MaSO02SCNSCvSqM6mMwwRXxPY
bFJN/Y0ZUB6xGZMNdxp8jNgZy7Bno6YtxcQCmwmaDZoJ/fjX8OfJPQf6vP05
/T3NmHK4hNC0rJzKPR3YbFOP1Ks73nqjmajZqBmlWaU/URnYm+ht9Gd7seei
1ivNtCL4tNBmn2aiZqN6oF5o5mbCXQ3tbNK8tN+91A+dud/bDNAs0Awc9KYR
aUWa3huaxqQ1aSgf/z8SWs2Y
         "]]}]}, 
     {RGBColor[0.9971441087186311, 0.8628602717965778, 0.5911467370277563], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVUlPlEEQbQFnJgJ28wHxqlHjEqM3Btk5SkAQiEuiMfGiQRYPAkqChMgy
igbGm2LUn+CCaKKccDRRGS7q3fU3IEbxvdQjw6FS/VXXXq/623Gur703zzn3
CJQPuh6cm0s4dxf8bORcJu7cfpz7vHNfNkMBstugeeiMQ94L+WfI10qcq4e8
GPq/ICsEX4o5lwV14/sTdP5B5wx01nDXANsp3LWAjoLy4O9N3OKV4LtV8nbQ
DGgalIKfcvBJb77oswfnTbBdjJt91lvc79RFrGac73uzPyZ/aVAHqBM0ApsF
0GvQD+X911t9V0BXE6Z3R3bb4TMF/gQ6f6B7GPeVCcslilnuL73pvwCfA7Xh
vAt2Q9CrAdXKb7W+ryn+K9BTb7XvhP6JYDoXcP7grV8HcR4A1UF+Cvd1OBfA
7pu3fKvktwiyJtCRuNWaVh+ZY5v6ezyY/nn4WI7Z7Gj3NmY+80E3cH4XM9mM
5sn+PvDWl22R9bUUVCbfkb4PED/g76G7BeeA87i3GPTDmMRUmfQvCWPEWkox
M5o3514UWU6NxE/cZklb3o158884M5oz6ybWatXntGJmFY+4Zbzf6j1nsCpO
THyFzzzKvGExaL7saaF6NesNY8TazZidiWnmlxfP5UvOngbhmjrJyHQYh3Xm
y+ax6ifWWhUzUt5Fis1vYo41NCmX9d0j/wnuEoYT1v9Q8+LceoLJiaNJYYQ+
DkWGW+L3ZLCdvAjZc/BB7UNlZHj46G3fqMP9KxBueEdfqXjON/kEaF57uMSe
wc8w8w6GaWL7mc/NgDPZGmw/i8FbIvPhg+06Y7K+rHCZFi6n9V2BuxX5SSaM
0y93lZy7y9qYf2Ow+VNnRe/IhPKmnHlyR+sUk7FPR6ZbA9vOyOotCfZ+Tar+
rmB5XI5sBsQi7anH+wBeH0zOd5H949zXd46cmBrV29HLuQXLvTZYr5gXe7Ss
HnB+C6pvVdgbkV6D+PCGb97fCzbjW5G9+3z/p4SNzIZ+kC8Kyxnt52ywt5L/
BGJ6SjmXaQf5NnD3hvTmlWsveTcK237IRmA7FkyHta7PrEK4Y27MqVT++MYQ
i/O6q5ZvyrgPpdqXKsnog3PivDqCvdmUDcjvgL47IqtvH3T2BuvjnmCYoU5/
IoehpGQ80x9xzL7uJh409y7Vl5TeoHSZV7fu2INm9Yzz/g/tU+pW
         "]], PolygonBox[CompressedData["
1:eJwlk0lrlEEYhNsh+WbApTuNyznuBoM345ZJclQStxk3EAO5uCWjBxUUJKJJ
iEYQPBrFv+AS40E8SRDUmIv6A4z+BzHq+BR1KKjqerv77ferr33o0tFGKYRQ
BS1gcwrhTTmEX+B0DmEdqBch1MCTGEI7+i58EjxD91LfpHZfJYTzeNvQ79AB
fQa9Hhyk9hB4Qf2GbH4YzKCPUb+b2iX2VOEbs70j4BX+LfR1/BtgDL8PlOBz
1A/iBfCtNYSvoEH9b1DC6wVL8Eby3m5wldqL6C5xMAx/Sc1U4R7V61mwp+Ke
1JvepLftBSfQHcl3T4I63m30NbwZcAd+LrtWZxxHj4PZit+gt6gH9VIFI3iL
3D/P3cs57we8CQ7AV4IeamvJ32In9XX4qeS9y8CFbIhrJifxOtH3Cr/pI2f9
AX3sb9F88ebRDwrf+Rn+N/ru/eAf/Er2XZqRZrXA2gK1D8EOvO/RZ71H70I/
j87CHNiO/hTtqQf1sokzbpadKWVrHD/hDYC1+K+jz1bGnsIfg/7CGVPWlDll
b40yp15Zayt8xhh6BHxp9Zq8ZpuzoLVhvBXZe1eDiWiIKzOX4ZGeJsrObC07
c8qeZjQbnSFlSW/oz56RZqU9A+j72lPxN57mrKnsLGjtUfI/oH9B/0gPejQ7
e8qMsvMhenbKbBfez+hvr5lr9luoeYseBavgKTl7yoiyohlqlprZtPYm1+qb
69t3J/9bOmMr/D993Htl
         "]]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNUzlOA0EQHIG8iy3BrOYHHBIQkJNgkI81QiIBGTICEiCBL+ArMzyGKzTG
ET7gEcAzbItqqiwRlNp9THd113r5/Oboes45dwDMA9nYuWHk3Ago43cDqAMp
0JRfAVryrSYGFoAMUAQK6pFVvAREqrN8DbgFpt65fdiJZ01duVzMuM0ZoE8b
uIvYy3zrnU+cG8OvJuzbj5gbqC4WB3t3Ly4V7ZGK19+umP2O/FZgj1hc84F7
jD05ZxTfwLwO7A7sBPYV6Ma8V049z/C2B7uJmqnybzH5dvSmJtvR3l3524Gz
vjD307PvhzhG4vHgeZMV1D577rcWqEdPsxqy1vfJ8w6rgfuV/2liffvqXZI+
Swn1WU84w2Y9qsdQNz4M1Mg0rEqLi0AuI9W9iJtxbOn+9mY3IU+7U0N8Ut2h
JL+pWEW3Kipnepgui+JYUM5uN9GNbeepfNPVdhx5xuu6TUffYE0zsvru2trP
bjLTyd6cSO/LwG8nFc9TaXyF+HHgnh6xH89+3545q9nT3k39f2Y6mf8LVAxy
5A==
         "]], 
        PolygonBox[{{4701, 1985, 1986, 4159}, {4066, 1797, 1858, 4670}, {4067,
          1802, 1740, 4046}, {4044, 1736, 1797, 4664}, {4654, 1737, 1736, 
         4043}, {4135, 1920, 1982, 4136}, {4644, 1678, 1677, 4020}, {4712, 
         2045, 2046, 4183}, {4111, 1925, 1864, 4685}, {4711, 2044, 2045, 
         4182}, {4109, 1858, 1920, 4110}, {4160, 2046, 1985, 4701}, {4137, 
         1986, 1925, 4691}, {4157, 1982, 2044, 4158}, {4019, 1676, 1737, 
         4654}, {4045, 1740, 1678, 4022}, {4093, 1864, 1802, 4068}, {4643, 
         1677, 1676, 4018}}]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{4642, 4019, 4654, 4043, 4653, 4044, 4664, 4066, 4670, 4092, 
         4109, 4110, 4135, 4136, 4157, 4158, 4181, 4711, 4182, 4712, 4183, 
         4713, 4160, 4701, 4159, 4702, 4137, 4691, 4111, 4685, 4094, 4093, 
         4068, 4067, 4046, 4045, 4022, 4021, 4644, 4020, 4643, 4018, 4642}]},
       "0.16"],
      Annotation[#, 0.16, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0DtKg0EUgNGbNgaSCMbWFFqIYGkjiH0qY5GAIFial4Xa+tZAdAF56RZM
pWuwcQ0WuogIxjOk+Djcgfn/y5SPOnvtTERU9VeMaOUjFhYjbpnlHUsccokj
lvnKFU64wQ9u8YtT/apizhUiVrWmA/M2q9rXsU6dNdjUlS7M17xRXz3zgI9p
Bz6lnXiZdkx32OYZWzxnPX2bNTa4y0Oup/+yyIJmdtwx//Bbn9o0v/NNL3rW
srMxu3pQznzPE3UUaQfOvF8zP3/HfyR3LUg=
         "]]},
       "0.14"],
      Annotation[#, 0.14, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0TsvQ2EAx+G3oxhKaxdh62KyuJXVpEldahETKuoysBESiQ5sqg0JictE
sfEBXDYfweC2ugwkJJ4Twy9P/sl7zsk5p2mskJmOhRDyeqwPoTMewgcH+c4s
3zjAX07yh3nWJEJYZQPLTLLCRlaZ4h3b+MAvfavPrq0LoVktGrHb2a+MxjWh
JS1rS0VnStzWiUr2Kau61oF9w0Pe8ih6No95Hl3HM5Z5wQp3ucEdbnKNK5zh
AgtcZI5T7OUoU8wyyYSC0vard3vRvVrtK15qX3sqal3zmlPMmVnmNKxP33WI
PUpH97K7+cwuPrEj/v+f/gBGFD/D
         "]]},
       "0.12"],
      Annotation[#, 0.12, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0jsspFEAhuGjIhqMsTrJKNZtFFqiYFQKu0GFhoIoEAnFFitxSUgoFCQS
ojDNCnGvXCokQsJu5y6hsVssKoXGI4o3T77inOL8f6ytp747JYQwrNOsELIz
QrhkIS/4lecs4APLec8KPrOBT2zkGzuZFglhkKkcYoQzzOMKi3nEW92p0n5l
LdMzQ4gpX012Ob/pu9rVoZ8a0JSmtaRl7SvpzAEPdaFV+5JrvOK1/mvbfuIO
n7nLF+7xluu84QbvuMkT/uIxF7nFWW5yjvOc5BiHOcoR9vIHm9nFBFtZyrii
qrNTWMV/3uKv/qjM3uWOklrQhMbVrz61qFk1SujRd6hmXCW6tot5xSLm6svH
/XYOfzPKM0YyPv+Dd7dbUDw=
         "]]},
       "0.10"],
      Annotation[#, 0.1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0j9IlGEcwPHntAQH7U4yNQgVdHDIwMmDpjDDoQS3QB2k0OmCBoOQaGlo
cFCHpjgJHSrautQhzau8Cl007xwUdLTzDyQIBlqfl4YvH37PCw/P8/I0Djzo
ScVCCGllEiH8qgzhM/8yy1Mu8owrjF8IYZkJFtjEPJu5w3ZuM8kD9vAPB3nC
IZZVhfCUCb7gFb5jC3Pc1Jaum4/ZxfJ4CPVq0F1zkrd1R/d0X0+sj3BcE3qt
N/qkV74tMquCNlTUnPU97is435I5xhxLWKqLWjVXc42X+JM1XGct8zzPbzzH
7yzjDx7Ze56/ucAdvuc2M1yJzsllvmWGLznJMaajO/E5n/EhH7OXKXZwgNfY
qmp1R+fnjeh+/mFRq2ozz/OjpjWlUVVYf8Rh9atPt9SpXfe4yVZd1WXVRftZ
r2WpSvTVHOMXBh56MweaM+9zlnucYZEfuFv5/939A3zjYP8=
         "]]},
       "0.08"],
      Annotation[#, 0.08, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0j1I1VEYwOETfTldrwaRpkKaH00ZZgaNESQ13JpaIlFozMGlcmhraKhE
cMysqLCbDYpCQ/c2pKUlhPhd3mopTSUjIejDnkPDj4d3+MP5v+fsaW49fWFT
CGFI3QUhvEyE8JjzTHOOjzjDXs5ygJ/Zzy/M8hcz/M0xJvJDGGU+J1nBHBu4
whSXeYo/eZ5bC0O4wiS7WMI0azjMOc3riHmdx5mXDKFUZTpjPswTOqk2cwsv
q1031aEHeqhnymhSU1rUkv7ohW//ckMFzvfWXMgdKtc7cwXfcy8rVRf3Yj4Y
98J6LvIQl9jAr/GMXGY1F1jFHGv4gfv4kcWcZlHcf/xXjnE7X8cdOFuWP/ic
nzjIcaY5xFscZDd72MlrvMq2uBeeZSuPsYUHWKudSpk38yhX491pQnXmLDO6
r13mG7yuS7qoJp1TY7wr1Wp/vFft1rZ45xr2P1v43dtZ01PzN+a0oCdxz+yL
e+e43uhe3APvxr3wDkfZw1e8zZHE/3f9D4pBdFc=
         "]]},
       "0.06"],
      Annotation[#, 0.06, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl011oTnEcwPH/tBrF84xdUEOmpLixp0xz422oZxiP2qXaEy43Fy6Q3Iph
m3eKpMaYYUO0N29NXGjThuZCWF5KiD0zbF4+JxffPv1+deqc/zmnIF2VqswK
IfRq78QQGmMhHGc7j7GVR9nG0+ziKT7gBT5jA5+zhW/ZzHfs5C8+4vh4CA85
gX2cyZcs4keWcZibmD0phF2M8wjz2cjZ7OJ89nNQGa005+SGkOJUFmmBNpuT
rFBa27Rde+xrWK9zaleHetWn9/qgEY0q5r56XBNnrmaoQPOi57QvZEKL9NW8
mN+4hEuV1A9zKX9yVXQuXM0RruEoy/iba/mH6/iXKYa8ENYziyUctF/GDJdz
iAv5icX8zLl8wzkciM6G/cznC47jYw57xnv8zvsc4E12s4m3eIZneZjV3M2t
3MkN3MIV3MgEyzmFk5WtEvMX76qYT6NvQHc1y9zA86pTrXZojH2aFSpVUgkV
arqmaaxyNOQby6gtOhe+1is9UY/q7bt5R7d10tzJE+zgDV3XIfM1HmQL69jM
Wl5lDa/wAC9zP5u4j5dYzYux///RP8x2hAE=
         "]]},
       "0.04"],
      Annotation[#, 0.04, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl1DdMFmEcwOFTRKVItaGxsDhZBmCxbSIkaqKxNxDELggqWLA3VMBCsRcE
Cw7GScEyCCRuFqyJcbENLqKJWCafi8Pve/K/fHd57757v9S8olmFPYIgiPBR
khgER+OCYCdPcwfrWc5T3MdL3MsL3MOLPMhGHmATD/MGK9jMOrawlq08zw5e
50te4yve5ic+5G8+4B8+Zkx8ELxgKt8zg185g91czogka2YcazmENzmKHXyj
txpv/sFM9k7wPQ3VPHMGs5StEnMuS1WmKlWr3vEm3tN9PVenPuuL/uivYq2r
n4ZrhMZqnCaqyzUmcbKylK256pVsHZyvRepjXswlWhY+B3MeY5kf3rdWKcG8
molcwySuZTLXsT/XcwALOZBFHMQNHMxipnBFuG4WMI4rGc8c9uVSRjGX0VzI
SC5gb85hT85mBKey2/1m8hcn8BvHhL83R/Mzh/EdY/iE0XzK355lBz+xhc94
i61sYCPrWMkKbuYO5rCYU1nAdKYpRTPNkZzC796FLr1WurmdbWpWirmGJ1Wu
7crXT2ubzmnhOUrTSI1QtKL0y7vbrY/6oBfqVLvadM41HvGu7oT7IdwLOuT4
VV5Rg/abL4f7JjxHu81nuYtnwv0V7i1tN9dwG09yK09wC4+zjMdYympuZhU3
sZIbeSTu///AP9pFjP8=
         "]]},
       "0.02"],
      Annotation[#, 0.02, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3., 3.}, {-3., 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[36]=",ExpressionUUID->"7c301a8b-b6d7-47ca-b744-eb385f2cdac6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["parameterMixtureVectorDistribution", \
"Subsection",ExpressionUUID->"f93f82ec-dfa4-418c-b6ce-a6d804bc2cd7"],

Cell[BoxData[
 RowBox[{"<<", "FunctionRepo`"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"22cd74e8-ea41-416f-93b7-796c9c571e4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameterMixtureVectorDistribution", "::", "usage"}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"ed4f465a-2a3e-4879-a611-628c68f7d3e3"],

Cell[BoxData["\<\"\\!\\(\\*RowBox[{\\\"parameterMixtureVectorDistribution\\\",\
 \\\"[\\\", RowBox[{RowBox[{\\\"Distributed\\\", \\\"[\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"var\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"dist\\\", StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\"TI\\\"]}], \\\"]\\\"}], \\\",\\\",  \
RowBox[{\\\"Distributed\\\", \\\"[\\\", RowBox[{StyleBox[SubscriptBox[\\\"var\
\\\", StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  \
StyleBox[SubscriptBox[\\\"dist\\\", StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]}], \\\"]\\\"}], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) represents a vector distribution where each \\!\
\\(\\*StyleBox[SubscriptBox[\\\"dist\\\", StyleBox[\\\"i\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) can dependend on \\!\\(\\*StyleBox[SubscriptBox[\\\"var\\\", \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"TI\\\"]\\) for all \\!\\(\\*StyleBox[\\\
\"j\\\", \\\"TI\\\"]\\) < \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\)\"\>"], \
"Output",
 CellLabel->"Out[77]=",ExpressionUUID->"51af4c16-ba41-4f21-ac09-08f34733e0ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{"x", "\[Distributed]", 
   RowBox[{"NormalDistribution", "[", "]"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"d70c8ac9-7d38-44f6-b61c-ad21c59a510c"],

Cell[BoxData[
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{"x", "\[Distributed]", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"b30c15ff-1412-4b60-83af-b2cc20ea775c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{"k", "\[Distributed]", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"n", ",", "p"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{"k", "\[Distributed]", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"k", ",", "p"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{
   RowBox[{"k", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"n", ",", "p"}], "]"}]}], ",", " ", 
   RowBox[{"p", " ", "\[Distributed]", " ", 
    RowBox[{"BetaDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{
   RowBox[{"p", " ", "\[Distributed]", " ", 
    RowBox[{"BetaDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", " ", 
   RowBox[{"k", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}]}], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"37e5d386-f5c7-4c7b-97ca-cc148d2a00d3"],

Cell[BoxData[
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{"k", "\[Distributed]", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"n", ",", "p"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"ffd5f379-5dc5-4351-809b-c599330ccf01"],

Cell[BoxData[
 TemplateBox[{
  "parameterMixtureVectorDistribution", "depend", 
   "\"Dependency of distributions is circular or not ordered correctly.\"", 2,
    9, 3, 16877458112534296328, "Local", 
   "FunctionRepo`parameterMixtureVectorDistribution"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"04f15ac5-84e7-4dd0-b218-e445099b9255"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"7f012678-cef5-4834-aa9f-fcd2a745e7be"],

Cell[BoxData[
 TemplateBox[{
  "parameterMixtureVectorDistribution", "depend", 
   "\"Dependency of distributions is circular or not ordered correctly.\"", 2,
    10, 4, 16877458112534296328, "Local", 
   "FunctionRepo`parameterMixtureVectorDistribution"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"c38c81f9-fbdc-4018-aba9-6793144d7962"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"131ae81f-a3cb-44c8-8bad-48d6fa6fe1b4"],

Cell[BoxData[
 RowBox[{"parameterMixtureVectorDistribution", "[", 
  RowBox[{
   RowBox[{"p", "\[Distributed]", 
    RowBox[{"BetaDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
   RowBox[{"k", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"f9bae3ee-8de8-4e7e-9bfe-6333dd5fccbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", 
    RowBox[{
     RowBox[{"p", " ", "\[Distributed]", " ", 
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
     RowBox[{"k", "\[Distributed]", 
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "k"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"aeac9368-b8df-47a4-8a4e-53cf07214dcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Beta]"}]], " ", 
            SuperscriptBox["p", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]"}]]}], 
           RowBox[{"Beta", "[", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]], 
          RowBox[{"0", "<", "p", "<", "1"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}], " ", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], 
            RowBox[{
             RowBox[{"-", "k"}], "+", "n"}]], " ", 
           SuperscriptBox["p", "k"], " ", 
           RowBox[{"Binomial", "[", 
            RowBox[{"n", ",", "k"}], "]"}]}], 
          RowBox[{"0", "\[LessEqual]", "k", "\[LessEqual]", "n"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}]}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"909c22b3-26f5-44df-9dcf-c42d8c7e73d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLikelihood", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", 
    RowBox[{
     RowBox[{"p", " ", "\[Distributed]", " ", 
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
     RowBox[{"k", "\[Distributed]", 
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "k"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "3"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"574d73e5-f0f3-40c6-b93d-b2464feffb41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Log", "[", "2", "]"}]}], "+", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", "p"}], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Log", "[", "2", "]"}]}], "+", 
              RowBox[{"Log", "[", "p", "]"}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"Beta", "[", 
              RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}], 
          RowBox[{"0", "<", "p", "<", "1"}]},
         {
          RowBox[{"-", "\[Infinity]"}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}], "+", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", "k", "+", 
              RowBox[{"2", " ", "n"}]}], ")"}], " ", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", "p"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", "k"}], ")"}], " ", 
            RowBox[{"Log", "[", "p", "]"}]}], "+", 
           RowBox[{"Log", "[", 
            RowBox[{
             FractionBox["1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
             RowBox[{"Binomial", "[", 
              RowBox[{"n", ",", "k"}], "]"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"3", "\[LessEqual]", "n"}], "&&", 
           RowBox[{"0", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}]},
         {
          RowBox[{"-", "\[Infinity]"}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}]}]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"a5ff7646-5d0a-41d7-b0d1-1c8f7fc5d0c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Graph", "@", 
  RowBox[{"parameterMixtureVectorDistribution", "[", 
   RowBox[{
    RowBox[{"p", " ", "\[Distributed]", " ", 
     RowBox[{"BetaDistribution", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", " ", 
    RowBox[{"k", "\[Distributed]", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "@", 
  RowBox[{"parameterMixtureVectorDistribution", "[", 
   RowBox[{
    RowBox[{"n", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", "]"}]}], ",", " ", 
    RowBox[{"p", " ", "\[Distributed]", " ", 
     RowBox[{"BetaDistribution", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", " ", 
    RowBox[{"k", "\[Distributed]", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"n", ",", "p"}], "]"}]}], ",", " ", 
    RowBox[{"l", "\[Distributed]", 
     RowBox[{"GeometricDistribution", "[", 
      RowBox[{"p", "/", "k"}], "]"}]}]}], "]"}]}]}], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"09ea3563-f2e2-49b2-a901-9975525e26ed"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`p, $CellContext`k}, {{{1, 2}}, Null}, {
      VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["p", Offset[{2, 2}, {1.01273, 0.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["k", Offset[{2, 2}, {0.01273, 0.012730000000000123}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"91cd871d-9d58-4793-bdd1-2a0e9b6b3264"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`n, $CellContext`p, $CellContext`k, $CellContext`l}, \
{{{1, 3}, {2, 3}, {3, 4}, {2, 4}}, Null}, {VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {0., 1.}}, 0.02261146496815286], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
         "]], 0.02261146496815286], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 2.}, 0.02261146496815286], 
         InsetBox["n", 
          Offset[{2, 2}, {0.02261146496815286, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.02261146496815286], 
         InsetBox["p", 
          Offset[{2, 2}, {1.0226114649681528, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.02261146496815286], 
         InsetBox["k", 
          Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.02261146496815286], 
         InsetBox["l", 
          Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"c956c70d-0859-4db4-ba6a-bf7a053cad73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "@", 
  RowBox[{"parameterMixtureVectorDistribution", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]1", ",", "\[Sigma]2"}], "}"}], "\[Distributed]", 
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}], ",", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}]}], ",", 
    RowBox[{"\[Rho]", "\[Distributed]", 
     RowBox[{"BetaDistribution", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "\[Distributed]", 
     RowBox[{"BinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]1", ",", "\[Sigma]2"}], "}"}], ",", "\[Rho]"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"3a0181b0-1786-4c30-a883-3044a4d0c921"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Rho], $CellContext`a, $CellContext`b}, {{{1, 4}, {1, 5}, {2, 4}, {2, 5}, {3,
        4}, {3, 5}}, Null}, {VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.02261146496815286], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.02261146496815286], 
        ArrowBox[{{2., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{2., 1.}, {1., 0.}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.02261146496815286], 
         InsetBox["\[Sigma]1", 
          Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.02261146496815286], 
         InsetBox["\[Sigma]2", 
          Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.02261146496815286], 
         InsetBox["\[Rho]", 
          Offset[{2, 2}, {2.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.02261146496815286], 
         InsetBox["a", 
          Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.02261146496815286], 
         InsetBox["b", 
          Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"a6454238-f3c8-4494-b4ca-3f2c8873580e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RandomVariate", "[", 
  RowBox[{"parameterMixtureVectorDistribution", "[", 
   RowBox[{
    RowBox[{"p", " ", "\[Distributed]", " ", 
     RowBox[{"BetaDistribution", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ",", 
    RowBox[{"k", "\[Distributed]", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"10", ",", "p"}], "]"}]}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", 
    RowBox[{
     RowBox[{"p", " ", "\[Distributed]", " ", 
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], ",", 
     RowBox[{"k", "\[Distributed]", 
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"10", ",", "p"}], "]"}]}]}], "]"}], ",", "3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", 
    RowBox[{
     RowBox[{"p", " ", "\[Distributed]", " ", 
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], ",", 
     RowBox[{"k", "\[Distributed]", 
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"10", ",", "p"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"c84c7dcb-ac67-4802-b768-24300587b27c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"p", "\[Rule]", "0.3867316705175854`"}], ",", 
   RowBox[{"k", "\[Rule]", "3"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[59]=",ExpressionUUID->"453145bf-5318-4199-aac6-686b948fd734"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"p", "\[Rule]", "0.4260742083852037`"}], ",", 
     RowBox[{"k", "\[Rule]", "5"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"p", "\[Rule]", "0.3190184921285917`"}], ",", 
     RowBox[{"k", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"p", "\[Rule]", "0.7097079745977222`"}], ",", 
     RowBox[{"k", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"3314d1f6-faa7-45a8-8d84-a8fa87433625"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.03329212068969756`"}], ",", 
       RowBox[{"k", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.24411533067060176`"}], ",", 
       RowBox[{"k", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.1646361125950201`"}], ",", 
       RowBox[{"k", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.16970268567920155`"}], ",", 
       RowBox[{"k", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.4418366912227961`"}], ",", 
       RowBox[{"k", "\[Rule]", "7"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.5121243673691354`"}], ",", 
       RowBox[{"k", "\[Rule]", "4"}]}], "\[RightAssociation]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.42858328104848475`"}], ",", 
       RowBox[{"k", "\[Rule]", "8"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.14777953325009197`"}], ",", 
       RowBox[{"k", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.1669956113649036`"}], ",", 
       RowBox[{"k", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.48272326676826016`"}], ",", 
       RowBox[{"k", "\[Rule]", "7"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.27563846309916173`"}], ",", 
       RowBox[{"k", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.3707274468925402`"}], ",", 
       RowBox[{"k", "\[Rule]", "6"}]}], "\[RightAssociation]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.9827624561624516`"}], ",", 
       RowBox[{"k", "\[Rule]", "10"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.7631431377731839`"}], ",", 
       RowBox[{"k", "\[Rule]", "7"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"p", "\[Rule]", "0.9659615037359651`"}], ",", 
       RowBox[{"k", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"5fc65e01-3575-48d2-9bfe-9daf379a6812"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"parameterMixtureVectorDistribution", "[", 
   RowBox[{
    RowBox[{"p", " ", "\[Distributed]", " ", 
     RowBox[{"BetaDistribution", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ",", 
    RowBox[{"k", "\[Distributed]", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"a2218db6-5faa-4904-8d47-61d69fd7ff91"],

Cell[BoxData[
 TemplateBox[{
  "BinomialDistribution", "nnintprm", 
   "\"Parameter \\!\\(\\*RowBox[{\\\"n\\\"}]\\) at position \\!\\(\\*RowBox[{\
\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"BinomialDistribution\\\", \\\"[\\\", \
RowBox[{\\\"n\\\", \\\",\\\", \\\"0.48008773630045376`\\\"}], \\\"]\\\"}]\\) \
is expected to be a non-negative integer.\"", 2, 62, 9, 16877458112534296328, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"324ae7fd-ffc0-43e2-b431-41b8789a6862"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"57d3595d-6835-431a-9ef5-019585f558ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RandomVariate", "[", 
  RowBox[{"parameterMixtureVectorDistribution", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], " ", "\[Distributed]", " ", 
     RowBox[{"BinormalDistribution", "[", "0.5", "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "\[Distributed]", 
     RowBox[{"BinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "0.3"}], "]"}]}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], " ", "\[Distributed]", " ", 
      RowBox[{"BinormalDistribution", "[", "0.5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "\[Distributed]", 
      RowBox[{"BinormalDistribution", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "0.3"}], "]"}]}]}], "]"}], ",", 
   "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], " ", "\[Distributed]", " ", 
      RowBox[{"BinormalDistribution", "[", "0.5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "\[Distributed]", 
      RowBox[{"BinormalDistribution", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "0.3"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"d768b2d6-554c-4ad5-a17c-7639b29bf0a4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\[Mu]1", "\[Rule]", 
    RowBox[{"-", "1.1611061649911203`"}]}], ",", 
   RowBox[{"\[Mu]2", "\[Rule]", "0.4507511232778775`"}], ",", 
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "0.4423912879559939`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "0.11479950087535112`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"65e2387d-feda-4622-9d18-9d968f441710"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[Mu]1", "\[Rule]", "1.3504988155199202`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", 
      RowBox[{"-", "0.5124883455691379`"}]}], ",", 
     RowBox[{"a", "\[Rule]", "0.2479102862949607`"}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"-", "2.33977043257787`"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[Mu]1", "\[Rule]", "0.2831844898932683`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", 
      RowBox[{"-", "0.31952682781755115`"}]}], ",", 
     RowBox[{"a", "\[Rule]", "1.0144131669498941`"}], ",", 
     RowBox[{"b", "\[Rule]", "1.0145650988417432`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[Mu]1", "\[Rule]", "0.430136772146524`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "0.7119035661496513`"}], ",", 
     RowBox[{"a", "\[Rule]", "1.3626351851354437`"}], ",", 
     RowBox[{"b", "\[Rule]", "4.151623606948223`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"2feb9020-49a3-4e51-82b5-cbdbf32694c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "2.5935469921954564`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "0.7763754836787107`"}]}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "2.958094055228285`"}]}], ",", 
       RowBox[{"b", "\[Rule]", "0.6352965992821051`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "0.6653961555597094`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "0.253407755939813`"}]}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "0.5622375498010388`"}]}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "1.7545394713306077`"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "0.943482474366095`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "0.12402407978604746`"}]}], ",", 
       RowBox[{"a", "\[Rule]", "0.5565075676452742`"}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "1.8550855802832178`"}]}]}], "\[RightAssociation]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "0.27211771132974805`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", "2.5494409484108416`"}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "1.7061922947149837`"}]}], ",", 
       RowBox[{"b", "\[Rule]", "5.721505311962138`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "1.981839486387104`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "1.5288278643070274`"}]}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "1.2206898260221495`"}]}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "0.5320582135287079`"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "0.6310719592632084`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "1.1964920267235732`"}]}], ",", 
       RowBox[{"a", "\[Rule]", "1.0571089407953986`"}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "0.3621530171819911`"}]}]}], "\[RightAssociation]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "0.4269234319144859`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "0.9784605657276187`"}]}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "0.4695855760868582`"}]}], ",", 
       RowBox[{"b", "\[Rule]", "1.926674623871126`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "0.26462857161417724`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", "0.9669616834657917`"}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "0.5310615417601963`"}]}], ",", 
       RowBox[{"b", "\[Rule]", "0.20244114354177245`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "0.3734627425215945`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "1.0066040334951412`"}]}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "0.688217352125229`"}]}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "2.2032273734362757`"}]}]}], "\[RightAssociation]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "0.611637759461948`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "0.43642929057818686`"}]}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "0.12660834226677525`"}]}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "0.33513197291280417`"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", 
        RowBox[{"-", "1.0180830983889826`"}]}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "1.5572960093851742`"}]}], ",", 
       RowBox[{"a", "\[Rule]", "0.734302591075034`"}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "1.4451645148081507`"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "0.6525270663417607`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", "0.8689572614680976`"}], ",", 
       RowBox[{"a", "\[Rule]", "0.06260739273505989`"}], ",", 
       RowBox[{"b", "\[Rule]", "0.22781801562076365`"}]}], 
      "\[RightAssociation]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "1.316711333180851`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", "0.6197264651326992`"}], ",", 
       RowBox[{"a", "\[Rule]", 
        RowBox[{"-", "1.428972699394877`"}]}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "2.317932750847972`"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "0.9750975665054884`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", "0.036827026946167296`"}], ",", 
       RowBox[{"a", "\[Rule]", "3.0546638787433373`"}], ",", 
       RowBox[{"b", "\[Rule]", "2.7672504408751952`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\[Mu]1", "\[Rule]", "2.2874127457494913`"}], ",", 
       RowBox[{"\[Mu]2", "\[Rule]", 
        RowBox[{"-", "1.1620945507015543`"}]}], ",", 
       RowBox[{"a", "\[Rule]", "3.039362691031215`"}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "3.4987182081824915`"}]}]}], "\[RightAssociation]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"f1d9fb23-1b5d-4581-a3dd-49d388c200ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"parameterMixtureVectorDistribution", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", " ", "\[Distributed]", " ", 
      RowBox[{"InverseWishartMatrixDistribution", "[", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]", "\[Distributed]", 
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "\[CapitalSigma]"}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\[Nu]", "\[Distributed]", 
      RowBox[{"InverseGammaDistribution", "[", 
       RowBox[{"5", ",", " ", "10"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", 
        RowBox[{"\[Nu]", " ", "\[CapitalSigma]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "10"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"0ecbf867-ac5b-4460-b0b9-3466f86f9337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.17631704478148894`", ",", "0.07168683604012475`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.07168683604012475`", ",", "0.13331102233115585`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.18398734016493326`"}], ",", "0.31429346910312195`"}], 
       "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "2.456145284571606`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.305679489899654`"}], ",", "0.05340538109879778`"}], 
       "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.05972216253886573`", ",", "0.04229030840570549`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.04229030840570549`", ",", "0.10152337149539074`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.19513068820762713`", ",", "0.40855150941187557`"}], "}"}]}],
      ",", 
     RowBox[{"\[Nu]", "\[Rule]", "2.680192258245256`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5923804984465146`", ",", "0.8692936568825568`"}], "}"}]}]}],
     "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.07338838589433824`", ",", "0.0935979883108694`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.0935979883108694`", ",", "0.28759430154115345`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.2140782784611631`", ",", "0.4596326788838202`"}], "}"}]}], 
     ",", 
     RowBox[{"\[Nu]", "\[Rule]", "1.898084193493886`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5705854781306473`", ",", "0.9168532900850628`"}], "}"}]}]}],
     "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.1952655705457974`", ",", "0.00427648616509121`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.00427648616509121`", ",", "0.1457336225398285`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.3545695540807261`"}], ",", 
        RowBox[{"-", "0.025112659895393578`"}]}], "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "3.009264376470169`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.0734665533407384`"}], ",", "0.41183287991021866`"}], 
       "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.10251173754372099`", ",", "0.06294556111048058`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.06294556111048058`", ",", "0.09357640029444093`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1825490061222898`"}], ",", 
        RowBox[{"-", "0.4412614064528427`"}]}], "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "3.9869890548040368`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.004238116839228756`"}], ",", 
        RowBox[{"-", "0.38843926735309475`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.04924983641764116`", ",", "0.029623943976726103`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.029623943976726103`", ",", "0.15235944177182054`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.13223300271093935`"}], ",", "0.6057323068949629`"}], 
       "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "1.4012811896769028`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5457217223920783`", ",", "1.5842755848361676`"}], "}"}]}]}],
     "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.10224488935527565`", ",", "0.023364537425511492`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.023364537425511492`", ",", "0.06334348712599808`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.012065219895544255`", ",", 
        RowBox[{"-", "0.1849206095181941`"}]}], "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "2.8223399779865526`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.41479500170434735`"}], ",", 
        RowBox[{"-", "0.6546953864562121`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.09597952219037319`", ",", "0.01511873079175674`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.01511873079175674`", ",", "0.04229064060012092`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.08665469769992248`"}], ",", 
        RowBox[{"-", "0.17674645606798192`"}]}], "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "2.0327995367508764`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.0984251810370414`"}], ",", 
        RowBox[{"-", "0.10329983705815587`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.11443401748438574`", ",", "0.041885742900699144`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.041885742900699144`", ",", "0.07784741812795114`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.08765666114550177`"}], ",", 
        RowBox[{"-", "0.042794302970934596`"}]}], "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "1.118097517240521`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.47666348827319804`", ",", 
        RowBox[{"-", "0.215349632328493`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.1541040388479932`", ",", "0.02694042928292849`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.02694042928292849`", ",", "0.06936111975801405`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.15086929316243422`"}], ",", "0.08058756607761798`"}], 
       "}"}]}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", "2.8868482112261598`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.15893217217257283`"}], ",", "0.3639510361752806`"}], 
       "}"}]}]}], "\[RightAssociation]"}]}], "}"}]], "Output",
 CellLabel->"Out[74]=",ExpressionUUID->"9ac431f8-b298-452b-9192-b5993ffc7add"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "FunctionRepo`"}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"f692eb66-639d-4184-8219-378f58eedb9a"]
}, Closed]]
},
WindowSize->{1814, 888},
WindowMargins->{{Automatic, 40}, {31, Automatic}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TaggingRules->{"SaveDialogDataSavesBlog" -> False, "TryRealOnly" -> False},
TrackCellChangeTimes->False,
Magnification:>1. Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9220aa73-8720-4446-a63d-8589ef2eb51f"
]

